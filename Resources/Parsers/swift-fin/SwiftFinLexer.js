// Generated from ./swift-fin/SwiftFinLexer.g4 by ANTLR 4.10.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,18,149,6,-1,6,-1,6,-1,6,-1,2,0,7,0,2,1,7,1,2,
2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,
2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,
18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,
7,25,2,26,7,26,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,
2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,6,1,
6,1,6,1,6,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,3,11,105,8,11,1,
11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,17,
1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,21,1,
21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,25,1,25,1,26,1,26,0,0,
27,4,1,6,2,8,3,10,0,12,4,14,5,16,6,18,7,20,8,22,9,24,10,26,0,28,0,30,0,32,
0,34,0,36,0,38,0,40,0,42,11,44,12,46,13,48,14,50,15,52,16,54,17,56,18,4,
0,1,2,3,1,1,0,58,58,139,0,4,1,0,0,0,0,6,1,0,0,0,0,8,1,0,0,0,0,12,1,0,0,0,
0,14,1,0,0,0,0,16,1,0,0,0,0,18,1,0,0,0,0,20,1,0,0,0,0,22,1,0,0,0,0,24,1,
0,0,0,1,38,1,0,0,0,1,40,1,0,0,0,1,42,1,0,0,0,1,44,1,0,0,0,2,46,1,0,0,0,2,
48,1,0,0,0,2,50,1,0,0,0,2,52,1,0,0,0,3,54,1,0,0,0,3,56,1,0,0,0,4,58,1,0,
0,0,6,64,1,0,0,0,8,70,1,0,0,0,10,76,1,0,0,0,12,80,1,0,0,0,14,85,1,0,0,0,
16,89,1,0,0,0,18,95,1,0,0,0,20,97,1,0,0,0,22,99,1,0,0,0,24,101,1,0,0,0,26,
104,1,0,0,0,28,108,1,0,0,0,30,110,1,0,0,0,32,112,1,0,0,0,34,114,1,0,0,0,
36,116,1,0,0,0,38,118,1,0,0,0,40,123,1,0,0,0,42,128,1,0,0,0,44,130,1,0,0,
0,46,132,1,0,0,0,48,137,1,0,0,0,50,139,1,0,0,0,52,141,1,0,0,0,54,143,1,0,
0,0,56,147,1,0,0,0,58,59,3,28,12,0,59,60,5,49,0,0,60,61,3,32,14,0,61,62,
1,0,0,0,62,63,6,0,0,0,63,5,1,0,0,0,64,65,3,28,12,0,65,66,5,50,0,0,66,67,
3,32,14,0,67,68,1,0,0,0,68,69,6,1,0,0,69,7,1,0,0,0,70,71,3,28,12,0,71,72,
5,51,0,0,72,73,3,32,14,0,73,74,1,0,0,0,74,75,6,2,1,0,75,9,1,0,0,0,76,77,
3,28,12,0,77,78,5,52,0,0,78,79,3,32,14,0,79,11,1,0,0,0,80,81,3,10,3,0,81,
82,3,26,11,0,82,83,1,0,0,0,83,84,6,4,2,0,84,13,1,0,0,0,85,86,3,10,3,0,86,
87,1,0,0,0,87,88,6,5,1,0,88,15,1,0,0,0,89,90,3,28,12,0,90,91,5,53,0,0,91,
92,3,32,14,0,92,93,1,0,0,0,93,94,6,6,1,0,94,17,1,0,0,0,95,96,3,28,12,0,96,
19,1,0,0,0,97,98,3,30,13,0,98,21,1,0,0,0,99,100,3,32,14,0,100,23,1,0,0,0,
101,102,3,26,11,0,102,25,1,0,0,0,103,105,5,13,0,0,104,103,1,0,0,0,104,105,
1,0,0,0,105,106,1,0,0,0,106,107,5,10,0,0,107,27,1,0,0,0,108,109,5,123,0,
0,109,29,1,0,0,0,110,111,5,125,0,0,111,31,1,0,0,0,112,113,5,58,0,0,113,33,
1,0,0,0,114,115,5,45,0,0,115,35,1,0,0,0,116,117,9,0,0,0,117,37,1,0,0,0,118,
119,3,28,12,0,119,120,1,0,0,0,120,121,6,17,3,0,121,122,6,17,1,0,122,39,1,
0,0,0,123,124,3,30,13,0,124,125,1,0,0,0,125,126,6,18,4,0,126,127,6,18,5,
0,127,41,1,0,0,0,128,129,3,32,14,0,129,43,1,0,0,0,130,131,8,0,0,0,131,45,
1,0,0,0,132,133,3,34,15,0,133,134,3,30,13,0,134,135,1,0,0,0,135,136,6,21,
5,0,136,47,1,0,0,0,137,138,3,32,14,0,138,49,1,0,0,0,139,140,3,26,11,0,140,
51,1,0,0,0,141,142,8,0,0,0,142,53,1,0,0,0,143,144,3,30,13,0,144,145,1,0,
0,0,145,146,6,25,5,0,146,55,1,0,0,0,147,148,3,36,16,0,148,57,1,0,0,0,5,0,
1,2,3,104,6,5,3,0,5,1,0,5,2,0,7,7,0,7,8,0,4,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class SwiftFinLexer extends antlr4.Lexer {

    static grammarFileName = "SwiftFinLexer.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE", "InsideMaps", "InsideB4", "InsideValue" ];
	static literalNames = [  ];
	static symbolicNames = [ null, "BLOCK1", "BLOCK2", "BLOCK3", "BLOCK4_A", 
                          "BLOCK4_B", "BLOCK5", "LBRACE", "RBRACE", "COLON", 
                          "CRLF", "M_COLON", "M_VALUE", "B4_END", "B4_COLON", 
                          "B4_CRLF", "B4_VALUE", "V_END", "V_VALUE" ];
	static ruleNames = [ "BLOCK1", "BLOCK2", "BLOCK3", "Block4", "BLOCK4_A", 
                      "BLOCK4_B", "BLOCK5", "LBRACE", "RBRACE", "COLON", 
                      "CRLF", "Crlf", "LBrace", "RBrace", "Colon", "Minus", 
                      "Any", "M_LBRACE", "M_RBRACE", "M_COLON", "M_VALUE", 
                      "B4_END", "B4_COLON", "B4_CRLF", "B4_VALUE", "V_END", 
                      "V_VALUE" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

SwiftFinLexer.EOF = antlr4.Token.EOF;
SwiftFinLexer.BLOCK1 = 1;
SwiftFinLexer.BLOCK2 = 2;
SwiftFinLexer.BLOCK3 = 3;
SwiftFinLexer.BLOCK4_A = 4;
SwiftFinLexer.BLOCK4_B = 5;
SwiftFinLexer.BLOCK5 = 6;
SwiftFinLexer.LBRACE = 7;
SwiftFinLexer.RBRACE = 8;
SwiftFinLexer.COLON = 9;
SwiftFinLexer.CRLF = 10;
SwiftFinLexer.M_COLON = 11;
SwiftFinLexer.M_VALUE = 12;
SwiftFinLexer.B4_END = 13;
SwiftFinLexer.B4_COLON = 14;
SwiftFinLexer.B4_CRLF = 15;
SwiftFinLexer.B4_VALUE = 16;
SwiftFinLexer.V_END = 17;
SwiftFinLexer.V_VALUE = 18;

SwiftFinLexer.InsideMaps = 1;
SwiftFinLexer.InsideB4 = 2;
SwiftFinLexer.InsideValue = 3;




