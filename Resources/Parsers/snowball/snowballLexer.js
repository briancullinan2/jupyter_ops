// Generated from ./snowball/snowball.g4 by ANTLR 4.10.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,77,571,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,
2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,
56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,
70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,
2,78,7,78,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,
2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,
4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,
6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,
8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,11,1,11,1,11,1,12,
1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,
15,1,15,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,
1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,
21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,
1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,
26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,29,
1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,33,1,
34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,35,
1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,
37,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,
1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,
41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,
1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,
45,1,45,1,46,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,48,1,48,1,49,
1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,50,1,51,1,51,1,52,1,52,1,
53,1,53,1,53,1,54,1,54,1,54,1,55,1,55,1,55,1,56,1,56,1,56,1,57,1,57,1,57,
1,58,1,58,1,58,1,59,1,59,1,60,1,60,1,60,1,61,1,61,1,62,1,62,1,62,1,63,1,
63,1,64,1,64,1,65,1,65,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,67,1,67,1,67,
1,67,1,67,1,67,1,67,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,69,1,69,1,69,1,
69,1,69,1,69,1,70,1,70,1,70,1,70,1,70,1,71,1,71,1,71,1,71,1,71,1,71,1,71,
1,72,1,72,5,72,538,8,72,10,72,12,72,541,9,72,1,72,1,72,1,73,4,73,546,8,73,
11,73,12,73,547,1,74,1,74,1,75,1,75,1,75,1,75,5,75,556,8,75,10,75,12,75,
559,9,75,1,76,1,76,1,77,1,77,1,78,4,78,566,8,78,11,78,12,78,567,1,78,1,78,
0,0,79,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,
14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,
26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,
38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,
50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,
121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,69,139,70,141,
71,143,72,145,73,147,74,149,75,151,76,153,0,155,0,157,77,1,0,5,1,0,39,39,
2,0,43,43,45,45,2,0,65,90,97,122,1,0,48,57,3,0,9,10,13,13,32,32,574,0,1,
1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,
1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,
0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,
0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,
47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,
0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,
1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,
0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,
0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,
0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,
113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,
1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,
0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,
0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,157,1,0,0,
0,1,159,1,0,0,0,3,172,1,0,0,0,5,174,1,0,0,0,7,176,1,0,0,0,9,184,1,0,0,0,
11,193,1,0,0,0,13,202,1,0,0,0,15,211,1,0,0,0,17,221,1,0,0,0,19,231,1,0,0,
0,21,238,1,0,0,0,23,241,1,0,0,0,25,244,1,0,0,0,27,248,1,0,0,0,29,252,1,0,
0,0,31,257,1,0,0,0,33,261,1,0,0,0,35,264,1,0,0,0,37,269,1,0,0,0,39,274,1,
0,0,0,41,281,1,0,0,0,43,288,1,0,0,0,45,293,1,0,0,0,47,301,1,0,0,0,49,303,
1,0,0,0,51,310,1,0,0,0,53,317,1,0,0,0,55,320,1,0,0,0,57,327,1,0,0,0,59,331,
1,0,0,0,61,336,1,0,0,0,63,339,1,0,0,0,65,341,1,0,0,0,67,343,1,0,0,0,69,346,
1,0,0,0,71,354,1,0,0,0,73,361,1,0,0,0,75,368,1,0,0,0,77,376,1,0,0,0,79,384,
1,0,0,0,81,393,1,0,0,0,83,397,1,0,0,0,85,407,1,0,0,0,87,415,1,0,0,0,89,425,
1,0,0,0,91,431,1,0,0,0,93,435,1,0,0,0,95,441,1,0,0,0,97,445,1,0,0,0,99,447,
1,0,0,0,101,452,1,0,0,0,103,458,1,0,0,0,105,460,1,0,0,0,107,462,1,0,0,0,
109,465,1,0,0,0,111,468,1,0,0,0,113,471,1,0,0,0,115,474,1,0,0,0,117,477,
1,0,0,0,119,480,1,0,0,0,121,482,1,0,0,0,123,485,1,0,0,0,125,487,1,0,0,0,
127,490,1,0,0,0,129,492,1,0,0,0,131,494,1,0,0,0,133,496,1,0,0,0,135,503,
1,0,0,0,137,510,1,0,0,0,139,517,1,0,0,0,141,523,1,0,0,0,143,528,1,0,0,0,
145,535,1,0,0,0,147,545,1,0,0,0,149,549,1,0,0,0,151,551,1,0,0,0,153,560,
1,0,0,0,155,562,1,0,0,0,157,565,1,0,0,0,159,160,5,98,0,0,160,161,5,97,0,
0,161,162,5,99,0,0,162,163,5,107,0,0,163,164,5,119,0,0,164,165,5,97,0,0,
165,166,5,114,0,0,166,167,5,100,0,0,167,168,5,109,0,0,168,169,5,111,0,0,
169,170,5,100,0,0,170,171,5,101,0,0,171,2,1,0,0,0,172,173,5,40,0,0,173,4,
1,0,0,0,174,175,5,41,0,0,175,6,1,0,0,0,176,177,5,115,0,0,177,178,5,116,0,
0,178,179,5,114,0,0,179,180,5,105,0,0,180,181,5,110,0,0,181,182,5,103,0,
0,182,183,5,115,0,0,183,8,1,0,0,0,184,185,5,105,0,0,185,186,5,110,0,0,186,
187,5,116,0,0,187,188,5,101,0,0,188,189,5,103,0,0,189,190,5,101,0,0,190,
191,5,114,0,0,191,192,5,115,0,0,192,10,1,0,0,0,193,194,5,98,0,0,194,195,
5,111,0,0,195,196,5,111,0,0,196,197,5,108,0,0,197,198,5,101,0,0,198,199,
5,97,0,0,199,200,5,110,0,0,200,201,5,115,0,0,201,12,1,0,0,0,202,203,5,114,
0,0,203,204,5,111,0,0,204,205,5,117,0,0,205,206,5,116,0,0,206,207,5,105,
0,0,207,208,5,110,0,0,208,209,5,101,0,0,209,210,5,115,0,0,210,14,1,0,0,0,
211,212,5,101,0,0,212,213,5,120,0,0,213,214,5,116,0,0,214,215,5,101,0,0,
215,216,5,114,0,0,216,217,5,110,0,0,217,218,5,97,0,0,218,219,5,108,0,0,219,
220,5,115,0,0,220,16,1,0,0,0,221,222,5,103,0,0,222,223,5,114,0,0,223,224,
5,111,0,0,224,225,5,117,0,0,225,226,5,112,0,0,226,227,5,105,0,0,227,228,
5,110,0,0,228,229,5,103,0,0,229,230,5,115,0,0,230,18,1,0,0,0,231,232,5,100,
0,0,232,233,5,101,0,0,233,234,5,102,0,0,234,235,5,105,0,0,235,236,5,110,
0,0,236,237,5,101,0,0,237,20,1,0,0,0,238,239,5,97,0,0,239,240,5,115,0,0,
240,22,1,0,0,0,241,242,5,111,0,0,242,243,5,114,0,0,243,24,1,0,0,0,244,245,
5,97,0,0,245,246,5,110,0,0,246,247,5,100,0,0,247,26,1,0,0,0,248,249,5,110,
0,0,249,250,5,111,0,0,250,251,5,116,0,0,251,28,1,0,0,0,252,253,5,116,0,0,
253,254,5,101,0,0,254,255,5,115,0,0,255,256,5,116,0,0,256,30,1,0,0,0,257,
258,5,116,0,0,258,259,5,114,0,0,259,260,5,121,0,0,260,32,1,0,0,0,261,262,
5,100,0,0,262,263,5,111,0,0,263,34,1,0,0,0,264,265,5,102,0,0,265,266,5,97,
0,0,266,267,5,105,0,0,267,268,5,108,0,0,268,36,1,0,0,0,269,270,5,103,0,0,
270,271,5,111,0,0,271,272,5,116,0,0,272,273,5,111,0,0,273,38,1,0,0,0,274,
275,5,103,0,0,275,276,5,111,0,0,276,277,5,112,0,0,277,278,5,97,0,0,278,279,
5,115,0,0,279,280,5,116,0,0,280,40,1,0,0,0,281,282,5,114,0,0,282,283,5,101,
0,0,283,284,5,112,0,0,284,285,5,101,0,0,285,286,5,97,0,0,286,287,5,116,0,
0,287,42,1,0,0,0,288,289,5,108,0,0,289,290,5,111,0,0,290,291,5,111,0,0,291,
292,5,112,0,0,292,44,1,0,0,0,293,294,5,97,0,0,294,295,5,116,0,0,295,296,
5,108,0,0,296,297,5,101,0,0,297,298,5,97,0,0,298,299,5,115,0,0,299,300,5,
116,0,0,300,46,1,0,0,0,301,302,5,61,0,0,302,48,1,0,0,0,303,304,5,105,0,0,
304,305,5,110,0,0,305,306,5,115,0,0,306,307,5,101,0,0,307,308,5,114,0,0,
308,309,5,116,0,0,309,50,1,0,0,0,310,311,5,97,0,0,311,312,5,116,0,0,312,
313,5,116,0,0,313,314,5,97,0,0,314,315,5,99,0,0,315,316,5,104,0,0,316,52,
1,0,0,0,317,318,5,60,0,0,318,319,5,45,0,0,319,54,1,0,0,0,320,321,5,100,0,
0,321,322,5,101,0,0,322,323,5,108,0,0,323,324,5,101,0,0,324,325,5,116,0,
0,325,326,5,101,0,0,326,56,1,0,0,0,327,328,5,104,0,0,328,329,5,111,0,0,329,
330,5,112,0,0,330,58,1,0,0,0,331,332,5,110,0,0,332,333,5,101,0,0,333,334,
5,120,0,0,334,335,5,116,0,0,335,60,1,0,0,0,336,337,5,61,0,0,337,338,5,62,
0,0,338,62,1,0,0,0,339,340,5,91,0,0,340,64,1,0,0,0,341,342,5,93,0,0,342,
66,1,0,0,0,343,344,5,45,0,0,344,345,5,62,0,0,345,68,1,0,0,0,346,347,5,115,
0,0,347,348,5,101,0,0,348,349,5,116,0,0,349,350,5,109,0,0,350,351,5,97,0,
0,351,352,5,114,0,0,352,353,5,107,0,0,353,70,1,0,0,0,354,355,5,116,0,0,355,
356,5,111,0,0,356,357,5,109,0,0,357,358,5,97,0,0,358,359,5,114,0,0,359,360,
5,107,0,0,360,72,1,0,0,0,361,362,5,97,0,0,362,363,5,116,0,0,363,364,5,109,
0,0,364,365,5,97,0,0,365,366,5,114,0,0,366,367,5,107,0,0,367,74,1,0,0,0,
368,369,5,116,0,0,369,370,5,111,0,0,370,371,5,108,0,0,371,372,5,105,0,0,
372,373,5,109,0,0,373,374,5,105,0,0,374,375,5,116,0,0,375,76,1,0,0,0,376,
377,5,97,0,0,377,378,5,116,0,0,378,379,5,108,0,0,379,380,5,105,0,0,380,381,
5,109,0,0,381,382,5,105,0,0,382,383,5,116,0,0,383,78,1,0,0,0,384,385,5,115,
0,0,385,386,5,101,0,0,386,387,5,116,0,0,387,388,5,108,0,0,388,389,5,105,
0,0,389,390,5,109,0,0,390,391,5,105,0,0,391,392,5,116,0,0,392,80,1,0,0,0,
393,394,5,102,0,0,394,395,5,111,0,0,395,396,5,114,0,0,396,82,1,0,0,0,397,
398,5,98,0,0,398,399,5,97,0,0,399,400,5,99,0,0,400,401,5,107,0,0,401,402,
5,119,0,0,402,403,5,97,0,0,403,404,5,114,0,0,404,405,5,100,0,0,405,406,5,
115,0,0,406,84,1,0,0,0,407,408,5,114,0,0,408,409,5,101,0,0,409,410,5,118,
0,0,410,411,5,101,0,0,411,412,5,114,0,0,412,413,5,115,0,0,413,414,5,101,
0,0,414,86,1,0,0,0,415,416,5,115,0,0,416,417,5,117,0,0,417,418,5,98,0,0,
418,419,5,115,0,0,419,420,5,116,0,0,420,421,5,114,0,0,421,422,5,105,0,0,
422,423,5,110,0,0,423,424,5,103,0,0,424,88,1,0,0,0,425,426,5,97,0,0,426,
427,5,109,0,0,427,428,5,111,0,0,428,429,5,110,0,0,429,430,5,103,0,0,430,
90,1,0,0,0,431,432,5,115,0,0,432,433,5,101,0,0,433,434,5,116,0,0,434,92,
1,0,0,0,435,436,5,117,0,0,436,437,5,110,0,0,437,438,5,115,0,0,438,439,5,
101,0,0,439,440,5,116,0,0,440,94,1,0,0,0,441,442,5,110,0,0,442,443,5,111,
0,0,443,444,5,110,0,0,444,96,1,0,0,0,445,446,5,45,0,0,446,98,1,0,0,0,447,
448,5,116,0,0,448,449,5,114,0,0,449,450,5,117,0,0,450,451,5,101,0,0,451,
100,1,0,0,0,452,453,5,102,0,0,453,454,5,97,0,0,454,455,5,108,0,0,455,456,
5,115,0,0,456,457,5,101,0,0,457,102,1,0,0,0,458,459,5,63,0,0,459,104,1,0,
0,0,460,461,5,36,0,0,461,106,1,0,0,0,462,463,5,43,0,0,463,464,5,61,0,0,464,
108,1,0,0,0,465,466,5,45,0,0,466,467,5,61,0,0,467,110,1,0,0,0,468,469,5,
42,0,0,469,470,5,61,0,0,470,112,1,0,0,0,471,472,5,47,0,0,472,473,5,61,0,
0,473,114,1,0,0,0,474,475,5,61,0,0,475,476,5,61,0,0,476,116,1,0,0,0,477,
478,5,33,0,0,478,479,5,61,0,0,479,118,1,0,0,0,480,481,5,62,0,0,481,120,1,
0,0,0,482,483,5,62,0,0,483,484,5,61,0,0,484,122,1,0,0,0,485,486,5,60,0,0,
486,124,1,0,0,0,487,488,5,60,0,0,488,489,5,61,0,0,489,126,1,0,0,0,490,491,
5,43,0,0,491,128,1,0,0,0,492,493,5,42,0,0,493,130,1,0,0,0,494,495,5,47,0,
0,495,132,1,0,0,0,496,497,5,109,0,0,497,498,5,97,0,0,498,499,5,120,0,0,499,
500,5,105,0,0,500,501,5,110,0,0,501,502,5,116,0,0,502,134,1,0,0,0,503,504,
5,109,0,0,504,505,5,105,0,0,505,506,5,110,0,0,506,507,5,105,0,0,507,508,
5,110,0,0,508,509,5,116,0,0,509,136,1,0,0,0,510,511,5,99,0,0,511,512,5,117,
0,0,512,513,5,114,0,0,513,514,5,115,0,0,514,515,5,111,0,0,515,516,5,114,
0,0,516,138,1,0,0,0,517,518,5,108,0,0,518,519,5,105,0,0,519,520,5,109,0,
0,520,521,5,105,0,0,521,522,5,116,0,0,522,140,1,0,0,0,523,524,5,115,0,0,
524,525,5,105,0,0,525,526,5,122,0,0,526,527,5,101,0,0,527,142,1,0,0,0,528,
529,5,115,0,0,529,530,5,105,0,0,530,531,5,122,0,0,531,532,5,101,0,0,532,
533,5,111,0,0,533,534,5,102,0,0,534,144,1,0,0,0,535,539,5,39,0,0,536,538,
8,0,0,0,537,536,1,0,0,0,538,541,1,0,0,0,539,537,1,0,0,0,539,540,1,0,0,0,
540,542,1,0,0,0,541,539,1,0,0,0,542,543,5,39,0,0,543,146,1,0,0,0,544,546,
3,155,77,0,545,544,1,0,0,0,546,547,1,0,0,0,547,545,1,0,0,0,547,548,1,0,0,
0,548,148,1,0,0,0,549,550,7,1,0,0,550,150,1,0,0,0,551,557,3,153,76,0,552,
556,3,153,76,0,553,556,3,155,77,0,554,556,5,95,0,0,555,552,1,0,0,0,555,553,
1,0,0,0,555,554,1,0,0,0,556,559,1,0,0,0,557,555,1,0,0,0,557,558,1,0,0,0,
558,152,1,0,0,0,559,557,1,0,0,0,560,561,7,2,0,0,561,154,1,0,0,0,562,563,
7,3,0,0,563,156,1,0,0,0,564,566,7,4,0,0,565,564,1,0,0,0,566,567,1,0,0,0,
567,565,1,0,0,0,567,568,1,0,0,0,568,569,1,0,0,0,569,570,6,78,0,0,570,158,
1,0,0,0,6,0,539,547,555,557,567,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class snowballLexer extends antlr4.Lexer {

    static grammarFileName = "snowball.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'backwardmode'", "'('", "')'", "'strings'", 
                         "'integers'", "'booleans'", "'routines'", "'externals'", 
                         "'groupings'", "'define'", "'as'", "'or'", "'and'", 
                         "'not'", "'test'", "'try'", "'do'", "'fail'", "'goto'", 
                         "'gopast'", "'repeat'", "'loop'", "'atleast'", 
                         "'='", "'insert'", "'attach'", "'<-'", "'delete'", 
                         "'hop'", "'next'", "'=>'", "'['", "']'", "'->'", 
                         "'setmark'", "'tomark'", "'atmark'", "'tolimit'", 
                         "'atlimit'", "'setlimit'", "'for'", "'backwards'", 
                         "'reverse'", "'substring'", "'among'", "'set'", 
                         "'unset'", "'non'", "'-'", "'true'", "'false'", 
                         "'?'", "'$'", "'+='", "'-='", "'*='", "'/='", "'=='", 
                         "'!='", "'>'", "'>='", "'<'", "'<='", "'+'", "'*'", 
                         "'/'", "'maxint'", "'minint'", "'cursor'", "'limit'", 
                         "'size'", "'sizeof'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, "LITERAL_STRING", "NUMBER", "PLUS_OR_MINUS", 
                          "NAME", "WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
                      "T__25", "T__26", "T__27", "T__28", "T__29", "T__30", 
                      "T__31", "T__32", "T__33", "T__34", "T__35", "T__36", 
                      "T__37", "T__38", "T__39", "T__40", "T__41", "T__42", 
                      "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
                      "T__49", "T__50", "T__51", "T__52", "T__53", "T__54", 
                      "T__55", "T__56", "T__57", "T__58", "T__59", "T__60", 
                      "T__61", "T__62", "T__63", "T__64", "T__65", "T__66", 
                      "T__67", "T__68", "T__69", "T__70", "T__71", "LITERAL_STRING", 
                      "NUMBER", "PLUS_OR_MINUS", "NAME", "LETTER", "DIGIT", 
                      "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

snowballLexer.EOF = antlr4.Token.EOF;
snowballLexer.T__0 = 1;
snowballLexer.T__1 = 2;
snowballLexer.T__2 = 3;
snowballLexer.T__3 = 4;
snowballLexer.T__4 = 5;
snowballLexer.T__5 = 6;
snowballLexer.T__6 = 7;
snowballLexer.T__7 = 8;
snowballLexer.T__8 = 9;
snowballLexer.T__9 = 10;
snowballLexer.T__10 = 11;
snowballLexer.T__11 = 12;
snowballLexer.T__12 = 13;
snowballLexer.T__13 = 14;
snowballLexer.T__14 = 15;
snowballLexer.T__15 = 16;
snowballLexer.T__16 = 17;
snowballLexer.T__17 = 18;
snowballLexer.T__18 = 19;
snowballLexer.T__19 = 20;
snowballLexer.T__20 = 21;
snowballLexer.T__21 = 22;
snowballLexer.T__22 = 23;
snowballLexer.T__23 = 24;
snowballLexer.T__24 = 25;
snowballLexer.T__25 = 26;
snowballLexer.T__26 = 27;
snowballLexer.T__27 = 28;
snowballLexer.T__28 = 29;
snowballLexer.T__29 = 30;
snowballLexer.T__30 = 31;
snowballLexer.T__31 = 32;
snowballLexer.T__32 = 33;
snowballLexer.T__33 = 34;
snowballLexer.T__34 = 35;
snowballLexer.T__35 = 36;
snowballLexer.T__36 = 37;
snowballLexer.T__37 = 38;
snowballLexer.T__38 = 39;
snowballLexer.T__39 = 40;
snowballLexer.T__40 = 41;
snowballLexer.T__41 = 42;
snowballLexer.T__42 = 43;
snowballLexer.T__43 = 44;
snowballLexer.T__44 = 45;
snowballLexer.T__45 = 46;
snowballLexer.T__46 = 47;
snowballLexer.T__47 = 48;
snowballLexer.T__48 = 49;
snowballLexer.T__49 = 50;
snowballLexer.T__50 = 51;
snowballLexer.T__51 = 52;
snowballLexer.T__52 = 53;
snowballLexer.T__53 = 54;
snowballLexer.T__54 = 55;
snowballLexer.T__55 = 56;
snowballLexer.T__56 = 57;
snowballLexer.T__57 = 58;
snowballLexer.T__58 = 59;
snowballLexer.T__59 = 60;
snowballLexer.T__60 = 61;
snowballLexer.T__61 = 62;
snowballLexer.T__62 = 63;
snowballLexer.T__63 = 64;
snowballLexer.T__64 = 65;
snowballLexer.T__65 = 66;
snowballLexer.T__66 = 67;
snowballLexer.T__67 = 68;
snowballLexer.T__68 = 69;
snowballLexer.T__69 = 70;
snowballLexer.T__70 = 71;
snowballLexer.T__71 = 72;
snowballLexer.LITERAL_STRING = 73;
snowballLexer.NUMBER = 74;
snowballLexer.PLUS_OR_MINUS = 75;
snowballLexer.NAME = 76;
snowballLexer.WS = 77;



