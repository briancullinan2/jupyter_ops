// Generated from ./lisa/lisa.g4 by ANTLR 4.10.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,48,316,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,1,0,1,0,1,
0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,4,1,4,1,5,1,5,1,
5,1,5,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,9,1,
9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,
1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,
13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,
1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,
18,1,18,1,19,1,19,1,19,1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,22,1,23,1,23,
1,23,1,24,1,24,1,24,1,25,1,25,1,25,1,26,1,26,1,26,1,27,1,27,1,28,1,28,1,
28,1,29,1,29,1,29,1,30,1,30,1,30,1,31,1,31,1,31,1,32,1,32,1,33,1,33,1,34,
1,34,1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,
39,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,
1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,42,1,43,1,43,5,43,278,8,43,10,43,12,
43,281,9,43,1,44,1,44,5,44,285,8,44,10,44,12,44,288,9,44,1,45,1,45,5,45,
292,8,45,10,45,12,45,295,9,45,1,45,1,45,1,46,1,46,1,46,1,46,5,46,303,8,46,
10,46,12,46,306,9,46,1,46,1,46,1,47,4,47,311,8,47,11,47,12,47,312,1,47,1,
47,1,293,0,48,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,
25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,
49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,
73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,
1,0,6,1,0,49,57,1,0,48,57,2,0,65,90,97,122,4,0,48,57,65,90,95,95,97,122,
2,0,10,10,13,13,3,0,9,10,13,13,32,32,320,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,
0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,
1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,
0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,
0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,
51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,
0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,
1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,
0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,
0,0,0,1,97,1,0,0,0,3,105,1,0,0,0,5,107,1,0,0,0,7,109,1,0,0,0,9,111,1,0,0,
0,11,115,1,0,0,0,13,119,1,0,0,0,15,123,1,0,0,0,17,129,1,0,0,0,19,134,1,0,
0,0,21,141,1,0,0,0,23,149,1,0,0,0,25,155,1,0,0,0,27,164,1,0,0,0,29,173,1,
0,0,0,31,175,1,0,0,0,33,177,1,0,0,0,35,179,1,0,0,0,37,186,1,0,0,0,39,196,
1,0,0,0,41,199,1,0,0,0,43,201,1,0,0,0,45,204,1,0,0,0,47,207,1,0,0,0,49,210,
1,0,0,0,51,213,1,0,0,0,53,216,1,0,0,0,55,219,1,0,0,0,57,221,1,0,0,0,59,224,
1,0,0,0,61,227,1,0,0,0,63,230,1,0,0,0,65,233,1,0,0,0,67,235,1,0,0,0,69,237,
1,0,0,0,71,239,1,0,0,0,73,241,1,0,0,0,75,243,1,0,0,0,77,245,1,0,0,0,79,250,
1,0,0,0,81,258,1,0,0,0,83,263,1,0,0,0,85,269,1,0,0,0,87,275,1,0,0,0,89,282,
1,0,0,0,91,289,1,0,0,0,93,298,1,0,0,0,95,310,1,0,0,0,97,98,5,100,0,0,98,
99,5,101,0,0,99,100,5,99,0,0,100,101,5,108,0,0,101,102,5,97,0,0,102,103,
5,114,0,0,103,104,5,101,0,0,104,2,1,0,0,0,105,106,5,123,0,0,106,4,1,0,0,
0,107,108,5,125,0,0,108,6,1,0,0,0,109,110,5,59,0,0,110,8,1,0,0,0,111,112,
5,105,0,0,112,113,5,110,0,0,113,114,5,116,0,0,114,10,1,0,0,0,115,116,5,100,
0,0,116,117,5,102,0,0,117,118,5,97,0,0,118,12,1,0,0,0,119,120,5,110,0,0,
120,121,5,102,0,0,121,122,5,97,0,0,122,14,1,0,0,0,123,124,5,114,0,0,124,
125,5,101,0,0,125,126,5,103,0,0,126,127,5,101,0,0,127,128,5,120,0,0,128,
16,1,0,0,0,129,130,5,98,0,0,130,131,5,111,0,0,131,132,5,111,0,0,132,133,
5,108,0,0,133,18,1,0,0,0,134,135,5,115,0,0,135,136,5,116,0,0,136,137,5,114,
0,0,137,138,5,105,0,0,138,139,5,110,0,0,139,140,5,103,0,0,140,20,1,0,0,0,
141,142,5,112,0,0,142,143,5,114,0,0,143,144,5,111,0,0,144,145,5,103,0,0,
145,146,5,114,0,0,146,147,5,97,0,0,147,148,5,109,0,0,148,22,1,0,0,0,149,
150,5,98,0,0,150,151,5,114,0,0,151,152,5,101,0,0,152,153,5,97,0,0,153,154,
5,107,0,0,154,24,1,0,0,0,155,156,5,99,0,0,156,157,5,111,0,0,157,158,5,110,
0,0,158,159,5,116,0,0,159,160,5,105,0,0,160,161,5,110,0,0,161,162,5,117,
0,0,162,163,5,101,0,0,163,26,1,0,0,0,164,165,5,103,0,0,165,166,5,101,0,0,
166,167,5,110,0,0,167,168,5,101,0,0,168,169,5,114,0,0,169,170,5,97,0,0,170,
171,5,116,0,0,171,172,5,101,0,0,172,28,1,0,0,0,173,174,5,40,0,0,174,30,1,
0,0,0,175,176,5,44,0,0,176,32,1,0,0,0,177,178,5,41,0,0,178,34,1,0,0,0,179,
180,5,114,0,0,180,181,5,97,0,0,181,182,5,110,0,0,182,183,5,100,0,0,183,184,
5,111,0,0,184,185,5,109,0,0,185,36,1,0,0,0,186,187,5,101,0,0,187,188,5,110,
0,0,188,189,5,117,0,0,189,190,5,109,0,0,190,191,5,101,0,0,191,192,5,114,
0,0,192,193,5,97,0,0,193,194,5,116,0,0,194,195,5,101,0,0,195,38,1,0,0,0,
196,197,5,105,0,0,197,198,5,102,0,0,198,40,1,0,0,0,199,200,5,61,0,0,200,
42,1,0,0,0,201,202,5,45,0,0,202,203,5,43,0,0,203,44,1,0,0,0,204,205,5,42,
0,0,205,206,5,61,0,0,206,46,1,0,0,0,207,208,5,47,0,0,208,209,5,61,0,0,209,
48,1,0,0,0,210,211,5,43,0,0,211,212,5,61,0,0,212,50,1,0,0,0,213,214,5,124,
0,0,214,215,5,124,0,0,215,52,1,0,0,0,216,217,5,38,0,0,217,218,5,38,0,0,218,
54,1,0,0,0,219,220,5,33,0,0,220,56,1,0,0,0,221,222,5,60,0,0,222,223,5,61,
0,0,223,58,1,0,0,0,224,225,5,62,0,0,225,226,5,61,0,0,226,60,1,0,0,0,227,
228,5,61,0,0,228,229,5,61,0,0,229,62,1,0,0,0,230,231,5,33,0,0,231,232,5,
61,0,0,232,64,1,0,0,0,233,234,5,62,0,0,234,66,1,0,0,0,235,236,5,45,0,0,236,
68,1,0,0,0,237,238,5,43,0,0,238,70,1,0,0,0,239,240,5,42,0,0,240,72,1,0,0,
0,241,242,5,47,0,0,242,74,1,0,0,0,243,244,5,37,0,0,244,76,1,0,0,0,245,246,
5,110,0,0,246,247,5,101,0,0,247,248,5,120,0,0,248,249,5,116,0,0,249,78,1,
0,0,0,250,251,5,104,0,0,251,252,5,97,0,0,252,253,5,115,0,0,253,254,5,110,
0,0,254,255,5,101,0,0,255,256,5,120,0,0,256,257,5,116,0,0,257,80,1,0,0,0,
258,259,5,84,0,0,259,260,5,82,0,0,260,261,5,85,0,0,261,262,5,69,0,0,262,
82,1,0,0,0,263,264,5,70,0,0,264,265,5,65,0,0,265,266,5,76,0,0,266,267,5,
83,0,0,267,268,5,69,0,0,268,84,1,0,0,0,269,270,5,87,0,0,270,271,5,72,0,0,
271,272,5,73,0,0,272,273,5,76,0,0,273,274,5,69,0,0,274,86,1,0,0,0,275,279,
7,0,0,0,276,278,7,1,0,0,277,276,1,0,0,0,278,281,1,0,0,0,279,277,1,0,0,0,
279,280,1,0,0,0,280,88,1,0,0,0,281,279,1,0,0,0,282,286,7,2,0,0,283,285,7,
3,0,0,284,283,1,0,0,0,285,288,1,0,0,0,286,284,1,0,0,0,286,287,1,0,0,0,287,
90,1,0,0,0,288,286,1,0,0,0,289,293,5,34,0,0,290,292,9,0,0,0,291,290,1,0,
0,0,292,295,1,0,0,0,293,294,1,0,0,0,293,291,1,0,0,0,294,296,1,0,0,0,295,
293,1,0,0,0,296,297,5,34,0,0,297,92,1,0,0,0,298,299,5,47,0,0,299,300,5,47,
0,0,300,304,1,0,0,0,301,303,8,4,0,0,302,301,1,0,0,0,303,306,1,0,0,0,304,
302,1,0,0,0,304,305,1,0,0,0,305,307,1,0,0,0,306,304,1,0,0,0,307,308,6,46,
0,0,308,94,1,0,0,0,309,311,7,5,0,0,310,309,1,0,0,0,311,312,1,0,0,0,312,310,
1,0,0,0,312,313,1,0,0,0,313,314,1,0,0,0,314,315,6,47,0,0,315,96,1,0,0,0,
6,0,279,286,293,304,312,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class lisaLexer extends antlr4.Lexer {

    static grammarFileName = "lisa.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'declare'", "'{'", "'}'", "';'", "'int'", 
                         "'dfa'", "'nfa'", "'regex'", "'bool'", "'string'", 
                         "'program'", "'break'", "'continue'", "'generate'", 
                         "'('", "','", "')'", "'random'", "'enumerate'", 
                         "'if'", "'='", "'-+'", "'*='", "'/='", "'+='", 
                         "'||'", "'&&'", "'!'", "'<='", "'>='", "'=='", 
                         "'!='", "'>'", "'-'", "'+'", "'*'", "'/'", "'%'", 
                         "'next'", "'hasnext'", "'TRUE'", "'FALSE'", "'WHILE'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, "TRUE", "FALSE", "WHILE", "INTEGER", "ID", 
                          "STRINGLITERAL", "COMMENT", "WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
                      "T__25", "T__26", "T__27", "T__28", "T__29", "T__30", 
                      "T__31", "T__32", "T__33", "T__34", "T__35", "T__36", 
                      "T__37", "T__38", "T__39", "TRUE", "FALSE", "WHILE", 
                      "INTEGER", "ID", "STRINGLITERAL", "COMMENT", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

lisaLexer.EOF = antlr4.Token.EOF;
lisaLexer.T__0 = 1;
lisaLexer.T__1 = 2;
lisaLexer.T__2 = 3;
lisaLexer.T__3 = 4;
lisaLexer.T__4 = 5;
lisaLexer.T__5 = 6;
lisaLexer.T__6 = 7;
lisaLexer.T__7 = 8;
lisaLexer.T__8 = 9;
lisaLexer.T__9 = 10;
lisaLexer.T__10 = 11;
lisaLexer.T__11 = 12;
lisaLexer.T__12 = 13;
lisaLexer.T__13 = 14;
lisaLexer.T__14 = 15;
lisaLexer.T__15 = 16;
lisaLexer.T__16 = 17;
lisaLexer.T__17 = 18;
lisaLexer.T__18 = 19;
lisaLexer.T__19 = 20;
lisaLexer.T__20 = 21;
lisaLexer.T__21 = 22;
lisaLexer.T__22 = 23;
lisaLexer.T__23 = 24;
lisaLexer.T__24 = 25;
lisaLexer.T__25 = 26;
lisaLexer.T__26 = 27;
lisaLexer.T__27 = 28;
lisaLexer.T__28 = 29;
lisaLexer.T__29 = 30;
lisaLexer.T__30 = 31;
lisaLexer.T__31 = 32;
lisaLexer.T__32 = 33;
lisaLexer.T__33 = 34;
lisaLexer.T__34 = 35;
lisaLexer.T__35 = 36;
lisaLexer.T__36 = 37;
lisaLexer.T__37 = 38;
lisaLexer.T__38 = 39;
lisaLexer.T__39 = 40;
lisaLexer.TRUE = 41;
lisaLexer.FALSE = 42;
lisaLexer.WHILE = 43;
lisaLexer.INTEGER = 44;
lisaLexer.ID = 45;
lisaLexer.STRINGLITERAL = 46;
lisaLexer.COMMENT = 47;
lisaLexer.WS = 48;



