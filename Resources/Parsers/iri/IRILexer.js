// Generated from ./iri/IRI.g4 by ANTLR 4.10.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,63,255,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,
2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,
56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,1,0,
1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,
1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,
1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,
24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,31,
1,31,1,32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,
38,1,38,1,39,1,39,1,40,1,40,1,41,1,41,1,42,1,42,1,43,1,43,1,44,1,44,1,45,
1,45,1,46,1,46,1,47,1,47,1,48,1,48,1,49,1,49,1,50,1,50,1,51,1,51,1,52,1,
52,1,53,1,53,1,54,1,54,1,55,1,55,1,56,1,56,1,56,1,57,1,57,1,58,1,58,1,59,
1,59,1,60,1,60,1,61,1,61,1,62,1,62,0,0,63,1,1,3,2,5,3,7,4,9,5,11,6,13,7,
15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,
20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,
32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,
44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,
111,56,113,57,115,58,117,59,119,60,121,61,123,62,125,63,1,0,28,17,0,160,
55295,63744,64975,65008,65519,65536,131069,131072,196605,196608,262141,262144,
327677,327680,393213,393216,458749,458752,524285,524288,589821,589824,655357,
655360,720893,720896,786429,786432,851965,851968,917501,921600,983037,3,
0,57344,63743,983040,1048573,1048576,1114109,2,0,65,65,97,97,2,0,66,66,98,
98,2,0,67,67,99,99,2,0,68,68,100,100,2,0,69,69,101,101,2,0,70,70,102,102,
2,0,71,71,103,103,2,0,72,72,104,104,2,0,73,73,105,105,2,0,74,74,106,106,
2,0,75,75,107,107,2,0,76,76,108,108,2,0,77,77,109,109,2,0,78,78,110,110,
2,0,79,79,111,111,2,0,80,80,112,112,2,0,81,81,113,113,2,0,82,82,114,114,
2,0,83,83,115,115,2,0,84,84,116,116,2,0,85,85,117,117,2,0,86,86,118,118,
2,0,87,87,119,119,2,0,88,88,120,120,2,0,89,89,121,121,2,0,90,90,122,122,
254,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,
0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,
0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,
0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,
57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,
0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,
1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,
0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,
0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,
0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,
0,0,123,1,0,0,0,0,125,1,0,0,0,1,127,1,0,0,0,3,129,1,0,0,0,5,131,1,0,0,0,
7,133,1,0,0,0,9,135,1,0,0,0,11,137,1,0,0,0,13,139,1,0,0,0,15,141,1,0,0,0,
17,143,1,0,0,0,19,145,1,0,0,0,21,147,1,0,0,0,23,149,1,0,0,0,25,151,1,0,0,
0,27,153,1,0,0,0,29,155,1,0,0,0,31,157,1,0,0,0,33,159,1,0,0,0,35,161,1,0,
0,0,37,163,1,0,0,0,39,165,1,0,0,0,41,167,1,0,0,0,43,169,1,0,0,0,45,171,1,
0,0,0,47,173,1,0,0,0,49,175,1,0,0,0,51,177,1,0,0,0,53,179,1,0,0,0,55,181,
1,0,0,0,57,183,1,0,0,0,59,185,1,0,0,0,61,187,1,0,0,0,63,189,1,0,0,0,65,191,
1,0,0,0,67,193,1,0,0,0,69,195,1,0,0,0,71,197,1,0,0,0,73,199,1,0,0,0,75,201,
1,0,0,0,77,203,1,0,0,0,79,206,1,0,0,0,81,208,1,0,0,0,83,210,1,0,0,0,85,212,
1,0,0,0,87,214,1,0,0,0,89,216,1,0,0,0,91,218,1,0,0,0,93,220,1,0,0,0,95,222,
1,0,0,0,97,224,1,0,0,0,99,226,1,0,0,0,101,228,1,0,0,0,103,230,1,0,0,0,105,
232,1,0,0,0,107,234,1,0,0,0,109,236,1,0,0,0,111,238,1,0,0,0,113,240,1,0,
0,0,115,243,1,0,0,0,117,245,1,0,0,0,119,247,1,0,0,0,121,249,1,0,0,0,123,
251,1,0,0,0,125,253,1,0,0,0,127,128,7,0,0,0,128,2,1,0,0,0,129,130,7,1,0,
0,130,4,1,0,0,0,131,132,5,48,0,0,132,6,1,0,0,0,133,134,5,49,0,0,134,8,1,
0,0,0,135,136,5,50,0,0,136,10,1,0,0,0,137,138,5,51,0,0,138,12,1,0,0,0,139,
140,5,52,0,0,140,14,1,0,0,0,141,142,5,53,0,0,142,16,1,0,0,0,143,144,5,54,
0,0,144,18,1,0,0,0,145,146,5,55,0,0,146,20,1,0,0,0,147,148,5,56,0,0,148,
22,1,0,0,0,149,150,5,57,0,0,150,24,1,0,0,0,151,152,7,2,0,0,152,26,1,0,0,
0,153,154,7,3,0,0,154,28,1,0,0,0,155,156,7,4,0,0,156,30,1,0,0,0,157,158,
7,5,0,0,158,32,1,0,0,0,159,160,7,6,0,0,160,34,1,0,0,0,161,162,7,7,0,0,162,
36,1,0,0,0,163,164,7,8,0,0,164,38,1,0,0,0,165,166,7,9,0,0,166,40,1,0,0,0,
167,168,7,10,0,0,168,42,1,0,0,0,169,170,7,11,0,0,170,44,1,0,0,0,171,172,
7,12,0,0,172,46,1,0,0,0,173,174,7,13,0,0,174,48,1,0,0,0,175,176,7,14,0,0,
176,50,1,0,0,0,177,178,7,15,0,0,178,52,1,0,0,0,179,180,7,16,0,0,180,54,1,
0,0,0,181,182,7,17,0,0,182,56,1,0,0,0,183,184,7,18,0,0,184,58,1,0,0,0,185,
186,7,19,0,0,186,60,1,0,0,0,187,188,7,20,0,0,188,62,1,0,0,0,189,190,7,21,
0,0,190,64,1,0,0,0,191,192,7,22,0,0,192,66,1,0,0,0,193,194,7,23,0,0,194,
68,1,0,0,0,195,196,7,24,0,0,196,70,1,0,0,0,197,198,7,25,0,0,198,72,1,0,0,
0,199,200,7,26,0,0,200,74,1,0,0,0,201,202,7,27,0,0,202,76,1,0,0,0,203,204,
5,58,0,0,204,205,5,58,0,0,205,78,1,0,0,0,206,207,5,58,0,0,207,80,1,0,0,0,
208,209,5,46,0,0,209,82,1,0,0,0,210,211,5,37,0,0,211,84,1,0,0,0,212,213,
5,45,0,0,213,86,1,0,0,0,214,215,5,126,0,0,215,88,1,0,0,0,216,217,5,95,0,
0,217,90,1,0,0,0,218,219,5,33,0,0,219,92,1,0,0,0,220,221,5,36,0,0,221,94,
1,0,0,0,222,223,5,38,0,0,223,96,1,0,0,0,224,225,5,39,0,0,225,98,1,0,0,0,
226,227,5,40,0,0,227,100,1,0,0,0,228,229,5,41,0,0,229,102,1,0,0,0,230,231,
5,42,0,0,231,104,1,0,0,0,232,233,5,43,0,0,233,106,1,0,0,0,234,235,5,44,0,
0,235,108,1,0,0,0,236,237,5,59,0,0,237,110,1,0,0,0,238,239,5,61,0,0,239,
112,1,0,0,0,240,241,5,47,0,0,241,242,5,47,0,0,242,114,1,0,0,0,243,244,5,
47,0,0,244,116,1,0,0,0,245,246,5,63,0,0,246,118,1,0,0,0,247,248,5,35,0,0,
248,120,1,0,0,0,249,250,5,91,0,0,250,122,1,0,0,0,251,252,5,93,0,0,252,124,
1,0,0,0,253,254,5,64,0,0,254,126,1,0,0,0,1,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class IRILexer extends antlr4.Lexer {

    static grammarFileName = "IRI.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, null, null, "'0'", "'1'", "'2'", "'3'", "'4'", 
                         "'5'", "'6'", "'7'", "'8'", "'9'", null, null, 
                         null, null, null, null, null, null, null, null, 
                         null, null, null, null, null, null, null, null, 
                         null, null, null, null, null, null, null, null, 
                         "'::'", "':'", "'.'", "'%'", "'-'", "'~'", "'_'", 
                         "'!'", "'$'", "'&'", "'''", "'('", "')'", "'*'", 
                         "'+'", "','", "';'", "'='", "'//'", "'/'", "'?'", 
                         "'#'", "'['", "']'", "'@'" ];
	static symbolicNames = [ null, "UCSCHAR", "IPRIVATE", "D0", "D1", "D2", 
                          "D3", "D4", "D5", "D6", "D7", "D8", "D9", "A", 
                          "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", 
                          "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", 
                          "V", "W", "X", "Y", "Z", "COL2", "COL", "DOT", 
                          "PERCENT", "HYPHEN", "TILDE", "USCORE", "EXCL", 
                          "DOLLAR", "AMP", "SQUOTE", "OPAREN", "CPAREN", 
                          "STAR", "PLUS", "COMMA", "SCOL", "EQUALS", "FSLASH2", 
                          "FSLASH", "QMARK", "HASH", "OBRACK", "CBRACK", 
                          "AT" ];
	static ruleNames = [ "UCSCHAR", "IPRIVATE", "D0", "D1", "D2", "D3", "D4", 
                      "D5", "D6", "D7", "D8", "D9", "A", "B", "C", "D", 
                      "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", 
                      "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", 
                      "Y", "Z", "COL2", "COL", "DOT", "PERCENT", "HYPHEN", 
                      "TILDE", "USCORE", "EXCL", "DOLLAR", "AMP", "SQUOTE", 
                      "OPAREN", "CPAREN", "STAR", "PLUS", "COMMA", "SCOL", 
                      "EQUALS", "FSLASH2", "FSLASH", "QMARK", "HASH", "OBRACK", 
                      "CBRACK", "AT" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

IRILexer.EOF = antlr4.Token.EOF;
IRILexer.UCSCHAR = 1;
IRILexer.IPRIVATE = 2;
IRILexer.D0 = 3;
IRILexer.D1 = 4;
IRILexer.D2 = 5;
IRILexer.D3 = 6;
IRILexer.D4 = 7;
IRILexer.D5 = 8;
IRILexer.D6 = 9;
IRILexer.D7 = 10;
IRILexer.D8 = 11;
IRILexer.D9 = 12;
IRILexer.A = 13;
IRILexer.B = 14;
IRILexer.C = 15;
IRILexer.D = 16;
IRILexer.E = 17;
IRILexer.F = 18;
IRILexer.G = 19;
IRILexer.H = 20;
IRILexer.I = 21;
IRILexer.J = 22;
IRILexer.K = 23;
IRILexer.L = 24;
IRILexer.M = 25;
IRILexer.N = 26;
IRILexer.O = 27;
IRILexer.P = 28;
IRILexer.Q = 29;
IRILexer.R = 30;
IRILexer.S = 31;
IRILexer.T = 32;
IRILexer.U = 33;
IRILexer.V = 34;
IRILexer.W = 35;
IRILexer.X = 36;
IRILexer.Y = 37;
IRILexer.Z = 38;
IRILexer.COL2 = 39;
IRILexer.COL = 40;
IRILexer.DOT = 41;
IRILexer.PERCENT = 42;
IRILexer.HYPHEN = 43;
IRILexer.TILDE = 44;
IRILexer.USCORE = 45;
IRILexer.EXCL = 46;
IRILexer.DOLLAR = 47;
IRILexer.AMP = 48;
IRILexer.SQUOTE = 49;
IRILexer.OPAREN = 50;
IRILexer.CPAREN = 51;
IRILexer.STAR = 52;
IRILexer.PLUS = 53;
IRILexer.COMMA = 54;
IRILexer.SCOL = 55;
IRILexer.EQUALS = 56;
IRILexer.FSLASH2 = 57;
IRILexer.FSLASH = 58;
IRILexer.QMARK = 59;
IRILexer.HASH = 60;
IRILexer.OBRACK = 61;
IRILexer.CBRACK = 62;
IRILexer.AT = 63;



