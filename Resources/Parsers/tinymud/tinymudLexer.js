// Generated from ./tinymud/tinymud.g4 by ANTLR 4.10.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,61,499,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,
2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,
56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,1,0,1,0,1,0,1,0,1,0,1,0,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,
1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,
1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,
1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,
1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,
14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,
1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,18,1,18,1,18,1,
18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,
1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,
21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,24,1,24,1,24,1,24,
1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,
26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,28,
1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,
29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,
1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,34,1,
34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,
1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,
39,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,
1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,
44,1,44,1,44,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,
1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,
50,1,50,1,50,1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,53,1,53,1,53,
1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,
55,1,56,1,56,1,56,1,56,1,57,1,57,5,57,481,8,57,10,57,12,57,484,9,57,1,58,
4,58,487,8,58,11,58,12,58,488,1,59,3,59,492,8,59,1,59,1,59,1,60,1,60,1,60,
1,60,0,0,61,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,
13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,
25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,
37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,
49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,
119,60,121,61,1,0,4,2,0,65,90,97,122,9,0,32,32,37,37,39,39,44,44,46,46,48,
57,65,90,95,95,97,122,1,0,48,57,2,0,9,9,32,32,501,0,1,1,0,0,0,0,3,1,0,0,
0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,
0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,
1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,
0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,
0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,
61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,
0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,
1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,
0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,
1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,
0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,1,123,1,0,0,0,3,129,1,0,
0,0,5,136,1,0,0,0,7,138,1,0,0,0,9,146,1,0,0,0,11,156,1,0,0,0,13,162,1,0,
0,0,15,167,1,0,0,0,17,173,1,0,0,0,19,179,1,0,0,0,21,185,1,0,0,0,23,192,1,
0,0,0,25,198,1,0,0,0,27,204,1,0,0,0,29,210,1,0,0,0,31,223,1,0,0,0,33,230,
1,0,0,0,35,236,1,0,0,0,37,238,1,0,0,0,39,248,1,0,0,0,41,255,1,0,0,0,43,265,
1,0,0,0,45,274,1,0,0,0,47,279,1,0,0,0,49,281,1,0,0,0,51,291,1,0,0,0,53,298,
1,0,0,0,55,307,1,0,0,0,57,313,1,0,0,0,59,323,1,0,0,0,61,329,1,0,0,0,63,337,
1,0,0,0,65,345,1,0,0,0,67,351,1,0,0,0,69,356,1,0,0,0,71,362,1,0,0,0,73,370,
1,0,0,0,75,374,1,0,0,0,77,379,1,0,0,0,79,384,1,0,0,0,81,387,1,0,0,0,83,392,
1,0,0,0,85,397,1,0,0,0,87,403,1,0,0,0,89,408,1,0,0,0,91,418,1,0,0,0,93,422,
1,0,0,0,95,427,1,0,0,0,97,432,1,0,0,0,99,437,1,0,0,0,101,442,1,0,0,0,103,
447,1,0,0,0,105,452,1,0,0,0,107,456,1,0,0,0,109,460,1,0,0,0,111,466,1,0,
0,0,113,474,1,0,0,0,115,478,1,0,0,0,117,486,1,0,0,0,119,491,1,0,0,0,121,
495,1,0,0,0,123,124,5,64,0,0,124,125,5,98,0,0,125,126,5,111,0,0,126,127,
5,111,0,0,127,128,5,116,0,0,128,2,1,0,0,0,129,130,5,64,0,0,130,131,5,99,
0,0,131,132,5,104,0,0,132,133,5,111,0,0,133,134,5,119,0,0,134,135,5,110,
0,0,135,4,1,0,0,0,136,137,5,61,0,0,137,6,1,0,0,0,138,139,5,64,0,0,139,140,
5,99,0,0,140,141,5,114,0,0,141,142,5,101,0,0,142,143,5,97,0,0,143,144,5,
116,0,0,144,145,5,101,0,0,145,8,1,0,0,0,146,147,5,64,0,0,147,148,5,100,0,
0,148,149,5,101,0,0,149,150,5,115,0,0,150,151,5,99,0,0,151,152,5,114,0,0,
152,153,5,105,0,0,153,154,5,98,0,0,154,155,5,101,0,0,155,10,1,0,0,0,156,
157,5,64,0,0,157,158,5,100,0,0,158,159,5,101,0,0,159,160,5,115,0,0,160,161,
5,99,0,0,161,12,1,0,0,0,162,163,5,64,0,0,163,164,5,100,0,0,164,165,5,105,
0,0,165,166,5,103,0,0,166,14,1,0,0,0,167,168,5,64,0,0,168,169,5,100,0,0,
169,170,5,117,0,0,170,171,5,109,0,0,171,172,5,112,0,0,172,16,1,0,0,0,173,
174,5,64,0,0,174,175,5,102,0,0,175,176,5,97,0,0,176,177,5,105,0,0,177,178,
5,108,0,0,178,18,1,0,0,0,179,180,5,64,0,0,180,181,5,102,0,0,181,182,5,105,
0,0,182,183,5,110,0,0,183,184,5,100,0,0,184,20,1,0,0,0,185,186,5,64,0,0,
186,187,5,102,0,0,187,188,5,111,0,0,188,189,5,114,0,0,189,190,5,99,0,0,190,
191,5,101,0,0,191,22,1,0,0,0,192,193,5,64,0,0,193,194,5,108,0,0,194,195,
5,105,0,0,195,196,5,110,0,0,196,197,5,107,0,0,197,24,1,0,0,0,198,199,5,64,
0,0,199,200,5,108,0,0,200,201,5,111,0,0,201,202,5,99,0,0,202,203,5,107,0,
0,203,26,1,0,0,0,204,205,5,64,0,0,205,206,5,110,0,0,206,207,5,97,0,0,207,
208,5,109,0,0,208,209,5,101,0,0,209,28,1,0,0,0,210,211,5,64,0,0,211,212,
5,110,0,0,212,213,5,101,0,0,213,214,5,119,0,0,214,215,5,112,0,0,215,216,
5,97,0,0,216,217,5,115,0,0,217,218,5,115,0,0,218,219,5,119,0,0,219,220,5,
111,0,0,220,221,5,114,0,0,221,222,5,100,0,0,222,30,1,0,0,0,223,224,5,64,
0,0,224,225,5,111,0,0,225,226,5,102,0,0,226,227,5,97,0,0,227,228,5,105,0,
0,228,229,5,108,0,0,229,32,1,0,0,0,230,231,5,64,0,0,231,232,5,111,0,0,232,
233,5,112,0,0,233,234,5,101,0,0,234,235,5,110,0,0,235,34,1,0,0,0,236,237,
5,59,0,0,237,36,1,0,0,0,238,239,5,64,0,0,239,240,5,111,0,0,240,241,5,115,
0,0,241,242,5,117,0,0,242,243,5,99,0,0,243,244,5,99,0,0,244,245,5,101,0,
0,245,246,5,115,0,0,246,247,5,115,0,0,247,38,1,0,0,0,248,249,5,64,0,0,249,
250,5,111,0,0,250,251,5,115,0,0,251,252,5,117,0,0,252,253,5,99,0,0,253,254,
5,99,0,0,254,40,1,0,0,0,255,256,5,64,0,0,256,257,5,112,0,0,257,258,5,97,
0,0,258,259,5,115,0,0,259,260,5,115,0,0,260,261,5,119,0,0,261,262,5,111,
0,0,262,263,5,114,0,0,263,264,5,100,0,0,264,42,1,0,0,0,265,266,5,64,0,0,
266,267,5,112,0,0,267,268,5,99,0,0,268,269,5,114,0,0,269,270,5,101,0,0,270,
271,5,97,0,0,271,272,5,116,0,0,272,273,5,101,0,0,273,44,1,0,0,0,274,275,
5,64,0,0,275,276,5,115,0,0,276,277,5,101,0,0,277,278,5,116,0,0,278,46,1,
0,0,0,279,280,5,33,0,0,280,48,1,0,0,0,281,282,5,64,0,0,282,283,5,115,0,0,
283,284,5,104,0,0,284,285,5,117,0,0,285,286,5,116,0,0,286,287,5,100,0,0,
287,288,5,111,0,0,288,289,5,119,0,0,289,290,5,110,0,0,290,50,1,0,0,0,291,
292,5,64,0,0,292,293,5,115,0,0,293,294,5,116,0,0,294,295,5,97,0,0,295,296,
5,116,0,0,296,297,5,115,0,0,297,52,1,0,0,0,298,299,5,64,0,0,299,300,5,115,
0,0,300,301,5,117,0,0,301,302,5,99,0,0,302,303,5,99,0,0,303,304,5,101,0,
0,304,305,5,115,0,0,305,306,5,115,0,0,306,54,1,0,0,0,307,308,5,64,0,0,308,
309,5,115,0,0,309,310,5,117,0,0,310,311,5,99,0,0,311,312,5,99,0,0,312,56,
1,0,0,0,313,314,5,64,0,0,314,315,5,116,0,0,315,316,5,101,0,0,316,317,5,108,
0,0,317,318,5,101,0,0,318,319,5,112,0,0,319,320,5,111,0,0,320,321,5,114,
0,0,321,322,5,116,0,0,322,58,1,0,0,0,323,324,5,64,0,0,324,325,5,116,0,0,
325,326,5,111,0,0,326,327,5,97,0,0,327,328,5,100,0,0,328,60,1,0,0,0,329,
330,5,64,0,0,330,331,5,117,0,0,331,332,5,110,0,0,332,333,5,108,0,0,333,334,
5,105,0,0,334,335,5,110,0,0,335,336,5,107,0,0,336,62,1,0,0,0,337,338,5,64,
0,0,338,339,5,117,0,0,339,340,5,110,0,0,340,341,5,108,0,0,341,342,5,111,
0,0,342,343,5,99,0,0,343,344,5,107,0,0,344,64,1,0,0,0,345,346,5,64,0,0,346,
347,5,119,0,0,347,348,5,97,0,0,348,349,5,108,0,0,349,350,5,108,0,0,350,66,
1,0,0,0,351,352,5,100,0,0,352,353,5,114,0,0,353,354,5,111,0,0,354,355,5,
112,0,0,355,68,1,0,0,0,356,357,5,116,0,0,357,358,5,104,0,0,358,359,5,114,
0,0,359,360,5,111,0,0,360,361,5,119,0,0,361,70,1,0,0,0,362,363,5,101,0,0,
363,364,5,120,0,0,364,365,5,97,0,0,365,366,5,109,0,0,366,367,5,105,0,0,367,
368,5,110,0,0,368,369,5,101,0,0,369,72,1,0,0,0,370,371,5,103,0,0,371,372,
5,101,0,0,372,373,5,116,0,0,373,74,1,0,0,0,374,375,5,116,0,0,375,376,5,97,
0,0,376,377,5,107,0,0,377,378,5,101,0,0,378,76,1,0,0,0,379,380,5,103,0,0,
380,381,5,105,0,0,381,382,5,118,0,0,382,383,5,101,0,0,383,78,1,0,0,0,384,
385,5,103,0,0,385,386,5,111,0,0,386,80,1,0,0,0,387,388,5,103,0,0,388,389,
5,111,0,0,389,390,5,116,0,0,390,391,5,111,0,0,391,82,1,0,0,0,392,393,5,109,
0,0,393,394,5,111,0,0,394,395,5,118,0,0,395,396,5,101,0,0,396,84,1,0,0,0,
397,398,5,103,0,0,398,399,5,114,0,0,399,400,5,105,0,0,400,401,5,112,0,0,
401,402,5,101,0,0,402,86,1,0,0,0,403,404,5,104,0,0,404,405,5,101,0,0,405,
406,5,108,0,0,406,407,5,112,0,0,407,88,1,0,0,0,408,409,5,105,0,0,409,410,
5,110,0,0,410,411,5,118,0,0,411,412,5,101,0,0,412,413,5,110,0,0,413,414,
5,116,0,0,414,415,5,111,0,0,415,416,5,114,0,0,416,417,5,121,0,0,417,90,1,
0,0,0,418,419,5,105,0,0,419,420,5,110,0,0,420,421,5,118,0,0,421,92,1,0,0,
0,422,423,5,107,0,0,423,424,5,105,0,0,424,425,5,108,0,0,425,426,5,108,0,
0,426,94,1,0,0,0,427,428,5,108,0,0,428,429,5,111,0,0,429,430,5,111,0,0,430,
431,5,107,0,0,431,96,1,0,0,0,432,433,5,114,0,0,433,434,5,101,0,0,434,435,
5,97,0,0,435,436,5,100,0,0,436,98,1,0,0,0,437,438,5,110,0,0,438,439,5,101,
0,0,439,440,5,119,0,0,440,441,5,115,0,0,441,100,1,0,0,0,442,443,5,112,0,
0,443,444,5,97,0,0,444,445,5,103,0,0,445,446,5,101,0,0,446,102,1,0,0,0,447,
448,5,113,0,0,448,449,5,117,0,0,449,450,5,105,0,0,450,451,5,116,0,0,451,
104,1,0,0,0,452,453,5,114,0,0,453,454,5,111,0,0,454,455,5,98,0,0,455,106,
1,0,0,0,456,457,5,115,0,0,457,458,5,97,0,0,458,459,5,121,0,0,459,108,1,0,
0,0,460,461,5,115,0,0,461,462,5,99,0,0,462,463,5,111,0,0,463,464,5,114,0,
0,464,465,5,101,0,0,465,110,1,0,0,0,466,467,5,119,0,0,467,468,5,104,0,0,
468,469,5,105,0,0,469,470,5,115,0,0,470,471,5,112,0,0,471,472,5,101,0,0,
472,473,5,114,0,0,473,112,1,0,0,0,474,475,5,119,0,0,475,476,5,104,0,0,476,
477,5,111,0,0,477,114,1,0,0,0,478,482,7,0,0,0,479,481,7,1,0,0,480,479,1,
0,0,0,481,484,1,0,0,0,482,480,1,0,0,0,482,483,1,0,0,0,483,116,1,0,0,0,484,
482,1,0,0,0,485,487,7,2,0,0,486,485,1,0,0,0,487,488,1,0,0,0,488,486,1,0,
0,0,488,489,1,0,0,0,489,118,1,0,0,0,490,492,5,13,0,0,491,490,1,0,0,0,491,
492,1,0,0,0,492,493,1,0,0,0,493,494,5,10,0,0,494,120,1,0,0,0,495,496,7,3,
0,0,496,497,1,0,0,0,497,498,6,60,0,0,498,122,1,0,0,0,4,0,482,488,491,1,6,
0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class tinymudLexer extends antlr4.Lexer {

    static grammarFileName = "tinymud.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'@boot'", "'@chown'", "'='", "'@create'", 
                         "'@describe'", "'@desc'", "'@dig'", "'@dump'", 
                         "'@fail'", "'@find'", "'@force'", "'@link'", "'@lock'", 
                         "'@name'", "'@newpassword'", "'@ofail'", "'@open'", 
                         "';'", "'@osuccess'", "'@osucc'", "'@password'", 
                         "'@pcreate'", "'@set'", "'!'", "'@shutdown'", "'@stats'", 
                         "'@success'", "'@succ'", "'@teleport'", "'@toad'", 
                         "'@unlink'", "'@unlock'", "'@wall'", "'drop'", 
                         "'throw'", "'examine'", "'get'", "'take'", "'give'", 
                         "'go'", "'goto'", "'move'", "'gripe'", "'help'", 
                         "'inventory'", "'inv'", "'kill'", "'look'", "'read'", 
                         "'news'", "'page'", "'quit'", "'rob'", "'say'", 
                         "'score'", "'whisper'", "'who'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, "STRING", "NUMBER", "EOL", "WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
                      "T__25", "T__26", "T__27", "T__28", "T__29", "T__30", 
                      "T__31", "T__32", "T__33", "T__34", "T__35", "T__36", 
                      "T__37", "T__38", "T__39", "T__40", "T__41", "T__42", 
                      "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
                      "T__49", "T__50", "T__51", "T__52", "T__53", "T__54", 
                      "T__55", "T__56", "STRING", "NUMBER", "EOL", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

tinymudLexer.EOF = antlr4.Token.EOF;
tinymudLexer.T__0 = 1;
tinymudLexer.T__1 = 2;
tinymudLexer.T__2 = 3;
tinymudLexer.T__3 = 4;
tinymudLexer.T__4 = 5;
tinymudLexer.T__5 = 6;
tinymudLexer.T__6 = 7;
tinymudLexer.T__7 = 8;
tinymudLexer.T__8 = 9;
tinymudLexer.T__9 = 10;
tinymudLexer.T__10 = 11;
tinymudLexer.T__11 = 12;
tinymudLexer.T__12 = 13;
tinymudLexer.T__13 = 14;
tinymudLexer.T__14 = 15;
tinymudLexer.T__15 = 16;
tinymudLexer.T__16 = 17;
tinymudLexer.T__17 = 18;
tinymudLexer.T__18 = 19;
tinymudLexer.T__19 = 20;
tinymudLexer.T__20 = 21;
tinymudLexer.T__21 = 22;
tinymudLexer.T__22 = 23;
tinymudLexer.T__23 = 24;
tinymudLexer.T__24 = 25;
tinymudLexer.T__25 = 26;
tinymudLexer.T__26 = 27;
tinymudLexer.T__27 = 28;
tinymudLexer.T__28 = 29;
tinymudLexer.T__29 = 30;
tinymudLexer.T__30 = 31;
tinymudLexer.T__31 = 32;
tinymudLexer.T__32 = 33;
tinymudLexer.T__33 = 34;
tinymudLexer.T__34 = 35;
tinymudLexer.T__35 = 36;
tinymudLexer.T__36 = 37;
tinymudLexer.T__37 = 38;
tinymudLexer.T__38 = 39;
tinymudLexer.T__39 = 40;
tinymudLexer.T__40 = 41;
tinymudLexer.T__41 = 42;
tinymudLexer.T__42 = 43;
tinymudLexer.T__43 = 44;
tinymudLexer.T__44 = 45;
tinymudLexer.T__45 = 46;
tinymudLexer.T__46 = 47;
tinymudLexer.T__47 = 48;
tinymudLexer.T__48 = 49;
tinymudLexer.T__49 = 50;
tinymudLexer.T__50 = 51;
tinymudLexer.T__51 = 52;
tinymudLexer.T__52 = 53;
tinymudLexer.T__53 = 54;
tinymudLexer.T__54 = 55;
tinymudLexer.T__55 = 56;
tinymudLexer.T__56 = 57;
tinymudLexer.STRING = 58;
tinymudLexer.NUMBER = 59;
tinymudLexer.EOL = 60;
tinymudLexer.WS = 61;



