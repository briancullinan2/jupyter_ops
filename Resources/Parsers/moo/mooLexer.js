// Generated from ./moo/moo.g4 by ANTLR 4.10.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,68,472,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,
2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,
56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,
1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,
1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,9,
1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,
1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,
13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,
1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,
17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,
1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,
21,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,
1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,
26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,29,1,29,1,29,
1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,
32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,35,1,35,
1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,39,1,40,1,
40,1,41,1,41,1,42,1,42,1,43,1,43,1,44,1,44,1,45,1,45,1,46,1,46,1,47,1,47,
1,48,1,48,1,49,1,49,1,49,1,50,1,50,1,50,1,51,1,51,1,51,1,52,1,52,1,52,1,
53,1,53,1,53,1,54,1,54,1,54,1,55,1,55,1,56,1,56,1,57,1,57,1,58,1,58,1,59,
1,59,1,60,1,60,4,60,420,8,60,11,60,12,60,421,1,61,4,61,425,8,61,11,61,12,
61,426,1,62,1,62,4,62,431,8,62,11,62,12,62,432,1,63,1,63,5,63,437,8,63,10,
63,12,63,440,9,63,1,63,1,63,1,64,4,64,445,8,64,11,64,12,64,446,1,65,4,65,
450,8,65,11,65,12,65,451,1,65,1,65,4,65,456,8,65,11,65,12,65,457,1,66,1,
66,5,66,462,8,66,10,66,12,66,465,9,66,1,66,1,66,1,67,1,67,1,67,1,67,0,0,
68,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,
29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,
53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,
77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,
101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,121,
61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,1,0,7,1,0,48,57,3,0,
99,100,114,114,120,120,2,0,65,90,97,122,6,0,33,33,42,42,48,57,65,90,95,95,
97,122,1,0,34,34,2,0,10,10,13,13,3,0,9,10,13,13,32,32,479,0,1,1,0,0,0,0,
3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,
0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,
0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,
37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,
0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,
1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,
0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,
0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,
93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,
0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,
0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,
0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,
0,135,1,0,0,0,1,137,1,0,0,0,3,146,1,0,0,0,5,148,1,0,0,0,7,150,1,0,0,0,9,
156,1,0,0,0,11,166,1,0,0,0,13,172,1,0,0,0,15,184,1,0,0,0,17,192,1,0,0,0,
19,197,1,0,0,0,21,200,1,0,0,0,23,209,1,0,0,0,25,215,1,0,0,0,27,221,1,0,0,
0,29,229,1,0,0,0,31,239,1,0,0,0,33,242,1,0,0,0,35,252,1,0,0,0,37,261,1,0,
0,0,39,269,1,0,0,0,41,276,1,0,0,0,43,282,1,0,0,0,45,292,1,0,0,0,47,295,1,
0,0,0,49,302,1,0,0,0,51,307,1,0,0,0,53,313,1,0,0,0,55,319,1,0,0,0,57,322,
1,0,0,0,59,326,1,0,0,0,61,329,1,0,0,0,63,336,1,0,0,0,65,340,1,0,0,0,67,347,
1,0,0,0,69,354,1,0,0,0,71,356,1,0,0,0,73,363,1,0,0,0,75,365,1,0,0,0,77,367,
1,0,0,0,79,369,1,0,0,0,81,371,1,0,0,0,83,373,1,0,0,0,85,375,1,0,0,0,87,377,
1,0,0,0,89,379,1,0,0,0,91,381,1,0,0,0,93,383,1,0,0,0,95,385,1,0,0,0,97,387,
1,0,0,0,99,389,1,0,0,0,101,392,1,0,0,0,103,395,1,0,0,0,105,398,1,0,0,0,107,
401,1,0,0,0,109,404,1,0,0,0,111,407,1,0,0,0,113,409,1,0,0,0,115,411,1,0,
0,0,117,413,1,0,0,0,119,415,1,0,0,0,121,417,1,0,0,0,123,424,1,0,0,0,125,
428,1,0,0,0,127,434,1,0,0,0,129,444,1,0,0,0,131,449,1,0,0,0,133,459,1,0,
0,0,135,468,1,0,0,0,137,138,5,64,0,0,138,139,5,112,0,0,139,140,5,114,0,0,
140,141,5,111,0,0,141,142,5,103,0,0,142,143,5,114,0,0,143,144,5,97,0,0,144,
145,5,109,0,0,145,2,1,0,0,0,146,147,5,58,0,0,147,4,1,0,0,0,148,149,5,46,
0,0,149,6,1,0,0,0,150,151,5,64,0,0,151,152,5,118,0,0,152,153,5,101,0,0,153,
154,5,114,0,0,154,155,5,98,0,0,155,8,1,0,0,0,156,157,5,64,0,0,157,158,5,
112,0,0,158,159,5,114,0,0,159,160,5,111,0,0,160,161,5,112,0,0,161,162,5,
101,0,0,162,163,5,114,0,0,163,164,5,116,0,0,164,165,5,121,0,0,165,10,1,0,
0,0,166,167,5,64,0,0,167,168,5,112,0,0,168,169,5,114,0,0,169,170,5,111,0,
0,170,171,5,112,0,0,171,12,1,0,0,0,172,173,5,64,0,0,173,174,5,114,0,0,174,
175,5,109,0,0,175,176,5,112,0,0,176,177,5,114,0,0,177,178,5,111,0,0,178,
179,5,112,0,0,179,180,5,101,0,0,180,181,5,114,0,0,181,182,5,116,0,0,182,
183,5,121,0,0,183,14,1,0,0,0,184,185,5,64,0,0,185,186,5,114,0,0,186,187,
5,109,0,0,187,188,5,112,0,0,188,189,5,114,0,0,189,190,5,111,0,0,190,191,
5,112,0,0,191,16,1,0,0,0,192,193,5,64,0,0,193,194,5,115,0,0,194,195,5,101,
0,0,195,196,5,116,0,0,196,18,1,0,0,0,197,198,5,116,0,0,198,199,5,111,0,0,
199,20,1,0,0,0,200,201,5,64,0,0,201,202,5,100,0,0,202,203,5,105,0,0,203,
204,5,115,0,0,204,205,5,112,0,0,205,206,5,108,0,0,206,207,5,97,0,0,207,208,
5,121,0,0,208,22,1,0,0,0,209,210,5,64,0,0,210,211,5,100,0,0,211,212,5,105,
0,0,212,213,5,115,0,0,213,214,5,112,0,0,214,24,1,0,0,0,215,216,5,64,0,0,
216,217,5,107,0,0,217,218,5,105,0,0,218,219,5,100,0,0,219,220,5,115,0,0,
220,26,1,0,0,0,221,222,5,64,0,0,222,223,5,112,0,0,223,224,5,97,0,0,224,225,
5,114,0,0,225,226,5,101,0,0,226,227,5,110,0,0,227,228,5,116,0,0,228,28,1,
0,0,0,229,230,5,64,0,0,230,231,5,100,0,0,231,232,5,101,0,0,232,233,5,115,
0,0,233,234,5,99,0,0,234,235,5,114,0,0,235,236,5,105,0,0,236,237,5,98,0,
0,237,238,5,101,0,0,238,30,1,0,0,0,239,240,5,97,0,0,240,241,5,115,0,0,241,
32,1,0,0,0,242,243,5,64,0,0,243,244,5,99,0,0,244,245,5,111,0,0,245,246,5,
110,0,0,246,247,5,116,0,0,247,248,5,101,0,0,248,249,5,110,0,0,249,250,5,
116,0,0,250,251,5,115,0,0,251,34,1,0,0,0,252,253,5,64,0,0,253,254,5,110,
0,0,254,255,5,111,0,0,255,256,5,116,0,0,256,257,5,101,0,0,257,258,5,100,
0,0,258,259,5,105,0,0,259,260,5,116,0,0,260,36,1,0,0,0,261,262,5,64,0,0,
262,263,5,99,0,0,263,264,5,114,0,0,264,265,5,101,0,0,265,266,5,97,0,0,266,
267,5,116,0,0,267,268,5,101,0,0,268,38,1,0,0,0,269,270,5,99,0,0,270,271,
5,97,0,0,271,272,5,108,0,0,272,273,5,108,0,0,273,274,5,101,0,0,274,275,5,
100,0,0,275,40,1,0,0,0,276,277,5,64,0,0,277,278,5,101,0,0,278,279,5,100,
0,0,279,280,5,105,0,0,280,281,5,116,0,0,281,42,1,0,0,0,282,283,5,64,0,0,
283,284,5,97,0,0,284,285,5,100,0,0,285,286,5,100,0,0,286,287,5,97,0,0,287,
288,5,108,0,0,288,289,5,105,0,0,289,290,5,97,0,0,290,291,5,115,0,0,291,44,
1,0,0,0,292,293,5,105,0,0,293,294,5,102,0,0,294,46,1,0,0,0,295,296,5,101,
0,0,296,297,5,108,0,0,297,298,5,115,0,0,298,299,5,101,0,0,299,300,5,105,
0,0,300,301,5,102,0,0,301,48,1,0,0,0,302,303,5,101,0,0,303,304,5,108,0,0,
304,305,5,115,0,0,305,306,5,101,0,0,306,50,1,0,0,0,307,308,5,101,0,0,308,
309,5,110,0,0,309,310,5,100,0,0,310,311,5,105,0,0,311,312,5,102,0,0,312,
52,1,0,0,0,313,314,5,119,0,0,314,315,5,104,0,0,315,316,5,105,0,0,316,317,
5,108,0,0,317,318,5,101,0,0,318,54,1,0,0,0,319,320,5,100,0,0,320,321,5,111,
0,0,321,56,1,0,0,0,322,323,5,102,0,0,323,324,5,111,0,0,324,325,5,114,0,0,
325,58,1,0,0,0,326,327,5,105,0,0,327,328,5,110,0,0,328,60,1,0,0,0,329,330,
5,101,0,0,330,331,5,110,0,0,331,332,5,100,0,0,332,333,5,102,0,0,333,334,
5,111,0,0,334,335,5,114,0,0,335,62,1,0,0,0,336,337,5,116,0,0,337,338,5,114,
0,0,338,339,5,121,0,0,339,64,1,0,0,0,340,341,5,101,0,0,341,342,5,120,0,0,
342,343,5,99,0,0,343,344,5,101,0,0,344,345,5,112,0,0,345,346,5,116,0,0,346,
66,1,0,0,0,347,348,5,101,0,0,348,349,5,110,0,0,349,350,5,100,0,0,350,351,
5,116,0,0,351,352,5,114,0,0,352,353,5,121,0,0,353,68,1,0,0,0,354,355,5,33,
0,0,355,70,1,0,0,0,356,357,5,114,0,0,357,358,5,101,0,0,358,359,5,116,0,0,
359,360,5,117,0,0,360,361,5,114,0,0,361,362,5,110,0,0,362,72,1,0,0,0,363,
364,5,91,0,0,364,74,1,0,0,0,365,366,5,93,0,0,366,76,1,0,0,0,367,368,5,123,
0,0,368,78,1,0,0,0,369,370,5,125,0,0,370,80,1,0,0,0,371,372,5,40,0,0,372,
82,1,0,0,0,373,374,5,41,0,0,374,84,1,0,0,0,375,376,5,43,0,0,376,86,1,0,0,
0,377,378,5,45,0,0,378,88,1,0,0,0,379,380,5,42,0,0,380,90,1,0,0,0,381,382,
5,37,0,0,382,92,1,0,0,0,383,384,5,47,0,0,384,94,1,0,0,0,385,386,5,62,0,0,
386,96,1,0,0,0,387,388,5,60,0,0,388,98,1,0,0,0,389,390,5,62,0,0,390,391,
5,61,0,0,391,100,1,0,0,0,392,393,5,60,0,0,393,394,5,61,0,0,394,102,1,0,0,
0,395,396,5,61,0,0,396,397,5,61,0,0,397,104,1,0,0,0,398,399,5,38,0,0,399,
400,5,38,0,0,400,106,1,0,0,0,401,402,5,124,0,0,402,403,5,124,0,0,403,108,
1,0,0,0,404,405,5,33,0,0,405,406,5,61,0,0,406,110,1,0,0,0,407,408,5,94,0,
0,408,112,1,0,0,0,409,410,5,44,0,0,410,114,1,0,0,0,411,412,5,61,0,0,412,
116,1,0,0,0,413,414,5,59,0,0,414,118,1,0,0,0,415,416,5,36,0,0,416,120,1,
0,0,0,417,419,5,35,0,0,418,420,7,0,0,0,419,418,1,0,0,0,420,421,1,0,0,0,421,
419,1,0,0,0,421,422,1,0,0,0,422,122,1,0,0,0,423,425,7,1,0,0,424,423,1,0,
0,0,425,426,1,0,0,0,426,424,1,0,0,0,426,427,1,0,0,0,427,124,1,0,0,0,428,
430,7,2,0,0,429,431,7,3,0,0,430,429,1,0,0,0,431,432,1,0,0,0,432,430,1,0,
0,0,432,433,1,0,0,0,433,126,1,0,0,0,434,438,5,34,0,0,435,437,8,4,0,0,436,
435,1,0,0,0,437,440,1,0,0,0,438,436,1,0,0,0,438,439,1,0,0,0,439,441,1,0,
0,0,440,438,1,0,0,0,441,442,5,34,0,0,442,128,1,0,0,0,443,445,7,0,0,0,444,
443,1,0,0,0,445,446,1,0,0,0,446,444,1,0,0,0,446,447,1,0,0,0,447,130,1,0,
0,0,448,450,7,0,0,0,449,448,1,0,0,0,450,451,1,0,0,0,451,449,1,0,0,0,451,
452,1,0,0,0,452,453,1,0,0,0,453,455,5,46,0,0,454,456,7,0,0,0,455,454,1,0,
0,0,456,457,1,0,0,0,457,455,1,0,0,0,457,458,1,0,0,0,458,132,1,0,0,0,459,
463,5,59,0,0,460,462,8,5,0,0,461,460,1,0,0,0,462,465,1,0,0,0,463,461,1,0,
0,0,463,464,1,0,0,0,464,466,1,0,0,0,465,463,1,0,0,0,466,467,6,66,0,0,467,
134,1,0,0,0,468,469,7,6,0,0,469,470,1,0,0,0,470,471,6,67,0,0,471,136,1,0,
0,0,9,0,421,426,432,438,446,451,457,463,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class mooLexer extends antlr4.Lexer {

    static grammarFileName = "moo.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'@program'", "':'", "'.'", "'@verb'", "'@property'", 
                         "'@prop'", "'@rmproperty'", "'@rmprop'", "'@set'", 
                         "'to'", "'@display'", "'@disp'", "'@kids'", "'@parent'", 
                         "'@describe'", "'as'", "'@contents'", "'@notedit'", 
                         "'@create'", "'called'", "'@edit'", "'@addalias'", 
                         "'if'", "'elseif'", "'else'", "'endif'", "'while'", 
                         "'do'", "'for'", "'in'", "'endfor'", "'try'", "'except'", 
                         "'endtry'", "'!'", "'return'", "'['", "']'", "'{'", 
                         "'}'", "'('", "')'", "'+'", "'-'", "'*'", "'%'", 
                         "'/'", "'>'", "'<'", "'>='", "'<='", "'=='", "'&&'", 
                         "'||'", "'!='", "'^'", "','", "'='", "';'", "'$'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, "LPAREN", "RPAREN", "PLUS", "MINUS", "TIMES", 
                          "MOD", "DIV", "GT", "LT", "GTE", "LTE", "EQ", 
                          "AND", "OR", "NEQ", "POW", "COMMA", "ASSIGN", 
                          "SEMICOLON", "DOLLAR", "OBJREF", "PERMISSIONS", 
                          "STRING", "STRINGLITERAL", "INTEGER", "REAL", 
                          "COMMENT", "WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
                      "T__25", "T__26", "T__27", "T__28", "T__29", "T__30", 
                      "T__31", "T__32", "T__33", "T__34", "T__35", "T__36", 
                      "T__37", "T__38", "T__39", "LPAREN", "RPAREN", "PLUS", 
                      "MINUS", "TIMES", "MOD", "DIV", "GT", "LT", "GTE", 
                      "LTE", "EQ", "AND", "OR", "NEQ", "POW", "COMMA", "ASSIGN", 
                      "SEMICOLON", "DOLLAR", "OBJREF", "PERMISSIONS", "STRING", 
                      "STRINGLITERAL", "INTEGER", "REAL", "COMMENT", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

mooLexer.EOF = antlr4.Token.EOF;
mooLexer.T__0 = 1;
mooLexer.T__1 = 2;
mooLexer.T__2 = 3;
mooLexer.T__3 = 4;
mooLexer.T__4 = 5;
mooLexer.T__5 = 6;
mooLexer.T__6 = 7;
mooLexer.T__7 = 8;
mooLexer.T__8 = 9;
mooLexer.T__9 = 10;
mooLexer.T__10 = 11;
mooLexer.T__11 = 12;
mooLexer.T__12 = 13;
mooLexer.T__13 = 14;
mooLexer.T__14 = 15;
mooLexer.T__15 = 16;
mooLexer.T__16 = 17;
mooLexer.T__17 = 18;
mooLexer.T__18 = 19;
mooLexer.T__19 = 20;
mooLexer.T__20 = 21;
mooLexer.T__21 = 22;
mooLexer.T__22 = 23;
mooLexer.T__23 = 24;
mooLexer.T__24 = 25;
mooLexer.T__25 = 26;
mooLexer.T__26 = 27;
mooLexer.T__27 = 28;
mooLexer.T__28 = 29;
mooLexer.T__29 = 30;
mooLexer.T__30 = 31;
mooLexer.T__31 = 32;
mooLexer.T__32 = 33;
mooLexer.T__33 = 34;
mooLexer.T__34 = 35;
mooLexer.T__35 = 36;
mooLexer.T__36 = 37;
mooLexer.T__37 = 38;
mooLexer.T__38 = 39;
mooLexer.T__39 = 40;
mooLexer.LPAREN = 41;
mooLexer.RPAREN = 42;
mooLexer.PLUS = 43;
mooLexer.MINUS = 44;
mooLexer.TIMES = 45;
mooLexer.MOD = 46;
mooLexer.DIV = 47;
mooLexer.GT = 48;
mooLexer.LT = 49;
mooLexer.GTE = 50;
mooLexer.LTE = 51;
mooLexer.EQ = 52;
mooLexer.AND = 53;
mooLexer.OR = 54;
mooLexer.NEQ = 55;
mooLexer.POW = 56;
mooLexer.COMMA = 57;
mooLexer.ASSIGN = 58;
mooLexer.SEMICOLON = 59;
mooLexer.DOLLAR = 60;
mooLexer.OBJREF = 61;
mooLexer.PERMISSIONS = 62;
mooLexer.STRING = 63;
mooLexer.STRINGLITERAL = 64;
mooLexer.INTEGER = 65;
mooLexer.REAL = 66;
mooLexer.COMMENT = 67;
mooLexer.WS = 68;



