// Generated from Resources/Parsers/qif/qifLexer.g4 by ANTLR 4.10.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,19,150,6,-1,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,
2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,
11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,
1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,3,
1,3,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,8,
1,8,1,9,1,9,1,10,4,10,82,8,10,11,10,12,10,83,1,10,1,10,1,11,4,11,89,8,11,
11,11,12,11,90,1,11,1,11,4,11,95,8,11,11,11,12,11,96,1,11,1,11,4,11,101,
8,11,11,11,12,11,102,1,12,3,12,106,8,12,1,12,4,12,109,8,12,11,12,12,12,110,
1,12,1,12,4,12,115,8,12,11,12,12,12,116,3,12,119,8,12,1,13,4,13,122,8,13,
11,13,12,13,123,1,14,4,14,127,8,14,11,14,12,14,128,1,14,1,14,1,14,1,15,1,
15,1,16,4,16,137,8,16,11,16,12,16,138,1,17,1,17,1,18,4,18,144,8,18,11,18,
12,18,145,1,18,1,18,1,18,0,0,19,3,1,5,2,7,3,9,4,11,5,13,6,15,7,17,8,19,9,
21,10,23,11,25,12,27,13,29,14,31,15,33,16,35,17,37,18,39,19,3,0,1,2,6,3,
0,42,42,88,88,120,120,3,0,9,10,13,13,32,32,1,0,48,57,2,0,44,44,48,57,2,0,
10,10,13,13,4,0,32,32,48,57,65,90,97,122,159,0,3,1,0,0,0,0,5,1,0,0,0,0,7,
1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,
0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,1,25,1,0,0,0,1,27,1,0,0,0,1,29,1,
0,0,0,1,31,1,0,0,0,2,33,1,0,0,0,2,35,1,0,0,0,2,37,1,0,0,0,2,39,1,0,0,0,3,
41,1,0,0,0,5,50,1,0,0,0,7,54,1,0,0,0,9,56,1,0,0,0,11,60,1,0,0,0,13,64,1,
0,0,0,15,68,1,0,0,0,17,72,1,0,0,0,19,76,1,0,0,0,21,78,1,0,0,0,23,81,1,0,
0,0,25,88,1,0,0,0,27,105,1,0,0,0,29,121,1,0,0,0,31,126,1,0,0,0,33,133,1,
0,0,0,35,136,1,0,0,0,37,140,1,0,0,0,39,143,1,0,0,0,41,42,5,33,0,0,42,43,
5,84,0,0,43,44,5,121,0,0,44,45,5,112,0,0,45,46,5,101,0,0,46,47,5,58,0,0,
47,48,1,0,0,0,48,49,6,0,0,0,49,4,1,0,0,0,50,51,5,84,0,0,51,52,1,0,0,0,52,
53,6,1,0,0,53,6,1,0,0,0,54,55,5,67,0,0,55,8,1,0,0,0,56,57,5,78,0,0,57,58,
1,0,0,0,58,59,6,3,0,0,59,10,1,0,0,0,60,61,5,77,0,0,61,62,1,0,0,0,62,63,6,
4,0,0,63,12,1,0,0,0,64,65,5,80,0,0,65,66,1,0,0,0,66,67,6,5,0,0,67,14,1,0,
0,0,68,69,5,76,0,0,69,70,1,0,0,0,70,71,6,6,1,0,71,16,1,0,0,0,72,73,5,68,
0,0,73,74,1,0,0,0,74,75,6,7,0,0,75,18,1,0,0,0,76,77,7,0,0,0,77,20,1,0,0,
0,78,79,5,94,0,0,79,22,1,0,0,0,80,82,7,1,0,0,81,80,1,0,0,0,82,83,1,0,0,0,
83,81,1,0,0,0,83,84,1,0,0,0,84,85,1,0,0,0,85,86,6,10,2,0,86,24,1,0,0,0,87,
89,7,2,0,0,88,87,1,0,0,0,89,90,1,0,0,0,90,88,1,0,0,0,90,91,1,0,0,0,91,92,
1,0,0,0,92,94,5,47,0,0,93,95,7,2,0,0,94,93,1,0,0,0,95,96,1,0,0,0,96,94,1,
0,0,0,96,97,1,0,0,0,97,98,1,0,0,0,98,100,5,47,0,0,99,101,7,2,0,0,100,99,
1,0,0,0,101,102,1,0,0,0,102,100,1,0,0,0,102,103,1,0,0,0,103,26,1,0,0,0,104,
106,5,45,0,0,105,104,1,0,0,0,105,106,1,0,0,0,106,108,1,0,0,0,107,109,7,3,
0,0,108,107,1,0,0,0,109,110,1,0,0,0,110,108,1,0,0,0,110,111,1,0,0,0,111,
118,1,0,0,0,112,114,5,46,0,0,113,115,7,2,0,0,114,113,1,0,0,0,115,116,1,0,
0,0,116,114,1,0,0,0,116,117,1,0,0,0,117,119,1,0,0,0,118,112,1,0,0,0,118,
119,1,0,0,0,119,28,1,0,0,0,120,122,8,4,0,0,121,120,1,0,0,0,122,123,1,0,0,
0,123,121,1,0,0,0,123,124,1,0,0,0,124,30,1,0,0,0,125,127,7,4,0,0,126,125,
1,0,0,0,127,128,1,0,0,0,128,126,1,0,0,0,128,129,1,0,0,0,129,130,1,0,0,0,
130,131,6,14,2,0,131,132,6,14,3,0,132,32,1,0,0,0,133,134,5,91,0,0,134,34,
1,0,0,0,135,137,7,5,0,0,136,135,1,0,0,0,137,138,1,0,0,0,138,136,1,0,0,0,
138,139,1,0,0,0,139,36,1,0,0,0,140,141,5,93,0,0,141,38,1,0,0,0,142,144,7,
4,0,0,143,142,1,0,0,0,144,145,1,0,0,0,145,143,1,0,0,0,145,146,1,0,0,0,146,
147,1,0,0,0,147,148,6,18,2,0,148,149,6,18,3,0,149,40,1,0,0,0,15,0,1,2,83,
90,96,102,105,110,116,118,123,128,138,145,4,5,1,0,5,2,0,6,0,0,4,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class qifLexer extends antlr4.Lexer {

    static grammarFileName = "qifLexer.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE", "LINETEXT", "ACCTCATE" ];
	static literalNames = [ null, "'!Type:'", "'T'", "'C'", "'N'", "'M'", "'P'", 
                         "'L'", "'D'", null, "'^'", null, null, null, null, 
                         null, "'['", null, "']'" ];
	static symbolicNames = [ null, "TYPE", "T", "C", "N", "M", "P", "L", "D", 
                          "STATE", "EOR", "WS", "DATE", "NUM", "TEXT", "EOL", 
                          "LB", "ACCNTCATNAME", "RB", "EOL2" ];
	static ruleNames = [ "TYPE", "T", "C", "N", "M", "P", "L", "D", "STATE", 
                      "EOR", "WS", "DATE", "NUM", "TEXT", "EOL", "LB", "ACCNTCATNAME", 
                      "RB", "EOL2" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

qifLexer.EOF = antlr4.Token.EOF;
qifLexer.TYPE = 1;
qifLexer.T = 2;
qifLexer.C = 3;
qifLexer.N = 4;
qifLexer.M = 5;
qifLexer.P = 6;
qifLexer.L = 7;
qifLexer.D = 8;
qifLexer.STATE = 9;
qifLexer.EOR = 10;
qifLexer.WS = 11;
qifLexer.DATE = 12;
qifLexer.NUM = 13;
qifLexer.TEXT = 14;
qifLexer.EOL = 15;
qifLexer.LB = 16;
qifLexer.ACCNTCATNAME = 17;
qifLexer.RB = 18;
qifLexer.EOL2 = 19;

qifLexer.LINETEXT = 1;
qifLexer.ACCTCATE = 2;




