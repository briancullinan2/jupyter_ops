// Generated from ./clf/clf.g4 by ANTLR 4.10.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,11,111,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,1,0,1,0,1,1,1,1,
1,2,1,2,1,3,4,3,31,8,3,11,3,12,3,32,1,3,1,3,1,3,1,3,4,3,39,8,3,11,3,12,3,
40,1,4,4,4,44,8,4,11,4,12,4,45,1,4,1,4,4,4,50,8,4,11,4,12,4,51,1,4,1,4,4,
4,56,8,4,11,4,12,4,57,1,5,1,5,4,5,62,8,5,11,5,12,5,63,1,6,1,6,5,6,68,8,6,
10,6,12,6,71,9,6,1,6,1,6,1,7,4,7,76,8,7,11,7,12,7,77,1,7,1,7,4,7,82,8,7,
11,7,12,7,83,1,7,1,7,4,7,88,8,7,11,7,12,7,89,1,7,1,7,4,7,94,8,7,11,7,12,
7,95,1,8,4,8,99,8,8,11,8,12,8,100,1,9,3,9,104,8,9,1,9,1,9,1,10,1,10,1,10,
1,10,0,0,11,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,1,0,4,1,
0,48,57,1,0,34,34,7,0,40,41,45,46,48,57,59,59,65,90,95,95,97,122,3,0,9,10,
13,13,32,32,123,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,
0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
1,0,0,0,1,23,1,0,0,0,3,25,1,0,0,0,5,27,1,0,0,0,7,30,1,0,0,0,9,43,1,0,0,0,
11,59,1,0,0,0,13,65,1,0,0,0,15,75,1,0,0,0,17,98,1,0,0,0,19,103,1,0,0,0,21,
107,1,0,0,0,23,24,5,91,0,0,24,2,1,0,0,0,25,26,5,58,0,0,26,4,1,0,0,0,27,28,
5,93,0,0,28,6,1,0,0,0,29,31,7,0,0,0,30,29,1,0,0,0,31,32,1,0,0,0,32,30,1,
0,0,0,32,33,1,0,0,0,33,34,1,0,0,0,34,35,5,47,0,0,35,36,3,17,8,0,36,38,5,
47,0,0,37,39,7,0,0,0,38,37,1,0,0,0,39,40,1,0,0,0,40,38,1,0,0,0,40,41,1,0,
0,0,41,8,1,0,0,0,42,44,7,0,0,0,43,42,1,0,0,0,44,45,1,0,0,0,45,43,1,0,0,0,
45,46,1,0,0,0,46,47,1,0,0,0,47,49,5,58,0,0,48,50,7,0,0,0,49,48,1,0,0,0,50,
51,1,0,0,0,51,49,1,0,0,0,51,52,1,0,0,0,52,53,1,0,0,0,53,55,5,58,0,0,54,56,
7,0,0,0,55,54,1,0,0,0,56,57,1,0,0,0,57,55,1,0,0,0,57,58,1,0,0,0,58,10,1,
0,0,0,59,61,5,45,0,0,60,62,7,0,0,0,61,60,1,0,0,0,62,63,1,0,0,0,63,61,1,0,
0,0,63,64,1,0,0,0,64,12,1,0,0,0,65,69,5,34,0,0,66,68,8,1,0,0,67,66,1,0,0,
0,68,71,1,0,0,0,69,67,1,0,0,0,69,70,1,0,0,0,70,72,1,0,0,0,71,69,1,0,0,0,
72,73,5,34,0,0,73,14,1,0,0,0,74,76,7,0,0,0,75,74,1,0,0,0,76,77,1,0,0,0,77,
75,1,0,0,0,77,78,1,0,0,0,78,79,1,0,0,0,79,81,5,46,0,0,80,82,7,0,0,0,81,80,
1,0,0,0,82,83,1,0,0,0,83,81,1,0,0,0,83,84,1,0,0,0,84,85,1,0,0,0,85,87,5,
46,0,0,86,88,7,0,0,0,87,86,1,0,0,0,88,89,1,0,0,0,89,87,1,0,0,0,89,90,1,0,
0,0,90,91,1,0,0,0,91,93,5,46,0,0,92,94,7,0,0,0,93,92,1,0,0,0,94,95,1,0,0,
0,95,93,1,0,0,0,95,96,1,0,0,0,96,16,1,0,0,0,97,99,7,2,0,0,98,97,1,0,0,0,
99,100,1,0,0,0,100,98,1,0,0,0,100,101,1,0,0,0,101,18,1,0,0,0,102,104,5,13,
0,0,103,102,1,0,0,0,103,104,1,0,0,0,104,105,1,0,0,0,105,106,5,10,0,0,106,
20,1,0,0,0,107,108,7,3,0,0,108,109,1,0,0,0,109,110,6,10,0,0,110,22,1,0,0,
0,14,0,32,40,45,51,57,63,69,77,83,89,95,100,103,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class clfLexer extends antlr4.Lexer {

    static grammarFileName = "clf.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'['", "':'", "']'" ];
	static symbolicNames = [ null, null, null, null, "DATE", "TIME", "TZ", 
                          "LITERAL", "IP", "STRING", "EOL", "WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "DATE", "TIME", "TZ", "LITERAL", 
                      "IP", "STRING", "EOL", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

clfLexer.EOF = antlr4.Token.EOF;
clfLexer.T__0 = 1;
clfLexer.T__1 = 2;
clfLexer.T__2 = 3;
clfLexer.DATE = 4;
clfLexer.TIME = 5;
clfLexer.TZ = 6;
clfLexer.LITERAL = 7;
clfLexer.IP = 8;
clfLexer.STRING = 9;
clfLexer.EOL = 10;
clfLexer.WS = 11;



