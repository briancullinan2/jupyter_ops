// Generated from ./lpc/LPC.g4 by ANTLR 4.10.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,81,917,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,
2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,
56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,
70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,
2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,84,2,
85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,7,91,2,92,
7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,98,7,98,2,99,7,
99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,7,104,2,105,7,105,
2,106,7,106,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,
1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,
15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,
1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,
16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,3,16,287,8,16,
1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,
17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,3,17,312,8,17,1,18,1,18,1,18,
1,19,1,19,1,19,1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,
24,1,25,1,25,1,25,1,26,1,26,1,26,1,27,1,27,1,27,1,28,1,28,1,29,1,29,1,29,
1,30,1,30,1,30,3,30,349,8,30,1,31,1,31,1,31,1,32,1,32,1,33,1,33,1,33,1,34,
1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,
35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,
1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,
35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,
1,35,1,35,1,35,3,35,421,8,35,1,36,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,
1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,40,1,40,1,40,1,
41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,43,1,43,
1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,
46,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,
1,48,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,51,1,
51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,53,1,53,1,54,
1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,56,1,56,1,56,1,56,1,56,1,56,1,
56,1,56,1,57,1,57,1,57,1,57,1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,58,
1,58,1,58,1,58,1,58,1,58,1,59,1,59,1,60,1,60,1,60,1,61,1,61,1,61,1,61,1,
61,1,61,1,61,1,62,1,62,1,62,5,62,568,8,62,10,62,12,62,571,9,62,1,62,1,62,
1,63,1,63,1,63,5,63,578,8,63,10,63,12,63,581,9,63,1,63,1,63,1,64,1,64,5,
64,587,8,64,10,64,12,64,590,9,64,1,64,1,64,1,64,1,65,1,65,1,66,1,66,1,66,
1,67,1,67,5,67,602,8,67,10,67,12,67,605,9,67,1,67,1,67,1,67,1,67,1,67,1,
67,1,67,1,67,1,67,1,67,1,67,1,67,3,67,619,8,67,1,67,1,67,1,67,5,67,624,8,
67,10,67,12,67,627,9,67,1,67,1,67,1,68,1,68,5,68,633,8,68,10,68,12,68,636,
9,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,5,68,647,8,68,10,68,12,
68,650,9,68,1,68,1,68,1,69,1,69,5,69,656,8,69,10,69,12,69,659,9,69,1,69,
1,69,1,70,1,70,1,71,3,71,666,8,71,1,71,1,71,1,71,1,71,1,71,1,71,3,71,674,
8,71,1,72,4,72,677,8,72,11,72,12,72,678,1,73,1,73,1,73,5,73,684,8,73,10,
73,12,73,687,9,73,1,74,1,74,1,75,1,75,1,76,1,76,1,77,1,77,3,77,697,8,77,
1,77,1,77,3,77,701,8,77,1,77,1,77,3,77,705,8,77,1,77,3,77,708,8,77,1,78,
1,78,1,78,4,78,713,8,78,11,78,12,78,714,1,79,1,79,5,79,719,8,79,10,79,12,
79,722,9,79,1,80,1,80,5,80,726,8,80,10,80,12,80,729,9,80,1,81,1,81,4,81,
733,8,81,11,81,12,81,734,1,82,1,82,1,82,1,83,1,83,1,84,1,84,1,85,1,85,1,
86,1,86,3,86,748,8,86,1,86,1,86,1,86,1,86,1,86,3,86,755,8,86,1,86,1,86,3,
86,759,8,86,3,86,761,8,86,1,87,1,87,1,88,1,88,1,89,1,89,1,89,1,89,3,89,771,
8,89,1,90,3,90,774,8,90,1,90,1,90,3,90,778,8,90,1,90,1,90,1,91,1,91,1,92,
1,92,3,92,786,8,92,1,92,1,92,1,93,4,93,791,8,93,11,93,12,93,792,1,94,1,94,
1,94,1,94,1,94,1,94,1,94,1,94,1,94,1,94,3,94,805,8,94,1,95,1,95,3,95,809,
8,95,1,96,1,96,1,96,1,96,3,96,815,8,96,1,97,1,97,1,97,1,97,1,97,1,97,1,97,
1,97,1,97,1,97,3,97,827,8,97,1,98,1,98,1,98,1,98,1,98,1,99,1,99,1,99,1,99,
4,99,838,8,99,11,99,12,99,839,1,100,1,100,1,100,1,100,1,100,1,100,1,100,
1,100,1,100,1,100,1,100,3,100,853,8,100,1,101,1,101,1,101,1,101,3,101,859,
8,101,1,102,1,102,1,102,1,102,1,102,1,102,1,102,1,102,1,102,1,102,1,102,
1,102,1,102,1,102,1,102,1,102,1,103,1,103,1,103,1,103,5,103,881,8,103,10,
103,12,103,884,9,103,1,103,1,103,1,103,1,103,1,103,1,104,1,104,1,104,1,104,
5,104,895,8,104,10,104,12,104,898,9,104,1,104,1,104,1,105,4,105,903,8,105,
11,105,12,105,904,1,105,1,105,1,106,1,106,3,106,911,8,106,1,106,3,106,914,
8,106,1,106,1,106,1,882,0,107,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,
10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,
22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,
34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,
46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,
57,115,58,117,59,119,60,121,61,123,62,125,63,127,64,129,65,131,66,133,67,
135,68,137,69,139,70,141,71,143,0,145,72,147,73,149,0,151,0,153,0,155,0,
157,0,159,0,161,0,163,0,165,0,167,0,169,0,171,0,173,0,175,0,177,0,179,0,
181,74,183,75,185,76,187,0,189,0,191,0,193,0,195,0,197,0,199,0,201,0,203,
0,205,77,207,78,209,79,211,80,213,81,1,0,16,3,0,10,10,13,13,92,92,2,0,10,
10,13,13,3,0,65,90,95,95,97,122,1,0,48,57,2,0,66,66,98,98,1,0,48,49,2,0,
88,88,120,120,1,0,49,57,1,0,48,55,3,0,48,57,65,70,97,102,2,0,85,85,117,117,
2,0,76,76,108,108,4,0,10,10,13,13,34,34,92,92,10,0,34,34,39,39,63,63,92,
92,97,98,102,102,110,110,114,114,116,116,118,118,9,0,33,33,35,38,40,43,45,
47,60,62,64,64,91,91,93,95,123,125,2,0,9,9,32,32,974,0,1,1,0,0,0,0,3,1,0,
0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,
0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,
27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,
0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,
1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,
0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,
0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,
83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,
0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,
105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,
1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,
0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,
0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,
0,0,181,1,0,0,0,0,183,1,0,0,0,0,185,1,0,0,0,0,205,1,0,0,0,0,207,1,0,0,0,
0,209,1,0,0,0,0,211,1,0,0,0,0,213,1,0,0,0,1,215,1,0,0,0,3,217,1,0,0,0,5,
219,1,0,0,0,7,221,1,0,0,0,9,223,1,0,0,0,11,225,1,0,0,0,13,227,1,0,0,0,15,
229,1,0,0,0,17,231,1,0,0,0,19,233,1,0,0,0,21,235,1,0,0,0,23,237,1,0,0,0,
25,239,1,0,0,0,27,241,1,0,0,0,29,243,1,0,0,0,31,245,1,0,0,0,33,286,1,0,0,
0,35,311,1,0,0,0,37,313,1,0,0,0,39,316,1,0,0,0,41,319,1,0,0,0,43,321,1,0,
0,0,45,324,1,0,0,0,47,326,1,0,0,0,49,328,1,0,0,0,51,331,1,0,0,0,53,334,1,
0,0,0,55,337,1,0,0,0,57,340,1,0,0,0,59,342,1,0,0,0,61,348,1,0,0,0,63,350,
1,0,0,0,65,353,1,0,0,0,67,355,1,0,0,0,69,358,1,0,0,0,71,420,1,0,0,0,73,422,
1,0,0,0,75,428,1,0,0,0,77,434,1,0,0,0,79,440,1,0,0,0,81,442,1,0,0,0,83,445,
1,0,0,0,85,454,1,0,0,0,87,458,1,0,0,0,89,463,1,0,0,0,91,467,1,0,0,0,93,472,
1,0,0,0,95,475,1,0,0,0,97,483,1,0,0,0,99,490,1,0,0,0,101,494,1,0,0,0,103,
502,1,0,0,0,105,505,1,0,0,0,107,512,1,0,0,0,109,517,1,0,0,0,111,523,1,0,
0,0,113,526,1,0,0,0,115,534,1,0,0,0,117,538,1,0,0,0,119,552,1,0,0,0,121,
554,1,0,0,0,123,557,1,0,0,0,125,564,1,0,0,0,127,574,1,0,0,0,129,584,1,0,
0,0,131,594,1,0,0,0,133,596,1,0,0,0,135,599,1,0,0,0,137,630,1,0,0,0,139,
653,1,0,0,0,141,662,1,0,0,0,143,673,1,0,0,0,145,676,1,0,0,0,147,680,1,0,
0,0,149,688,1,0,0,0,151,690,1,0,0,0,153,692,1,0,0,0,155,707,1,0,0,0,157,
709,1,0,0,0,159,716,1,0,0,0,161,723,1,0,0,0,163,730,1,0,0,0,165,736,1,0,
0,0,167,739,1,0,0,0,169,741,1,0,0,0,171,743,1,0,0,0,173,760,1,0,0,0,175,
762,1,0,0,0,177,764,1,0,0,0,179,770,1,0,0,0,181,773,1,0,0,0,183,781,1,0,
0,0,185,783,1,0,0,0,187,790,1,0,0,0,189,804,1,0,0,0,191,808,1,0,0,0,193,
814,1,0,0,0,195,826,1,0,0,0,197,828,1,0,0,0,199,833,1,0,0,0,201,852,1,0,
0,0,203,858,1,0,0,0,205,860,1,0,0,0,207,876,1,0,0,0,209,890,1,0,0,0,211,
902,1,0,0,0,213,913,1,0,0,0,215,216,5,59,0,0,216,2,1,0,0,0,217,218,5,40,
0,0,218,4,1,0,0,0,219,220,5,41,0,0,220,6,1,0,0,0,221,222,5,123,0,0,222,8,
1,0,0,0,223,224,5,125,0,0,224,10,1,0,0,0,225,226,5,44,0,0,226,12,1,0,0,0,
227,228,5,60,0,0,228,14,1,0,0,0,229,230,5,42,0,0,230,16,1,0,0,0,231,232,
5,37,0,0,232,18,1,0,0,0,233,234,5,47,0,0,234,20,1,0,0,0,235,236,5,43,0,0,
236,22,1,0,0,0,237,238,5,45,0,0,238,24,1,0,0,0,239,240,5,126,0,0,240,26,
1,0,0,0,241,242,5,36,0,0,242,28,1,0,0,0,243,244,5,91,0,0,244,30,1,0,0,0,
245,246,5,93,0,0,246,32,1,0,0,0,247,248,5,110,0,0,248,249,5,111,0,0,249,
250,5,109,0,0,250,251,5,97,0,0,251,252,5,115,0,0,252,287,5,107,0,0,253,254,
5,112,0,0,254,255,5,114,0,0,255,256,5,105,0,0,256,257,5,118,0,0,257,258,
5,97,0,0,258,259,5,116,0,0,259,287,5,101,0,0,260,261,5,111,0,0,261,262,5,
116,0,0,262,263,5,101,0,0,263,264,5,99,0,0,264,265,5,116,0,0,265,266,5,101,
0,0,266,287,5,100,0,0,267,268,5,112,0,0,268,269,5,117,0,0,269,270,5,98,0,
0,270,271,5,108,0,0,271,272,5,105,0,0,272,287,5,99,0,0,273,274,5,115,0,0,
274,275,5,116,0,0,275,276,5,97,0,0,276,277,5,116,0,0,277,278,5,105,0,0,278,
287,5,99,0,0,279,280,5,118,0,0,280,281,5,97,0,0,281,282,5,114,0,0,282,283,
5,97,0,0,283,284,5,114,0,0,284,285,5,103,0,0,285,287,5,115,0,0,286,247,1,
0,0,0,286,253,1,0,0,0,286,260,1,0,0,0,286,267,1,0,0,0,286,273,1,0,0,0,286,
279,1,0,0,0,287,34,1,0,0,0,288,312,5,61,0,0,289,290,5,43,0,0,290,312,5,61,
0,0,291,292,5,45,0,0,292,312,5,61,0,0,293,294,5,38,0,0,294,312,5,61,0,0,
295,296,5,124,0,0,296,312,5,61,0,0,297,298,5,94,0,0,298,312,5,61,0,0,299,
300,5,60,0,0,300,301,5,60,0,0,301,312,5,61,0,0,302,303,5,62,0,0,303,304,
5,62,0,0,304,312,5,61,0,0,305,306,5,42,0,0,306,312,5,61,0,0,307,308,5,37,
0,0,308,312,5,61,0,0,309,310,5,47,0,0,310,312,5,61,0,0,311,288,1,0,0,0,311,
289,1,0,0,0,311,291,1,0,0,0,311,293,1,0,0,0,311,295,1,0,0,0,311,297,1,0,
0,0,311,299,1,0,0,0,311,302,1,0,0,0,311,305,1,0,0,0,311,307,1,0,0,0,311,
309,1,0,0,0,312,36,1,0,0,0,313,314,5,43,0,0,314,315,5,43,0,0,315,38,1,0,
0,0,316,317,5,45,0,0,317,318,5,45,0,0,318,40,1,0,0,0,319,320,5,38,0,0,320,
42,1,0,0,0,321,322,5,38,0,0,322,323,5,38,0,0,323,44,1,0,0,0,324,325,5,94,
0,0,325,46,1,0,0,0,326,327,5,124,0,0,327,48,1,0,0,0,328,329,5,124,0,0,329,
330,5,124,0,0,330,50,1,0,0,0,331,332,5,61,0,0,332,333,5,61,0,0,333,52,1,
0,0,0,334,335,5,60,0,0,335,336,5,60,0,0,336,54,1,0,0,0,337,338,5,62,0,0,
338,339,5,62,0,0,339,56,1,0,0,0,340,341,5,33,0,0,341,58,1,0,0,0,342,343,
5,33,0,0,343,344,5,61,0,0,344,60,1,0,0,0,345,349,3,63,31,0,346,349,3,65,
32,0,347,349,3,67,33,0,348,345,1,0,0,0,348,346,1,0,0,0,348,347,1,0,0,0,349,
62,1,0,0,0,350,351,5,60,0,0,351,352,5,61,0,0,352,64,1,0,0,0,353,354,5,62,
0,0,354,66,1,0,0,0,355,356,5,62,0,0,356,357,5,61,0,0,357,68,1,0,0,0,358,
359,5,45,0,0,359,360,5,62,0,0,360,70,1,0,0,0,361,362,5,98,0,0,362,363,5,
117,0,0,363,364,5,102,0,0,364,365,5,102,0,0,365,366,5,101,0,0,366,421,5,
114,0,0,367,368,5,102,0,0,368,369,5,108,0,0,369,370,5,111,0,0,370,371,5,
97,0,0,371,421,5,116,0,0,372,373,5,102,0,0,373,374,5,117,0,0,374,375,5,110,
0,0,375,376,5,99,0,0,376,377,5,116,0,0,377,378,5,105,0,0,378,379,5,111,0,
0,379,421,5,110,0,0,380,381,5,105,0,0,381,382,5,110,0,0,382,421,5,116,0,
0,383,384,5,109,0,0,384,385,5,97,0,0,385,386,5,112,0,0,386,387,5,112,0,0,
387,388,5,105,0,0,388,389,5,110,0,0,389,421,5,103,0,0,390,391,5,109,0,0,
391,392,5,105,0,0,392,393,5,120,0,0,393,394,5,101,0,0,394,421,5,100,0,0,
395,396,5,111,0,0,396,397,5,98,0,0,397,398,5,106,0,0,398,399,5,101,0,0,399,
400,5,99,0,0,400,421,5,116,0,0,401,402,5,115,0,0,402,403,5,116,0,0,403,404,
5,114,0,0,404,405,5,105,0,0,405,406,5,110,0,0,406,421,5,103,0,0,407,408,
5,111,0,0,408,409,5,98,0,0,409,410,5,106,0,0,410,411,5,101,0,0,411,412,5,
99,0,0,412,413,5,116,0,0,413,414,5,95,0,0,414,415,5,116,0,0,415,421,5,120,
0,0,416,417,5,118,0,0,417,418,5,111,0,0,418,419,5,105,0,0,419,421,5,100,
0,0,420,361,1,0,0,0,420,367,1,0,0,0,420,372,1,0,0,0,420,380,1,0,0,0,420,
383,1,0,0,0,420,390,1,0,0,0,420,395,1,0,0,0,420,401,1,0,0,0,420,407,1,0,
0,0,420,416,1,0,0,0,421,72,1,0,0,0,422,423,5,98,0,0,423,424,5,114,0,0,424,
425,5,101,0,0,425,426,5,97,0,0,426,427,5,107,0,0,427,74,1,0,0,0,428,429,
5,99,0,0,429,430,5,97,0,0,430,431,5,116,0,0,431,432,5,99,0,0,432,433,5,104,
0,0,433,76,1,0,0,0,434,435,5,99,0,0,435,436,5,108,0,0,436,437,5,97,0,0,437,
438,5,115,0,0,438,439,5,115,0,0,439,78,1,0,0,0,440,441,5,58,0,0,441,80,1,
0,0,0,442,443,5,58,0,0,443,444,5,58,0,0,444,82,1,0,0,0,445,446,5,99,0,0,
446,447,5,111,0,0,447,448,5,110,0,0,448,449,5,116,0,0,449,450,5,105,0,0,
450,451,5,110,0,0,451,452,5,117,0,0,452,453,5,101,0,0,453,84,1,0,0,0,454,
455,5,102,0,0,455,456,5,111,0,0,456,457,5,111,0,0,457,86,1,0,0,0,458,459,
5,101,0,0,459,460,5,102,0,0,460,461,5,117,0,0,461,462,5,110,0,0,462,88,1,
0,0,0,463,464,5,46,0,0,464,465,5,46,0,0,465,466,5,46,0,0,466,90,1,0,0,0,
467,468,5,101,0,0,468,469,5,108,0,0,469,470,5,115,0,0,470,471,5,101,0,0,
471,92,1,0,0,0,472,473,5,105,0,0,473,474,5,102,0,0,474,94,1,0,0,0,475,476,
5,105,0,0,476,477,5,110,0,0,477,478,5,104,0,0,478,479,5,101,0,0,479,480,
5,114,0,0,480,481,5,105,0,0,481,482,5,116,0,0,482,96,1,0,0,0,483,484,5,114,
0,0,484,485,5,101,0,0,485,486,5,116,0,0,486,487,5,117,0,0,487,488,5,114,
0,0,488,489,5,110,0,0,489,98,1,0,0,0,490,491,5,102,0,0,491,492,5,111,0,0,
492,493,5,114,0,0,493,100,1,0,0,0,494,495,5,102,0,0,495,496,5,111,0,0,496,
497,5,114,0,0,497,498,5,101,0,0,498,499,5,97,0,0,499,500,5,99,0,0,500,501,
5,104,0,0,501,102,1,0,0,0,502,503,5,105,0,0,503,504,5,110,0,0,504,104,1,
0,0,0,505,506,5,115,0,0,506,507,5,119,0,0,507,508,5,105,0,0,508,509,5,116,
0,0,509,510,5,99,0,0,510,511,5,104,0,0,511,106,1,0,0,0,512,513,5,99,0,0,
513,514,5,97,0,0,514,515,5,115,0,0,515,516,5,101,0,0,516,108,1,0,0,0,517,
518,5,119,0,0,518,519,5,104,0,0,519,520,5,105,0,0,520,521,5,108,0,0,521,
522,5,101,0,0,522,110,1,0,0,0,523,524,5,100,0,0,524,525,5,111,0,0,525,112,
1,0,0,0,526,527,5,100,0,0,527,528,5,101,0,0,528,529,5,102,0,0,529,530,5,
97,0,0,530,531,5,117,0,0,531,532,5,108,0,0,532,533,5,116,0,0,533,114,1,0,
0,0,534,535,5,110,0,0,535,536,5,101,0,0,536,537,5,119,0,0,537,116,1,0,0,
0,538,539,5,112,0,0,539,540,5,97,0,0,540,541,5,114,0,0,541,542,5,115,0,0,
542,543,5,101,0,0,543,544,5,95,0,0,544,545,5,99,0,0,545,546,5,111,0,0,546,
547,5,109,0,0,547,548,5,109,0,0,548,549,5,97,0,0,549,550,5,110,0,0,550,551,
5,100,0,0,551,118,1,0,0,0,552,553,5,63,0,0,553,120,1,0,0,0,554,555,5,46,
0,0,555,556,5,46,0,0,556,122,1,0,0,0,557,558,5,115,0,0,558,559,5,115,0,0,
559,560,5,99,0,0,560,561,5,97,0,0,561,562,5,110,0,0,562,563,5,102,0,0,563,
124,1,0,0,0,564,569,5,40,0,0,565,568,3,211,105,0,566,568,3,213,106,0,567,
565,1,0,0,0,567,566,1,0,0,0,568,571,1,0,0,0,569,567,1,0,0,0,569,570,1,0,
0,0,570,572,1,0,0,0,571,569,1,0,0,0,572,573,5,91,0,0,573,126,1,0,0,0,574,
579,5,40,0,0,575,578,3,211,105,0,576,578,3,213,106,0,577,575,1,0,0,0,577,
576,1,0,0,0,578,581,1,0,0,0,579,577,1,0,0,0,579,580,1,0,0,0,580,582,1,0,
0,0,581,579,1,0,0,0,582,583,5,123,0,0,583,128,1,0,0,0,584,588,5,40,0,0,585,
587,3,211,105,0,586,585,1,0,0,0,587,590,1,0,0,0,588,586,1,0,0,0,588,589,
1,0,0,0,589,591,1,0,0,0,590,588,1,0,0,0,591,592,5,58,0,0,592,593,4,64,0,
0,593,130,1,0,0,0,594,595,3,155,77,0,595,132,1,0,0,0,596,597,5,36,0,0,597,
598,3,145,72,0,598,134,1,0,0,0,599,603,5,35,0,0,600,602,3,211,105,0,601,
600,1,0,0,0,602,605,1,0,0,0,603,601,1,0,0,0,603,604,1,0,0,0,604,606,1,0,
0,0,605,603,1,0,0,0,606,607,5,100,0,0,607,608,5,101,0,0,608,609,5,102,0,
0,609,610,5,105,0,0,610,611,5,110,0,0,611,612,5,101,0,0,612,625,1,0,0,0,
613,624,8,0,0,0,614,615,5,92,0,0,615,616,5,92,0,0,616,618,1,0,0,0,617,619,
5,13,0,0,618,617,1,0,0,0,618,619,1,0,0,0,619,620,1,0,0,0,620,624,5,10,0,
0,621,622,5,92,0,0,622,624,9,0,0,0,623,613,1,0,0,0,623,614,1,0,0,0,623,621,
1,0,0,0,624,627,1,0,0,0,625,623,1,0,0,0,625,626,1,0,0,0,626,628,1,0,0,0,
627,625,1,0,0,0,628,629,6,67,0,0,629,136,1,0,0,0,630,634,5,35,0,0,631,633,
3,211,105,0,632,631,1,0,0,0,633,636,1,0,0,0,634,632,1,0,0,0,634,635,1,0,
0,0,635,637,1,0,0,0,636,634,1,0,0,0,637,638,5,105,0,0,638,639,5,110,0,0,
639,640,5,99,0,0,640,641,5,108,0,0,641,642,5,117,0,0,642,643,5,100,0,0,643,
644,5,101,0,0,644,648,1,0,0,0,645,647,8,1,0,0,646,645,1,0,0,0,647,650,1,
0,0,0,648,646,1,0,0,0,648,649,1,0,0,0,649,651,1,0,0,0,650,648,1,0,0,0,651,
652,6,68,0,0,652,138,1,0,0,0,653,657,5,35,0,0,654,656,8,1,0,0,655,654,1,
0,0,0,656,659,1,0,0,0,657,655,1,0,0,0,657,658,1,0,0,0,658,660,1,0,0,0,659,
657,1,0,0,0,660,661,6,69,0,0,661,140,1,0,0,0,662,663,3,143,71,0,663,142,
1,0,0,0,664,666,3,145,72,0,665,664,1,0,0,0,665,666,1,0,0,0,666,667,1,0,0,
0,667,668,5,46,0,0,668,674,3,145,72,0,669,670,3,145,72,0,670,671,5,46,0,
0,671,672,4,71,1,0,672,674,1,0,0,0,673,665,1,0,0,0,673,669,1,0,0,0,674,144,
1,0,0,0,675,677,3,153,76,0,676,675,1,0,0,0,677,678,1,0,0,0,678,676,1,0,0,
0,678,679,1,0,0,0,679,146,1,0,0,0,680,685,3,149,74,0,681,684,3,149,74,0,
682,684,3,153,76,0,683,681,1,0,0,0,683,682,1,0,0,0,684,687,1,0,0,0,685,683,
1,0,0,0,685,686,1,0,0,0,686,148,1,0,0,0,687,685,1,0,0,0,688,689,3,151,75,
0,689,150,1,0,0,0,690,691,7,2,0,0,691,152,1,0,0,0,692,693,7,3,0,0,693,154,
1,0,0,0,694,696,3,159,79,0,695,697,3,173,86,0,696,695,1,0,0,0,696,697,1,
0,0,0,697,708,1,0,0,0,698,700,3,161,80,0,699,701,3,173,86,0,700,699,1,0,
0,0,700,701,1,0,0,0,701,708,1,0,0,0,702,704,3,163,81,0,703,705,3,173,86,
0,704,703,1,0,0,0,704,705,1,0,0,0,705,708,1,0,0,0,706,708,3,157,78,0,707,
694,1,0,0,0,707,698,1,0,0,0,707,702,1,0,0,0,707,706,1,0,0,0,708,156,1,0,
0,0,709,710,5,48,0,0,710,712,7,4,0,0,711,713,7,5,0,0,712,711,1,0,0,0,713,
714,1,0,0,0,714,712,1,0,0,0,714,715,1,0,0,0,715,158,1,0,0,0,716,720,3,167,
83,0,717,719,3,153,76,0,718,717,1,0,0,0,719,722,1,0,0,0,720,718,1,0,0,0,
720,721,1,0,0,0,721,160,1,0,0,0,722,720,1,0,0,0,723,727,5,48,0,0,724,726,
3,169,84,0,725,724,1,0,0,0,726,729,1,0,0,0,727,725,1,0,0,0,727,728,1,0,0,
0,728,162,1,0,0,0,729,727,1,0,0,0,730,732,3,165,82,0,731,733,3,171,85,0,
732,731,1,0,0,0,733,734,1,0,0,0,734,732,1,0,0,0,734,735,1,0,0,0,735,164,
1,0,0,0,736,737,5,48,0,0,737,738,7,6,0,0,738,166,1,0,0,0,739,740,7,7,0,0,
740,168,1,0,0,0,741,742,7,8,0,0,742,170,1,0,0,0,743,744,7,9,0,0,744,172,
1,0,0,0,745,747,3,175,87,0,746,748,3,177,88,0,747,746,1,0,0,0,747,748,1,
0,0,0,748,761,1,0,0,0,749,750,3,175,87,0,750,751,3,179,89,0,751,761,1,0,
0,0,752,754,3,177,88,0,753,755,3,175,87,0,754,753,1,0,0,0,754,755,1,0,0,
0,755,761,1,0,0,0,756,758,3,179,89,0,757,759,3,175,87,0,758,757,1,0,0,0,
758,759,1,0,0,0,759,761,1,0,0,0,760,745,1,0,0,0,760,749,1,0,0,0,760,752,
1,0,0,0,760,756,1,0,0,0,761,174,1,0,0,0,762,763,7,10,0,0,763,176,1,0,0,0,
764,765,7,11,0,0,765,178,1,0,0,0,766,767,5,108,0,0,767,771,5,108,0,0,768,
769,5,76,0,0,769,771,5,76,0,0,770,766,1,0,0,0,770,768,1,0,0,0,771,180,1,
0,0,0,772,774,3,183,91,0,773,772,1,0,0,0,773,774,1,0,0,0,774,775,1,0,0,0,
775,777,5,34,0,0,776,778,3,187,93,0,777,776,1,0,0,0,777,778,1,0,0,0,778,
779,1,0,0,0,779,780,5,34,0,0,780,182,1,0,0,0,781,782,5,64,0,0,782,184,1,
0,0,0,783,785,5,39,0,0,784,786,3,191,95,0,785,784,1,0,0,0,785,786,1,0,0,
0,786,787,1,0,0,0,787,788,5,39,0,0,788,186,1,0,0,0,789,791,3,189,94,0,790,
789,1,0,0,0,791,792,1,0,0,0,792,790,1,0,0,0,792,793,1,0,0,0,793,188,1,0,
0,0,794,805,8,12,0,0,795,805,3,193,96,0,796,797,5,92,0,0,797,805,5,10,0,
0,798,799,5,92,0,0,799,800,5,13,0,0,800,805,5,10,0,0,801,805,5,10,0,0,802,
803,5,13,0,0,803,805,5,10,0,0,804,794,1,0,0,0,804,795,1,0,0,0,804,796,1,
0,0,0,804,798,1,0,0,0,804,801,1,0,0,0,804,802,1,0,0,0,805,190,1,0,0,0,806,
809,5,34,0,0,807,809,3,189,94,0,808,806,1,0,0,0,808,807,1,0,0,0,809,192,
1,0,0,0,810,815,3,203,101,0,811,815,3,201,100,0,812,815,3,199,99,0,813,815,
3,195,97,0,814,810,1,0,0,0,814,811,1,0,0,0,814,812,1,0,0,0,814,813,1,0,0,
0,815,194,1,0,0,0,816,817,5,92,0,0,817,818,5,117,0,0,818,819,1,0,0,0,819,
827,3,197,98,0,820,821,5,92,0,0,821,822,5,85,0,0,822,823,1,0,0,0,823,824,
3,197,98,0,824,825,3,197,98,0,825,827,1,0,0,0,826,816,1,0,0,0,826,820,1,
0,0,0,827,196,1,0,0,0,828,829,3,171,85,0,829,830,3,171,85,0,830,831,3,171,
85,0,831,832,3,171,85,0,832,198,1,0,0,0,833,834,5,92,0,0,834,835,5,120,0,
0,835,837,1,0,0,0,836,838,3,171,85,0,837,836,1,0,0,0,838,839,1,0,0,0,839,
837,1,0,0,0,839,840,1,0,0,0,840,200,1,0,0,0,841,842,5,92,0,0,842,853,3,169,
84,0,843,844,5,92,0,0,844,845,3,169,84,0,845,846,3,169,84,0,846,853,1,0,
0,0,847,848,5,92,0,0,848,849,3,169,84,0,849,850,3,169,84,0,850,851,3,169,
84,0,851,853,1,0,0,0,852,841,1,0,0,0,852,843,1,0,0,0,852,847,1,0,0,0,853,
202,1,0,0,0,854,855,5,92,0,0,855,859,7,13,0,0,856,857,5,92,0,0,857,859,7,
14,0,0,858,854,1,0,0,0,858,856,1,0,0,0,859,204,1,0,0,0,860,861,5,116,0,0,
861,862,5,105,0,0,862,863,5,109,0,0,863,864,5,101,0,0,864,865,5,95,0,0,865,
866,5,101,0,0,866,867,5,120,0,0,867,868,5,112,0,0,868,869,5,114,0,0,869,
870,5,101,0,0,870,871,5,115,0,0,871,872,5,115,0,0,872,873,5,105,0,0,873,
874,5,111,0,0,874,875,5,110,0,0,875,206,1,0,0,0,876,877,5,47,0,0,877,878,
5,42,0,0,878,882,1,0,0,0,879,881,9,0,0,0,880,879,1,0,0,0,881,884,1,0,0,0,
882,883,1,0,0,0,882,880,1,0,0,0,883,885,1,0,0,0,884,882,1,0,0,0,885,886,
5,42,0,0,886,887,5,47,0,0,887,888,1,0,0,0,888,889,6,103,0,0,889,208,1,0,
0,0,890,891,5,47,0,0,891,892,5,47,0,0,892,896,1,0,0,0,893,895,8,1,0,0,894,
893,1,0,0,0,895,898,1,0,0,0,896,894,1,0,0,0,896,897,1,0,0,0,897,899,1,0,
0,0,898,896,1,0,0,0,899,900,6,104,0,0,900,210,1,0,0,0,901,903,7,15,0,0,902,
901,1,0,0,0,903,904,1,0,0,0,904,902,1,0,0,0,904,905,1,0,0,0,905,906,1,0,
0,0,906,907,6,105,0,0,907,212,1,0,0,0,908,910,5,13,0,0,909,911,5,10,0,0,
910,909,1,0,0,0,910,911,1,0,0,0,911,914,1,0,0,0,912,914,5,10,0,0,913,908,
1,0,0,0,913,912,1,0,0,0,914,915,1,0,0,0,915,916,6,106,0,0,916,214,1,0,0,
0,51,0,286,311,348,420,567,569,577,579,588,603,618,623,625,634,648,657,665,
673,678,683,685,696,700,704,707,714,720,727,734,747,754,758,760,770,773,
777,785,792,804,808,814,826,839,852,858,882,896,904,910,913,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class LPCLexer extends antlr4.Lexer {

    static grammarFileName = "LPC.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "';'", "'('", "')'", "'{'", "'}'", "','", 
                         "'<'", "'*'", "'%'", "'/'", "'+'", "'-'", "'~'", 
                         "'$'", "'['", "']'", null, null, "'++'", "'--'", 
                         "'&'", "'&&'", "'^'", "'|'", "'||'", "'=='", "'<<'", 
                         "'>>'", "'!'", "'!='", null, "'<='", "'>'", "'>='", 
                         "'->'", null, "'break'", "'catch'", "'class'", 
                         "':'", "'::'", "'continue'", "'foo'", "'efun'", 
                         "'...'", "'else'", "'if'", "'inherit'", "'return'", 
                         "'for'", "'foreach'", "'in'", "'switch'", "'case'", 
                         "'while'", "'do'", "'default'", "'new'", "'parse_command'", 
                         "'?'", "'..'", "'sscanf'", null, null, null, null, 
                         null, null, null, null, null, null, null, null, 
                         "'@'", null, "'time_expression'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, "TypeModifier", "Assign", "PlusPlus", "MinusMinus", 
                          "And", "AndAnd", "Caret", "Or", "OrOr", "Equal", 
                          "LeftShift", "RightShift", "Not", "NotEqual", 
                          "Compare", "LessEqual", "Great", "GreatEqual", 
                          "Arrow", "BasicType", "Break", "Catch", "Class", 
                          "Colon", "ColonColon", "Continue", "DefinedName", 
                          "Efun", "Ellipsis", "Else", "If", "Inherit", "Return", 
                          "For", "Foreach", "In", "Switch", "Case", "While", 
                          "Do", "Default", "New", "ParseCommand", "Question", 
                          "Range", "SScanf", "MappingOpen", "ArrayOpen", 
                          "FunctionOpen", "Number", "Parameter", "ComplexDefine", 
                          "ComplexInclude", "ComplexPreprocessor", "Real", 
                          "DigitSequence", "Identifier", "String", "StringPrefix", 
                          "CharacterConstant", "TimeExpression", "BlockComment", 
                          "LineComment", "Whitespace", "Newline" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "TypeModifier", "Assign", 
                      "PlusPlus", "MinusMinus", "And", "AndAnd", "Caret", 
                      "Or", "OrOr", "Equal", "LeftShift", "RightShift", 
                      "Not", "NotEqual", "Compare", "LessEqual", "Great", 
                      "GreatEqual", "Arrow", "BasicType", "Break", "Catch", 
                      "Class", "Colon", "ColonColon", "Continue", "DefinedName", 
                      "Efun", "Ellipsis", "Else", "If", "Inherit", "Return", 
                      "For", "Foreach", "In", "Switch", "Case", "While", 
                      "Do", "Default", "New", "ParseCommand", "Question", 
                      "Range", "SScanf", "MappingOpen", "ArrayOpen", "FunctionOpen", 
                      "Number", "Parameter", "ComplexDefine", "ComplexInclude", 
                      "ComplexPreprocessor", "Real", "FractionalConstant", 
                      "DigitSequence", "Identifier", "IdentifierNondigit", 
                      "Nondigit", "Digit", "IntegerConstant", "BinaryConstant", 
                      "DecimalConstant", "OctalConstant", "HexadecimalConstant", 
                      "HexadecimalPrefix", "NonzeroDigit", "OctalDigit", 
                      "HexadecimalDigit", "IntegerSuffix", "UnsignedSuffix", 
                      "LongSuffix", "LongLongSuffix", "String", "StringPrefix", 
                      "CharacterConstant", "SCharSequence", "SChar", "SingleChar", 
                      "EscapeSequence", "UniversalCharacterName", "HexQuad", 
                      "HexadecimalEscapeSequence", "OctalEscapeSequence", 
                      "SimpleEscapeSequence", "TimeExpression", "BlockComment", 
                      "LineComment", "Whitespace", "Newline" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

LPCLexer.EOF = antlr4.Token.EOF;
LPCLexer.T__0 = 1;
LPCLexer.T__1 = 2;
LPCLexer.T__2 = 3;
LPCLexer.T__3 = 4;
LPCLexer.T__4 = 5;
LPCLexer.T__5 = 6;
LPCLexer.T__6 = 7;
LPCLexer.T__7 = 8;
LPCLexer.T__8 = 9;
LPCLexer.T__9 = 10;
LPCLexer.T__10 = 11;
LPCLexer.T__11 = 12;
LPCLexer.T__12 = 13;
LPCLexer.T__13 = 14;
LPCLexer.T__14 = 15;
LPCLexer.T__15 = 16;
LPCLexer.TypeModifier = 17;
LPCLexer.Assign = 18;
LPCLexer.PlusPlus = 19;
LPCLexer.MinusMinus = 20;
LPCLexer.And = 21;
LPCLexer.AndAnd = 22;
LPCLexer.Caret = 23;
LPCLexer.Or = 24;
LPCLexer.OrOr = 25;
LPCLexer.Equal = 26;
LPCLexer.LeftShift = 27;
LPCLexer.RightShift = 28;
LPCLexer.Not = 29;
LPCLexer.NotEqual = 30;
LPCLexer.Compare = 31;
LPCLexer.LessEqual = 32;
LPCLexer.Great = 33;
LPCLexer.GreatEqual = 34;
LPCLexer.Arrow = 35;
LPCLexer.BasicType = 36;
LPCLexer.Break = 37;
LPCLexer.Catch = 38;
LPCLexer.Class = 39;
LPCLexer.Colon = 40;
LPCLexer.ColonColon = 41;
LPCLexer.Continue = 42;
LPCLexer.DefinedName = 43;
LPCLexer.Efun = 44;
LPCLexer.Ellipsis = 45;
LPCLexer.Else = 46;
LPCLexer.If = 47;
LPCLexer.Inherit = 48;
LPCLexer.Return = 49;
LPCLexer.For = 50;
LPCLexer.Foreach = 51;
LPCLexer.In = 52;
LPCLexer.Switch = 53;
LPCLexer.Case = 54;
LPCLexer.While = 55;
LPCLexer.Do = 56;
LPCLexer.Default = 57;
LPCLexer.New = 58;
LPCLexer.ParseCommand = 59;
LPCLexer.Question = 60;
LPCLexer.Range = 61;
LPCLexer.SScanf = 62;
LPCLexer.MappingOpen = 63;
LPCLexer.ArrayOpen = 64;
LPCLexer.FunctionOpen = 65;
LPCLexer.Number = 66;
LPCLexer.Parameter = 67;
LPCLexer.ComplexDefine = 68;
LPCLexer.ComplexInclude = 69;
LPCLexer.ComplexPreprocessor = 70;
LPCLexer.Real = 71;
LPCLexer.DigitSequence = 72;
LPCLexer.Identifier = 73;
LPCLexer.String = 74;
LPCLexer.StringPrefix = 75;
LPCLexer.CharacterConstant = 76;
LPCLexer.TimeExpression = 77;
LPCLexer.BlockComment = 78;
LPCLexer.LineComment = 79;
LPCLexer.Whitespace = 80;
LPCLexer.Newline = 81;

LPCLexer.prototype.sempred = function(localctx, ruleIndex, predIndex) {
	switch (ruleIndex) {
		case 64:
			return this.FunctionOpen_sempred(localctx, predIndex);
		case 71:
			return this.FractionalConstant_sempred(localctx, predIndex);
    	default:
    		throw "No registered predicate for:" + ruleIndex;
    }
};

LPCLexer.prototype.FunctionOpen_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 0:
			return _input.LA(1) != ':';
		default:
			throw "No predicate with index:" + predIndex;
	}
};

LPCLexer.prototype.FractionalConstant_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 1:
			return _input.LA(1) != '.';
		default:
			throw "No predicate with index:" + predIndex;
	}
};




