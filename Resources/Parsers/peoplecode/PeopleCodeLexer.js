// Generated from ./peoplecode/PeopleCode.g4 by ANTLR 4.10.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,83,696,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,
2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,
56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,
70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,
2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,1,0,1,0,1,1,1,1,1,1,1,
1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,
4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,
7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,
1,15,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,19,1,20,1,20,1,
20,1,21,1,21,1,22,1,22,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,25,1,25,1,25,
1,26,1,26,1,27,1,27,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,
30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,
1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,
33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,35,
1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,
36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,38,1,38,
1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,40,1,
40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,41,
1,41,1,41,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,
44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,46,
1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,
47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,
1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,51,1,
51,1,51,1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,53,1,53,1,53,1,53,1,53,
1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,56,1,56,1,
56,1,56,1,57,1,57,1,57,1,58,1,58,1,58,1,58,1,58,1,59,1,59,1,59,1,59,1,59,
1,59,1,59,1,59,1,60,1,60,1,60,1,60,1,60,1,60,1,61,1,61,1,61,1,61,1,61,1,
61,1,61,1,61,1,61,1,61,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,63,
1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,64,1,64,1,
64,1,64,1,64,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,66,
1,66,1,66,1,66,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,68,1,68,1,68,1,
68,1,68,1,68,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,70,1,70,
1,70,1,70,1,70,1,70,1,70,1,71,1,71,1,71,4,71,581,8,71,11,71,12,71,582,1,
72,1,72,1,72,5,72,588,8,72,10,72,12,72,591,9,72,3,72,593,8,72,1,73,1,73,
5,73,597,8,73,10,73,12,73,600,9,73,1,73,1,73,1,74,1,74,1,74,1,74,1,74,1,
74,1,74,1,74,1,74,3,74,613,8,74,1,75,1,75,1,75,1,76,1,76,1,76,1,77,1,77,
5,77,623,8,77,10,77,12,77,626,9,77,1,78,3,78,629,8,78,1,78,1,78,1,78,1,78,
1,78,5,78,636,8,78,10,78,12,78,639,9,78,1,78,1,78,1,78,1,78,1,79,1,79,1,
79,1,79,5,79,649,8,79,10,79,12,79,652,9,79,1,79,1,79,1,79,1,79,1,79,1,80,
1,80,1,80,1,80,5,80,663,8,80,10,80,12,80,666,9,80,1,80,1,80,1,80,1,80,1,
80,1,81,1,81,1,81,1,81,5,81,677,8,81,10,81,12,81,680,9,81,1,81,1,81,1,81,
1,81,3,81,686,8,81,1,81,1,81,1,82,4,82,691,8,82,11,82,12,82,692,1,82,1,82,
4,637,650,664,678,0,83,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,
11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,
23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,
35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,
47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,
58,117,59,119,60,121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,
137,69,139,70,141,71,143,72,145,73,147,74,149,75,151,76,153,77,155,78,157,
79,159,80,161,81,163,82,165,83,1,0,8,1,0,48,57,1,0,34,34,2,0,65,90,97,122,
5,0,35,35,48,57,65,90,95,95,97,122,2,0,82,82,114,114,2,0,69,69,101,101,2,
0,77,77,109,109,3,0,9,10,13,13,32,32,708,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,
0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,
1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,
0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,
0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,
51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,
0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,
1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,
0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,
0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,
0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,
0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,
127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,
1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,
0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,
0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,1,167,1,0,0,
0,3,169,1,0,0,0,5,174,1,0,0,0,7,180,1,0,0,0,9,186,1,0,0,0,11,194,1,0,0,0,
13,201,1,0,0,0,15,207,1,0,0,0,17,209,1,0,0,0,19,211,1,0,0,0,21,213,1,0,0,
0,23,215,1,0,0,0,25,217,1,0,0,0,27,219,1,0,0,0,29,221,1,0,0,0,31,223,1,0,
0,0,33,227,1,0,0,0,35,229,1,0,0,0,37,231,1,0,0,0,39,233,1,0,0,0,41,236,1,
0,0,0,43,239,1,0,0,0,45,241,1,0,0,0,47,243,1,0,0,0,49,246,1,0,0,0,51,250,
1,0,0,0,53,253,1,0,0,0,55,255,1,0,0,0,57,257,1,0,0,0,59,260,1,0,0,0,61,267,
1,0,0,0,63,269,1,0,0,0,65,277,1,0,0,0,67,286,1,0,0,0,69,297,1,0,0,0,71,310,
1,0,0,0,73,322,1,0,0,0,75,328,1,0,0,0,77,338,1,0,0,0,79,346,1,0,0,0,81,353,
1,0,0,0,83,362,1,0,0,0,85,371,1,0,0,0,87,375,1,0,0,0,89,379,1,0,0,0,91,388,
1,0,0,0,93,397,1,0,0,0,95,408,1,0,0,0,97,416,1,0,0,0,99,424,1,0,0,0,101,
437,1,0,0,0,103,440,1,0,0,0,105,448,1,0,0,0,107,451,1,0,0,0,109,456,1,0,
0,0,111,461,1,0,0,0,113,468,1,0,0,0,115,472,1,0,0,0,117,475,1,0,0,0,119,
480,1,0,0,0,121,488,1,0,0,0,123,494,1,0,0,0,125,504,1,0,0,0,127,513,1,0,
0,0,129,526,1,0,0,0,131,531,1,0,0,0,133,542,1,0,0,0,135,546,1,0,0,0,137,
554,1,0,0,0,139,560,1,0,0,0,141,570,1,0,0,0,143,577,1,0,0,0,145,592,1,0,
0,0,147,594,1,0,0,0,149,612,1,0,0,0,151,614,1,0,0,0,153,617,1,0,0,0,155,
620,1,0,0,0,157,628,1,0,0,0,159,644,1,0,0,0,161,658,1,0,0,0,163,672,1,0,
0,0,165,690,1,0,0,0,167,168,5,59,0,0,168,2,1,0,0,0,169,170,5,69,0,0,170,
171,5,120,0,0,171,172,5,105,0,0,172,173,5,116,0,0,173,4,1,0,0,0,174,175,
5,66,0,0,175,176,5,114,0,0,176,177,5,101,0,0,177,178,5,97,0,0,178,179,5,
107,0,0,179,6,1,0,0,0,180,181,5,69,0,0,181,182,5,114,0,0,182,183,5,114,0,
0,183,184,5,111,0,0,184,185,5,114,0,0,185,8,1,0,0,0,186,187,5,87,0,0,187,
188,5,97,0,0,188,189,5,114,0,0,189,190,5,110,0,0,190,191,5,105,0,0,191,192,
5,110,0,0,192,193,5,103,0,0,193,10,1,0,0,0,194,195,5,82,0,0,195,196,5,101,
0,0,196,197,5,116,0,0,197,198,5,117,0,0,198,199,5,114,0,0,199,200,5,110,
0,0,200,12,1,0,0,0,201,202,5,116,0,0,202,203,5,104,0,0,203,204,5,114,0,0,
204,205,5,111,0,0,205,206,5,119,0,0,206,14,1,0,0,0,207,208,5,61,0,0,208,
16,1,0,0,0,209,210,5,40,0,0,210,18,1,0,0,0,211,212,5,41,0,0,212,20,1,0,0,
0,213,214,5,64,0,0,214,22,1,0,0,0,215,216,5,46,0,0,216,24,1,0,0,0,217,218,
5,91,0,0,218,26,1,0,0,0,219,220,5,93,0,0,220,28,1,0,0,0,221,222,5,45,0,0,
222,30,1,0,0,0,223,224,5,78,0,0,224,225,5,111,0,0,225,226,5,116,0,0,226,
32,1,0,0,0,227,228,5,42,0,0,228,34,1,0,0,0,229,230,5,47,0,0,230,36,1,0,0,
0,231,232,5,43,0,0,232,38,1,0,0,0,233,234,5,60,0,0,234,235,5,61,0,0,235,
40,1,0,0,0,236,237,5,62,0,0,237,238,5,61,0,0,238,42,1,0,0,0,239,240,5,60,
0,0,240,44,1,0,0,0,241,242,5,62,0,0,242,46,1,0,0,0,243,244,5,60,0,0,244,
245,5,62,0,0,245,48,1,0,0,0,246,247,5,65,0,0,247,248,5,110,0,0,248,249,5,
100,0,0,249,50,1,0,0,0,250,251,5,79,0,0,251,252,5,114,0,0,252,52,1,0,0,0,
253,254,5,124,0,0,254,54,1,0,0,0,255,256,5,44,0,0,256,56,1,0,0,0,257,258,
5,111,0,0,258,259,5,102,0,0,259,58,1,0,0,0,260,261,5,105,0,0,261,262,5,109,
0,0,262,263,5,112,0,0,263,264,5,111,0,0,264,265,5,114,0,0,265,266,5,116,
0,0,266,60,1,0,0,0,267,268,5,58,0,0,268,62,1,0,0,0,269,270,5,68,0,0,270,
271,5,101,0,0,271,272,5,99,0,0,272,273,5,108,0,0,273,274,5,97,0,0,274,275,
5,114,0,0,275,276,5,101,0,0,276,64,1,0,0,0,277,278,5,70,0,0,278,279,5,117,
0,0,279,280,5,110,0,0,280,281,5,99,0,0,281,282,5,116,0,0,282,283,5,105,0,
0,283,284,5,111,0,0,284,285,5,110,0,0,285,66,1,0,0,0,286,287,5,80,0,0,287,
288,5,101,0,0,288,289,5,111,0,0,289,290,5,112,0,0,290,291,5,108,0,0,291,
292,5,101,0,0,292,293,5,67,0,0,293,294,5,111,0,0,294,295,5,100,0,0,295,296,
5,101,0,0,296,68,1,0,0,0,297,298,5,70,0,0,298,299,5,105,0,0,299,300,5,101,
0,0,300,301,5,108,0,0,301,302,5,100,0,0,302,303,5,70,0,0,303,304,5,111,0,
0,304,305,5,114,0,0,305,306,5,109,0,0,306,307,5,117,0,0,307,308,5,108,0,
0,308,309,5,97,0,0,309,70,1,0,0,0,310,311,5,70,0,0,311,312,5,105,0,0,312,
313,5,101,0,0,313,314,5,108,0,0,314,315,5,100,0,0,315,316,5,67,0,0,316,317,
5,104,0,0,317,318,5,97,0,0,318,319,5,110,0,0,319,320,5,103,0,0,320,321,5,
101,0,0,321,72,1,0,0,0,322,323,5,99,0,0,323,324,5,108,0,0,324,325,5,97,0,
0,325,326,5,115,0,0,326,327,5,115,0,0,327,74,1,0,0,0,328,329,5,101,0,0,329,
330,5,110,0,0,330,331,5,100,0,0,331,332,5,45,0,0,332,333,5,99,0,0,333,334,
5,108,0,0,334,335,5,97,0,0,335,336,5,115,0,0,336,337,5,115,0,0,337,76,1,
0,0,0,338,339,5,112,0,0,339,340,5,114,0,0,340,341,5,105,0,0,341,342,5,118,
0,0,342,343,5,97,0,0,343,344,5,116,0,0,344,345,5,101,0,0,345,78,1,0,0,0,
346,347,5,109,0,0,347,348,5,101,0,0,348,349,5,116,0,0,349,350,5,104,0,0,
350,351,5,111,0,0,351,352,5,100,0,0,352,80,1,0,0,0,353,354,5,67,0,0,354,
355,5,111,0,0,355,356,5,110,0,0,356,357,5,115,0,0,357,358,5,116,0,0,358,
359,5,97,0,0,359,360,5,110,0,0,360,361,5,116,0,0,361,82,1,0,0,0,362,363,
5,112,0,0,363,364,5,114,0,0,364,365,5,111,0,0,365,366,5,112,0,0,366,367,
5,101,0,0,367,368,5,114,0,0,368,369,5,116,0,0,369,370,5,121,0,0,370,84,1,
0,0,0,371,372,5,103,0,0,372,373,5,101,0,0,373,374,5,116,0,0,374,86,1,0,0,
0,375,376,5,115,0,0,376,377,5,101,0,0,377,378,5,116,0,0,378,88,1,0,0,0,379,
380,5,114,0,0,380,381,5,101,0,0,381,382,5,97,0,0,382,383,5,100,0,0,383,384,
5,111,0,0,384,385,5,110,0,0,385,386,5,108,0,0,386,387,5,121,0,0,387,90,1,
0,0,0,388,389,5,105,0,0,389,390,5,110,0,0,390,391,5,115,0,0,391,392,5,116,
0,0,392,393,5,97,0,0,393,394,5,110,0,0,394,395,5,99,0,0,395,396,5,101,0,
0,396,92,1,0,0,0,397,398,5,101,0,0,398,399,5,110,0,0,399,400,5,100,0,0,400,
401,5,45,0,0,401,402,5,109,0,0,402,403,5,101,0,0,403,404,5,116,0,0,404,405,
5,104,0,0,405,406,5,111,0,0,406,407,5,100,0,0,407,94,1,0,0,0,408,409,5,101,
0,0,409,410,5,110,0,0,410,411,5,100,0,0,411,412,5,45,0,0,412,413,5,103,0,
0,413,414,5,101,0,0,414,415,5,116,0,0,415,96,1,0,0,0,416,417,5,101,0,0,417,
418,5,110,0,0,418,419,5,100,0,0,419,420,5,45,0,0,420,421,5,115,0,0,421,422,
5,101,0,0,422,423,5,116,0,0,423,98,1,0,0,0,424,425,5,69,0,0,425,426,5,110,
0,0,426,427,5,100,0,0,427,428,5,45,0,0,428,429,5,70,0,0,429,430,5,117,0,
0,430,431,5,110,0,0,431,432,5,99,0,0,432,433,5,116,0,0,433,434,5,105,0,0,
434,435,5,111,0,0,435,436,5,110,0,0,436,100,1,0,0,0,437,438,5,65,0,0,438,
439,5,115,0,0,439,102,1,0,0,0,440,441,5,82,0,0,441,442,5,101,0,0,442,443,
5,116,0,0,443,444,5,117,0,0,444,445,5,114,0,0,445,446,5,110,0,0,446,447,
5,115,0,0,447,104,1,0,0,0,448,449,5,73,0,0,449,450,5,102,0,0,450,106,1,0,
0,0,451,452,5,84,0,0,452,453,5,104,0,0,453,454,5,101,0,0,454,455,5,110,0,
0,455,108,1,0,0,0,456,457,5,69,0,0,457,458,5,108,0,0,458,459,5,115,0,0,459,
460,5,101,0,0,460,110,1,0,0,0,461,462,5,69,0,0,462,463,5,110,0,0,463,464,
5,100,0,0,464,465,5,45,0,0,465,466,5,73,0,0,466,467,5,102,0,0,467,112,1,
0,0,0,468,469,5,70,0,0,469,470,5,111,0,0,470,471,5,114,0,0,471,114,1,0,0,
0,472,473,5,84,0,0,473,474,5,111,0,0,474,116,1,0,0,0,475,476,5,83,0,0,476,
477,5,116,0,0,477,478,5,101,0,0,478,479,5,112,0,0,479,118,1,0,0,0,480,481,
5,69,0,0,481,482,5,110,0,0,482,483,5,100,0,0,483,484,5,45,0,0,484,485,5,
70,0,0,485,486,5,111,0,0,486,487,5,114,0,0,487,120,1,0,0,0,488,489,5,87,
0,0,489,490,5,104,0,0,490,491,5,105,0,0,491,492,5,108,0,0,492,493,5,101,
0,0,493,122,1,0,0,0,494,495,5,69,0,0,495,496,5,110,0,0,496,497,5,100,0,0,
497,498,5,45,0,0,498,499,5,87,0,0,499,500,5,104,0,0,500,501,5,105,0,0,501,
502,5,108,0,0,502,503,5,101,0,0,503,124,1,0,0,0,504,505,5,69,0,0,505,506,
5,118,0,0,506,507,5,97,0,0,507,508,5,108,0,0,508,509,5,117,0,0,509,510,5,
97,0,0,510,511,5,116,0,0,511,512,5,101,0,0,512,126,1,0,0,0,513,514,5,69,
0,0,514,515,5,110,0,0,515,516,5,100,0,0,516,517,5,45,0,0,517,518,5,69,0,
0,518,519,5,118,0,0,519,520,5,97,0,0,520,521,5,108,0,0,521,522,5,117,0,0,
522,523,5,97,0,0,523,524,5,116,0,0,524,525,5,101,0,0,525,128,1,0,0,0,526,
527,5,87,0,0,527,528,5,104,0,0,528,529,5,101,0,0,529,530,5,110,0,0,530,130,
1,0,0,0,531,532,5,87,0,0,532,533,5,104,0,0,533,534,5,101,0,0,534,535,5,110,
0,0,535,536,5,45,0,0,536,537,5,79,0,0,537,538,5,116,0,0,538,539,5,104,0,
0,539,540,5,101,0,0,540,541,5,114,0,0,541,132,1,0,0,0,542,543,5,116,0,0,
543,544,5,114,0,0,544,545,5,121,0,0,545,134,1,0,0,0,546,547,5,101,0,0,547,
548,5,110,0,0,548,549,5,100,0,0,549,550,5,45,0,0,550,551,5,116,0,0,551,552,
5,114,0,0,552,553,5,121,0,0,553,136,1,0,0,0,554,555,5,99,0,0,555,556,5,97,
0,0,556,557,5,116,0,0,557,558,5,99,0,0,558,559,5,104,0,0,559,138,1,0,0,0,
560,561,5,69,0,0,561,562,5,120,0,0,562,563,5,99,0,0,563,564,5,101,0,0,564,
565,5,112,0,0,565,566,5,116,0,0,566,567,5,105,0,0,567,568,5,111,0,0,568,
569,5,110,0,0,569,140,1,0,0,0,570,571,5,99,0,0,571,572,5,114,0,0,572,573,
5,101,0,0,573,574,5,97,0,0,574,575,5,116,0,0,575,576,5,101,0,0,576,142,1,
0,0,0,577,578,3,145,72,0,578,580,5,46,0,0,579,581,7,0,0,0,580,579,1,0,0,
0,581,582,1,0,0,0,582,580,1,0,0,0,582,583,1,0,0,0,583,144,1,0,0,0,584,593,
5,48,0,0,585,589,2,49,57,0,586,588,2,48,57,0,587,586,1,0,0,0,588,591,1,0,
0,0,589,587,1,0,0,0,589,590,1,0,0,0,590,593,1,0,0,0,591,589,1,0,0,0,592,
584,1,0,0,0,592,585,1,0,0,0,593,146,1,0,0,0,594,598,5,34,0,0,595,597,8,1,
0,0,596,595,1,0,0,0,597,600,1,0,0,0,598,596,1,0,0,0,598,599,1,0,0,0,599,
601,1,0,0,0,600,598,1,0,0,0,601,602,5,34,0,0,602,148,1,0,0,0,603,604,5,84,
0,0,604,605,5,114,0,0,605,606,5,117,0,0,606,613,5,101,0,0,607,608,5,70,0,
0,608,609,5,97,0,0,609,610,5,108,0,0,610,611,5,115,0,0,611,613,5,101,0,0,
612,603,1,0,0,0,612,607,1,0,0,0,613,150,1,0,0,0,614,615,5,38,0,0,615,616,
3,155,77,0,616,152,1,0,0,0,617,618,5,37,0,0,618,619,3,155,77,0,619,154,1,
0,0,0,620,624,7,2,0,0,621,623,7,3,0,0,622,621,1,0,0,0,623,626,1,0,0,0,624,
622,1,0,0,0,624,625,1,0,0,0,625,156,1,0,0,0,626,624,1,0,0,0,627,629,3,165,
82,0,628,627,1,0,0,0,628,629,1,0,0,0,629,630,1,0,0,0,630,631,7,4,0,0,631,
632,7,5,0,0,632,633,7,6,0,0,633,637,3,165,82,0,634,636,9,0,0,0,635,634,1,
0,0,0,636,639,1,0,0,0,637,638,1,0,0,0,637,635,1,0,0,0,638,640,1,0,0,0,639,
637,1,0,0,0,640,641,5,59,0,0,641,642,1,0,0,0,642,643,6,78,0,0,643,158,1,
0,0,0,644,645,5,47,0,0,645,646,5,42,0,0,646,650,1,0,0,0,647,649,9,0,0,0,
648,647,1,0,0,0,649,652,1,0,0,0,650,651,1,0,0,0,650,648,1,0,0,0,651,653,
1,0,0,0,652,650,1,0,0,0,653,654,5,42,0,0,654,655,5,47,0,0,655,656,1,0,0,
0,656,657,6,79,0,0,657,160,1,0,0,0,658,659,5,60,0,0,659,660,5,42,0,0,660,
664,1,0,0,0,661,663,9,0,0,0,662,661,1,0,0,0,663,666,1,0,0,0,664,665,1,0,
0,0,664,662,1,0,0,0,665,667,1,0,0,0,666,664,1,0,0,0,667,668,5,42,0,0,668,
669,5,62,0,0,669,670,1,0,0,0,670,671,6,80,0,0,671,162,1,0,0,0,672,673,5,
47,0,0,673,674,5,43,0,0,674,678,1,0,0,0,675,677,9,0,0,0,676,675,1,0,0,0,
677,680,1,0,0,0,678,679,1,0,0,0,678,676,1,0,0,0,679,681,1,0,0,0,680,678,
1,0,0,0,681,682,5,43,0,0,682,683,5,47,0,0,683,685,1,0,0,0,684,686,5,59,0,
0,685,684,1,0,0,0,685,686,1,0,0,0,686,687,1,0,0,0,687,688,6,81,0,0,688,164,
1,0,0,0,689,691,7,7,0,0,690,689,1,0,0,0,691,692,1,0,0,0,692,690,1,0,0,0,
692,693,1,0,0,0,693,694,1,0,0,0,694,695,6,82,0,0,695,166,1,0,0,0,14,0,582,
589,592,598,612,624,628,637,650,664,678,685,692,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class PeopleCodeLexer extends antlr4.Lexer {

    static grammarFileName = "PeopleCode.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "';'", "'Exit'", "'Break'", "'Error'", "'Warning'", 
                         "'Return'", "'throw'", "'='", "'('", "')'", "'@'", 
                         "'.'", "'['", "']'", "'-'", "'Not'", "'*'", "'/'", 
                         "'+'", "'<='", "'>='", "'<'", "'>'", "'<>'", "'And'", 
                         "'Or'", "'|'", "','", "'of'", "'import'", "':'", 
                         "'Declare'", "'Function'", "'PeopleCode'", "'FieldFormula'", 
                         "'FieldChange'", "'class'", "'end-class'", "'private'", 
                         "'method'", "'Constant'", "'property'", "'get'", 
                         "'set'", "'readonly'", "'instance'", "'end-method'", 
                         "'end-get'", "'end-set'", "'End-Function'", "'As'", 
                         "'Returns'", "'If'", "'Then'", "'Else'", "'End-If'", 
                         "'For'", "'To'", "'Step'", "'End-For'", "'While'", 
                         "'End-While'", "'Evaluate'", "'End-Evaluate'", 
                         "'When'", "'When-Other'", "'try'", "'end-try'", 
                         "'catch'", "'Exception'", "'create'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          "DecimalLiteral", "IntegerLiteral", "StringLiteral", 
                          "BoolLiteral", "VAR_ID", "SYS_VAR_ID", "GENERIC_ID", 
                          "REM", "COMMENT_1", "COMMENT_2", "COMMENT_3", 
                          "WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
                      "T__25", "T__26", "T__27", "T__28", "T__29", "T__30", 
                      "T__31", "T__32", "T__33", "T__34", "T__35", "T__36", 
                      "T__37", "T__38", "T__39", "T__40", "T__41", "T__42", 
                      "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
                      "T__49", "T__50", "T__51", "T__52", "T__53", "T__54", 
                      "T__55", "T__56", "T__57", "T__58", "T__59", "T__60", 
                      "T__61", "T__62", "T__63", "T__64", "T__65", "T__66", 
                      "T__67", "T__68", "T__69", "T__70", "DecimalLiteral", 
                      "IntegerLiteral", "StringLiteral", "BoolLiteral", 
                      "VAR_ID", "SYS_VAR_ID", "GENERIC_ID", "REM", "COMMENT_1", 
                      "COMMENT_2", "COMMENT_3", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

PeopleCodeLexer.EOF = antlr4.Token.EOF;
PeopleCodeLexer.T__0 = 1;
PeopleCodeLexer.T__1 = 2;
PeopleCodeLexer.T__2 = 3;
PeopleCodeLexer.T__3 = 4;
PeopleCodeLexer.T__4 = 5;
PeopleCodeLexer.T__5 = 6;
PeopleCodeLexer.T__6 = 7;
PeopleCodeLexer.T__7 = 8;
PeopleCodeLexer.T__8 = 9;
PeopleCodeLexer.T__9 = 10;
PeopleCodeLexer.T__10 = 11;
PeopleCodeLexer.T__11 = 12;
PeopleCodeLexer.T__12 = 13;
PeopleCodeLexer.T__13 = 14;
PeopleCodeLexer.T__14 = 15;
PeopleCodeLexer.T__15 = 16;
PeopleCodeLexer.T__16 = 17;
PeopleCodeLexer.T__17 = 18;
PeopleCodeLexer.T__18 = 19;
PeopleCodeLexer.T__19 = 20;
PeopleCodeLexer.T__20 = 21;
PeopleCodeLexer.T__21 = 22;
PeopleCodeLexer.T__22 = 23;
PeopleCodeLexer.T__23 = 24;
PeopleCodeLexer.T__24 = 25;
PeopleCodeLexer.T__25 = 26;
PeopleCodeLexer.T__26 = 27;
PeopleCodeLexer.T__27 = 28;
PeopleCodeLexer.T__28 = 29;
PeopleCodeLexer.T__29 = 30;
PeopleCodeLexer.T__30 = 31;
PeopleCodeLexer.T__31 = 32;
PeopleCodeLexer.T__32 = 33;
PeopleCodeLexer.T__33 = 34;
PeopleCodeLexer.T__34 = 35;
PeopleCodeLexer.T__35 = 36;
PeopleCodeLexer.T__36 = 37;
PeopleCodeLexer.T__37 = 38;
PeopleCodeLexer.T__38 = 39;
PeopleCodeLexer.T__39 = 40;
PeopleCodeLexer.T__40 = 41;
PeopleCodeLexer.T__41 = 42;
PeopleCodeLexer.T__42 = 43;
PeopleCodeLexer.T__43 = 44;
PeopleCodeLexer.T__44 = 45;
PeopleCodeLexer.T__45 = 46;
PeopleCodeLexer.T__46 = 47;
PeopleCodeLexer.T__47 = 48;
PeopleCodeLexer.T__48 = 49;
PeopleCodeLexer.T__49 = 50;
PeopleCodeLexer.T__50 = 51;
PeopleCodeLexer.T__51 = 52;
PeopleCodeLexer.T__52 = 53;
PeopleCodeLexer.T__53 = 54;
PeopleCodeLexer.T__54 = 55;
PeopleCodeLexer.T__55 = 56;
PeopleCodeLexer.T__56 = 57;
PeopleCodeLexer.T__57 = 58;
PeopleCodeLexer.T__58 = 59;
PeopleCodeLexer.T__59 = 60;
PeopleCodeLexer.T__60 = 61;
PeopleCodeLexer.T__61 = 62;
PeopleCodeLexer.T__62 = 63;
PeopleCodeLexer.T__63 = 64;
PeopleCodeLexer.T__64 = 65;
PeopleCodeLexer.T__65 = 66;
PeopleCodeLexer.T__66 = 67;
PeopleCodeLexer.T__67 = 68;
PeopleCodeLexer.T__68 = 69;
PeopleCodeLexer.T__69 = 70;
PeopleCodeLexer.T__70 = 71;
PeopleCodeLexer.DecimalLiteral = 72;
PeopleCodeLexer.IntegerLiteral = 73;
PeopleCodeLexer.StringLiteral = 74;
PeopleCodeLexer.BoolLiteral = 75;
PeopleCodeLexer.VAR_ID = 76;
PeopleCodeLexer.SYS_VAR_ID = 77;
PeopleCodeLexer.GENERIC_ID = 78;
PeopleCodeLexer.REM = 79;
PeopleCodeLexer.COMMENT_1 = 80;
PeopleCodeLexer.COMMENT_2 = 81;
PeopleCodeLexer.COMMENT_3 = 82;
PeopleCodeLexer.WS = 83;



