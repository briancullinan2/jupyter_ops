// Generated from ./spass/SpassLexer.g4 by ANTLR 4.10.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,99,877,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,
7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,
2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,
19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,
7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,
33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,
2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,
48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,
7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,
62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,
2,70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,
77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,
7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,7,
91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,98,7,98,
1,0,1,0,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,
1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,
1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,9,1,9,1,10,1,10,1,
10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,
1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,
16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,18,
1,18,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,
20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,
25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,
1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,
29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,
1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,
33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,35,
1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,
36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,
1,38,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,
41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,
1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,
42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,
1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,
44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,
1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,
45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,46,1,46,
1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,
47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,
1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,
49,1,49,1,49,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,
1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,56,1,56,1,
57,1,57,1,58,1,58,1,59,1,59,1,59,1,59,1,60,1,60,1,60,1,61,1,61,1,61,1,61,
1,61,1,61,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,63,1,63,1,
63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,64,1,64,1,64,1,64,1,64,1,64,
1,64,1,64,1,65,1,65,1,65,1,65,1,66,1,66,1,66,1,66,1,67,1,67,1,67,1,67,1,
67,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,68,1,68,1,68,1,68,1,68,1,68,1,68,
1,68,1,68,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,70,1,70,1,70,1,70,1,71,1,
71,1,71,1,71,1,72,1,72,1,72,1,72,1,72,1,73,1,73,1,73,1,73,1,73,1,73,1,74,
1,74,1,74,1,74,1,74,1,74,1,75,1,75,1,75,1,75,1,76,1,76,1,76,1,76,1,76,1,
76,1,76,1,76,1,76,1,76,1,76,1,77,1,77,1,77,1,77,1,78,1,78,1,78,1,78,1,79,
1,79,1,79,1,79,1,80,1,80,1,80,1,80,1,81,1,81,1,81,1,81,1,81,1,81,1,81,1,
82,1,82,1,82,1,82,1,82,1,83,1,83,1,83,1,83,1,83,1,83,1,83,1,83,1,84,1,84,
1,84,1,84,1,85,1,85,1,85,1,85,1,85,1,86,1,86,1,86,1,86,1,86,1,87,1,87,1,
87,1,87,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,89,1,89,1,89,1,89,1,89,
1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,90,1,90,1,90,1,90,1,91,1,
91,1,91,1,91,1,91,1,91,1,91,1,91,1,92,4,92,842,8,92,11,92,12,92,843,1,92,
1,92,1,93,1,93,1,93,1,93,1,93,1,94,1,94,1,94,1,94,5,94,857,8,94,10,94,12,
94,860,9,94,1,95,1,95,1,96,1,96,1,97,1,97,1,97,1,97,1,97,1,98,1,98,1,98,
4,98,874,8,98,11,98,12,98,875,0,0,99,2,1,4,2,6,3,8,4,10,5,12,6,14,7,16,8,
18,9,20,10,22,11,24,12,26,13,28,14,30,15,32,16,34,17,36,18,38,19,40,20,42,
21,44,22,46,23,48,24,50,25,52,26,54,27,56,28,58,29,60,30,62,31,64,32,66,
33,68,34,70,35,72,36,74,37,76,38,78,39,80,40,82,41,84,42,86,43,88,44,90,
45,92,46,94,47,96,48,98,49,100,50,102,51,104,52,106,53,108,54,110,55,112,
56,114,57,116,58,118,59,120,60,122,61,124,62,126,63,128,64,130,65,132,66,
134,67,136,68,138,69,140,70,142,71,144,72,146,73,148,74,150,75,152,76,154,
77,156,78,158,79,160,80,162,81,164,82,166,83,168,84,170,85,172,86,174,87,
176,88,178,89,180,90,182,91,184,92,186,93,188,94,190,95,192,96,194,97,196,
98,198,99,2,0,1,4,3,0,9,10,13,13,32,32,2,0,65,90,97,122,1,0,42,42,1,0,125,
125,881,0,2,1,0,0,0,0,4,1,0,0,0,0,6,1,0,0,0,0,8,1,0,0,0,0,10,1,0,0,0,0,12,
1,0,0,0,0,14,1,0,0,0,0,16,1,0,0,0,0,18,1,0,0,0,0,20,1,0,0,0,0,22,1,0,0,0,
0,24,1,0,0,0,0,26,1,0,0,0,0,28,1,0,0,0,0,30,1,0,0,0,0,32,1,0,0,0,0,34,1,
0,0,0,0,36,1,0,0,0,0,38,1,0,0,0,0,40,1,0,0,0,0,42,1,0,0,0,0,44,1,0,0,0,0,
46,1,0,0,0,0,48,1,0,0,0,0,50,1,0,0,0,0,52,1,0,0,0,0,54,1,0,0,0,0,56,1,0,
0,0,0,58,1,0,0,0,0,60,1,0,0,0,0,62,1,0,0,0,0,64,1,0,0,0,0,66,1,0,0,0,0,68,
1,0,0,0,0,70,1,0,0,0,0,72,1,0,0,0,0,74,1,0,0,0,0,76,1,0,0,0,0,78,1,0,0,0,
0,80,1,0,0,0,0,82,1,0,0,0,0,84,1,0,0,0,0,86,1,0,0,0,0,88,1,0,0,0,0,90,1,
0,0,0,0,92,1,0,0,0,0,94,1,0,0,0,0,96,1,0,0,0,0,98,1,0,0,0,0,100,1,0,0,0,
0,102,1,0,0,0,0,104,1,0,0,0,0,106,1,0,0,0,0,108,1,0,0,0,0,110,1,0,0,0,0,
112,1,0,0,0,0,114,1,0,0,0,0,116,1,0,0,0,0,118,1,0,0,0,0,120,1,0,0,0,0,122,
1,0,0,0,0,124,1,0,0,0,0,126,1,0,0,0,0,128,1,0,0,0,0,130,1,0,0,0,0,132,1,
0,0,0,0,134,1,0,0,0,0,136,1,0,0,0,0,138,1,0,0,0,0,140,1,0,0,0,0,142,1,0,
0,0,0,144,1,0,0,0,0,146,1,0,0,0,0,148,1,0,0,0,0,150,1,0,0,0,0,152,1,0,0,
0,0,154,1,0,0,0,0,156,1,0,0,0,0,158,1,0,0,0,0,160,1,0,0,0,0,162,1,0,0,0,
0,164,1,0,0,0,0,166,1,0,0,0,0,168,1,0,0,0,0,170,1,0,0,0,0,172,1,0,0,0,0,
174,1,0,0,0,0,176,1,0,0,0,0,178,1,0,0,0,0,180,1,0,0,0,0,182,1,0,0,0,0,184,
1,0,0,0,0,186,1,0,0,0,0,188,1,0,0,0,0,190,1,0,0,0,0,192,1,0,0,0,0,194,1,
0,0,0,1,196,1,0,0,0,1,198,1,0,0,0,2,200,1,0,0,0,4,202,1,0,0,0,6,206,1,0,
0,0,8,213,1,0,0,0,10,220,1,0,0,0,12,234,1,0,0,0,14,241,1,0,0,0,16,243,1,
0,0,0,18,245,1,0,0,0,20,247,1,0,0,0,22,251,1,0,0,0,24,255,1,0,0,0,26,257,
1,0,0,0,28,259,1,0,0,0,30,263,1,0,0,0,32,275,1,0,0,0,34,280,1,0,0,0,36,292,
1,0,0,0,38,296,1,0,0,0,40,298,1,0,0,0,42,302,1,0,0,0,44,314,1,0,0,0,46,326,
1,0,0,0,48,330,1,0,0,0,50,334,1,0,0,0,52,340,1,0,0,0,54,346,1,0,0,0,56,353,
1,0,0,0,58,357,1,0,0,0,60,363,1,0,0,0,62,370,1,0,0,0,64,378,1,0,0,0,66,385,
1,0,0,0,68,395,1,0,0,0,70,408,1,0,0,0,72,412,1,0,0,0,74,423,1,0,0,0,76,431,
1,0,0,0,78,439,1,0,0,0,80,443,1,0,0,0,82,447,1,0,0,0,84,451,1,0,0,0,86,467,
1,0,0,0,88,488,1,0,0,0,90,509,1,0,0,0,92,526,1,0,0,0,94,551,1,0,0,0,96,565,
1,0,0,0,98,582,1,0,0,0,100,598,1,0,0,0,102,604,1,0,0,0,104,607,1,0,0,0,106,
611,1,0,0,0,108,616,1,0,0,0,110,620,1,0,0,0,112,624,1,0,0,0,114,628,1,0,
0,0,116,630,1,0,0,0,118,632,1,0,0,0,120,634,1,0,0,0,122,638,1,0,0,0,124,
641,1,0,0,0,126,647,1,0,0,0,128,657,1,0,0,0,130,668,1,0,0,0,132,676,1,0,
0,0,134,680,1,0,0,0,136,684,1,0,0,0,138,696,1,0,0,0,140,705,1,0,0,0,142,
712,1,0,0,0,144,716,1,0,0,0,146,720,1,0,0,0,148,725,1,0,0,0,150,731,1,0,
0,0,152,737,1,0,0,0,154,741,1,0,0,0,156,752,1,0,0,0,158,756,1,0,0,0,160,
760,1,0,0,0,162,764,1,0,0,0,164,768,1,0,0,0,166,775,1,0,0,0,168,780,1,0,
0,0,170,788,1,0,0,0,172,792,1,0,0,0,174,797,1,0,0,0,176,802,1,0,0,0,178,
806,1,0,0,0,180,814,1,0,0,0,182,828,1,0,0,0,184,832,1,0,0,0,186,841,1,0,
0,0,188,847,1,0,0,0,190,852,1,0,0,0,192,861,1,0,0,0,194,863,1,0,0,0,196,
865,1,0,0,0,198,873,1,0,0,0,200,201,5,45,0,0,201,3,1,0,0,0,202,203,5,97,
0,0,203,204,5,110,0,0,204,205,5,100,0,0,205,5,1,0,0,0,206,207,5,97,0,0,207,
208,5,117,0,0,208,209,5,116,0,0,209,210,5,104,0,0,210,211,5,111,0,0,211,
212,5,114,0,0,212,7,1,0,0,0,213,214,5,97,0,0,214,215,5,120,0,0,215,216,5,
105,0,0,216,217,5,111,0,0,217,218,5,109,0,0,218,219,5,115,0,0,219,9,1,0,
0,0,220,221,5,98,0,0,221,222,5,101,0,0,222,223,5,103,0,0,223,224,5,105,0,
0,224,225,5,110,0,0,225,226,5,95,0,0,226,227,5,112,0,0,227,228,5,114,0,0,
228,229,5,111,0,0,229,230,5,98,0,0,230,231,5,108,0,0,231,232,5,101,0,0,232,
233,5,109,0,0,233,11,1,0,0,0,234,235,5,99,0,0,235,236,5,108,0,0,236,237,
5,97,0,0,237,238,5,117,0,0,238,239,5,115,0,0,239,240,5,101,0,0,240,13,1,
0,0,0,241,242,5,93,0,0,242,15,1,0,0,0,243,244,5,125,0,0,244,17,1,0,0,0,245,
246,5,41,0,0,246,19,1,0,0,0,247,248,5,67,0,0,248,249,5,108,0,0,249,250,5,
82,0,0,250,21,1,0,0,0,251,252,5,99,0,0,252,253,5,110,0,0,253,254,5,102,0,
0,254,23,1,0,0,0,255,256,5,58,0,0,256,25,1,0,0,0,257,258,5,44,0,0,258,27,
1,0,0,0,259,260,5,67,0,0,260,261,5,111,0,0,261,262,5,110,0,0,262,29,1,0,
0,0,263,264,5,99,0,0,264,265,5,111,0,0,265,266,5,110,0,0,266,267,5,106,0,
0,267,268,5,101,0,0,268,269,5,99,0,0,269,270,5,116,0,0,270,271,5,117,0,0,
271,272,5,114,0,0,272,273,5,101,0,0,273,274,5,115,0,0,274,31,1,0,0,0,275,
276,5,100,0,0,276,277,5,97,0,0,277,278,5,116,0,0,278,279,5,101,0,0,279,33,
1,0,0,0,280,281,5,100,0,0,281,282,5,101,0,0,282,283,5,115,0,0,283,284,5,
99,0,0,284,285,5,114,0,0,285,286,5,105,0,0,286,287,5,112,0,0,287,288,5,116,
0,0,288,289,5,105,0,0,289,290,5,111,0,0,290,291,5,110,0,0,291,35,1,0,0,0,
292,293,5,100,0,0,293,294,5,110,0,0,294,295,5,102,0,0,295,37,1,0,0,0,296,
297,5,46,0,0,297,39,1,0,0,0,298,299,5,69,0,0,299,300,5,109,0,0,300,301,5,
83,0,0,301,41,1,0,0,0,302,303,5,101,0,0,303,304,5,110,0,0,304,305,5,100,
0,0,305,306,5,95,0,0,306,307,5,111,0,0,307,308,5,102,0,0,308,309,5,95,0,
0,309,310,5,108,0,0,310,311,5,105,0,0,311,312,5,115,0,0,312,313,5,116,0,
0,313,43,1,0,0,0,314,315,5,101,0,0,315,316,5,110,0,0,316,317,5,100,0,0,317,
318,5,95,0,0,318,319,5,112,0,0,319,320,5,114,0,0,320,321,5,111,0,0,321,322,
5,98,0,0,322,323,5,108,0,0,323,324,5,101,0,0,324,325,5,109,0,0,325,45,1,
0,0,0,326,327,5,69,0,0,327,328,5,113,0,0,328,329,5,70,0,0,329,47,1,0,0,0,
330,331,5,69,0,0,331,332,5,113,0,0,332,333,5,82,0,0,333,49,1,0,0,0,334,335,
5,101,0,0,335,336,5,113,0,0,336,337,5,117,0,0,337,338,5,97,0,0,338,339,5,
108,0,0,339,51,1,0,0,0,340,341,5,101,0,0,341,342,5,113,0,0,342,343,5,117,
0,0,343,344,5,105,0,0,344,345,5,118,0,0,345,53,1,0,0,0,346,347,5,101,0,0,
347,348,5,120,0,0,348,349,5,105,0,0,349,350,5,115,0,0,350,351,5,116,0,0,
351,352,5,115,0,0,352,55,1,0,0,0,353,354,5,70,0,0,354,355,5,97,0,0,355,356,
5,99,0,0,356,57,1,0,0,0,357,358,5,102,0,0,358,359,5,97,0,0,359,360,5,108,
0,0,360,361,5,115,0,0,361,362,5,101,0,0,362,59,1,0,0,0,363,364,5,102,0,0,
364,365,5,111,0,0,365,366,5,114,0,0,366,367,5,97,0,0,367,368,5,108,0,0,368,
369,5,108,0,0,369,61,1,0,0,0,370,371,5,102,0,0,371,372,5,111,0,0,372,373,
5,114,0,0,373,374,5,109,0,0,374,375,5,117,0,0,375,376,5,108,0,0,376,377,
5,97,0,0,377,63,1,0,0,0,378,379,5,102,0,0,379,380,5,114,0,0,380,381,5,101,
0,0,381,382,5,101,0,0,382,383,5,108,0,0,383,384,5,121,0,0,384,65,1,0,0,0,
385,386,5,102,0,0,386,387,5,117,0,0,387,388,5,110,0,0,388,389,5,99,0,0,389,
390,5,116,0,0,390,391,5,105,0,0,391,392,5,111,0,0,392,393,5,110,0,0,393,
394,5,115,0,0,394,67,1,0,0,0,395,396,5,103,0,0,396,397,5,101,0,0,397,398,
5,110,0,0,398,399,5,101,0,0,399,400,5,114,0,0,400,401,5,97,0,0,401,402,5,
116,0,0,402,403,5,101,0,0,403,404,5,100,0,0,404,405,5,95,0,0,405,406,5,98,
0,0,406,407,5,121,0,0,407,69,1,0,0,0,408,409,5,71,0,0,409,410,5,101,0,0,
410,411,5,82,0,0,411,71,1,0,0,0,412,413,5,104,0,0,413,414,5,121,0,0,414,
415,5,112,0,0,415,416,5,111,0,0,416,417,5,116,0,0,417,418,5,104,0,0,418,
419,5,101,0,0,419,420,5,115,0,0,420,421,5,105,0,0,421,422,5,115,0,0,422,
73,1,0,0,0,423,424,5,105,0,0,424,425,5,109,0,0,425,426,5,112,0,0,426,427,
5,108,0,0,427,428,5,105,0,0,428,429,5,101,0,0,429,430,5,100,0,0,430,75,1,
0,0,0,431,432,5,105,0,0,432,433,5,109,0,0,433,434,5,112,0,0,434,435,5,108,
0,0,435,436,5,105,0,0,436,437,5,101,0,0,437,438,5,115,0,0,438,77,1,0,0,0,
439,440,5,73,0,0,440,441,5,110,0,0,441,442,5,112,0,0,442,79,1,0,0,0,443,
444,5,75,0,0,444,445,5,73,0,0,445,446,5,86,0,0,446,81,1,0,0,0,447,448,5,
76,0,0,448,449,5,69,0,0,449,450,5,77,0,0,450,83,1,0,0,0,451,452,5,108,0,
0,452,453,5,105,0,0,453,454,5,115,0,0,454,455,5,116,0,0,455,456,5,95,0,0,
456,457,5,111,0,0,457,458,5,102,0,0,458,459,5,95,0,0,459,460,5,99,0,0,460,
461,5,108,0,0,461,462,5,97,0,0,462,463,5,117,0,0,463,464,5,115,0,0,464,465,
5,101,0,0,465,466,5,115,0,0,466,85,1,0,0,0,467,468,5,108,0,0,468,469,5,105,
0,0,469,470,5,115,0,0,470,471,5,116,0,0,471,472,5,95,0,0,472,473,5,111,0,
0,473,474,5,102,0,0,474,475,5,95,0,0,475,476,5,100,0,0,476,477,5,101,0,0,
477,478,5,99,0,0,478,479,5,108,0,0,479,480,5,97,0,0,480,481,5,114,0,0,481,
482,5,97,0,0,482,483,5,116,0,0,483,484,5,105,0,0,484,485,5,111,0,0,485,486,
5,110,0,0,486,487,5,115,0,0,487,87,1,0,0,0,488,489,5,108,0,0,489,490,5,105,
0,0,490,491,5,115,0,0,491,492,5,116,0,0,492,493,5,95,0,0,493,494,5,111,0,
0,494,495,5,102,0,0,495,496,5,95,0,0,496,497,5,100,0,0,497,498,5,101,0,0,
498,499,5,115,0,0,499,500,5,99,0,0,500,501,5,114,0,0,501,502,5,105,0,0,502,
503,5,112,0,0,503,504,5,116,0,0,504,505,5,105,0,0,505,506,5,111,0,0,506,
507,5,110,0,0,507,508,5,115,0,0,508,89,1,0,0,0,509,510,5,108,0,0,510,511,
5,105,0,0,511,512,5,115,0,0,512,513,5,116,0,0,513,514,5,95,0,0,514,515,5,
111,0,0,515,516,5,102,0,0,516,517,5,95,0,0,517,518,5,102,0,0,518,519,5,111,
0,0,519,520,5,114,0,0,520,521,5,109,0,0,521,522,5,117,0,0,522,523,5,108,
0,0,523,524,5,97,0,0,524,525,5,101,0,0,525,91,1,0,0,0,526,527,5,108,0,0,
527,528,5,105,0,0,528,529,5,115,0,0,529,530,5,116,0,0,530,531,5,95,0,0,531,
532,5,111,0,0,532,533,5,102,0,0,533,534,5,95,0,0,534,535,5,103,0,0,535,536,
5,101,0,0,536,537,5,110,0,0,537,538,5,101,0,0,538,539,5,114,0,0,539,540,
5,97,0,0,540,541,5,108,0,0,541,542,5,95,0,0,542,543,5,115,0,0,543,544,5,
101,0,0,544,545,5,116,0,0,545,546,5,116,0,0,546,547,5,105,0,0,547,548,5,
110,0,0,548,549,5,103,0,0,549,550,5,115,0,0,550,93,1,0,0,0,551,552,5,108,
0,0,552,553,5,105,0,0,553,554,5,115,0,0,554,555,5,116,0,0,555,556,5,95,0,
0,556,557,5,111,0,0,557,558,5,102,0,0,558,559,5,95,0,0,559,560,5,112,0,0,
560,561,5,114,0,0,561,562,5,111,0,0,562,563,5,111,0,0,563,564,5,102,0,0,
564,95,1,0,0,0,565,566,5,108,0,0,566,567,5,105,0,0,567,568,5,115,0,0,568,
569,5,116,0,0,569,570,5,95,0,0,570,571,5,111,0,0,571,572,5,102,0,0,572,573,
5,95,0,0,573,574,5,115,0,0,574,575,5,101,0,0,575,576,5,116,0,0,576,577,5,
116,0,0,577,578,5,105,0,0,578,579,5,110,0,0,579,580,5,103,0,0,580,581,5,
115,0,0,581,97,1,0,0,0,582,583,5,108,0,0,583,584,5,105,0,0,584,585,5,115,
0,0,585,586,5,116,0,0,586,587,5,95,0,0,587,588,5,111,0,0,588,589,5,102,0,
0,589,590,5,95,0,0,590,591,5,115,0,0,591,592,5,121,0,0,592,593,5,109,0,0,
593,594,5,98,0,0,594,595,5,111,0,0,595,596,5,108,0,0,596,597,5,115,0,0,597,
99,1,0,0,0,598,599,5,108,0,0,599,600,5,111,0,0,600,601,5,103,0,0,601,602,
5,105,0,0,602,603,5,99,0,0,603,101,1,0,0,0,604,605,5,45,0,0,605,606,5,49,
0,0,606,103,1,0,0,0,607,608,5,77,0,0,608,609,5,80,0,0,609,610,5,109,0,0,
610,105,1,0,0,0,611,612,5,110,0,0,612,613,5,97,0,0,613,614,5,109,0,0,614,
615,5,101,0,0,615,107,1,0,0,0,616,617,5,110,0,0,617,618,5,111,0,0,618,619,
5,116,0,0,619,109,1,0,0,0,620,621,5,79,0,0,621,622,5,98,0,0,622,623,5,118,
0,0,623,111,1,0,0,0,624,625,5,79,0,0,625,626,5,72,0,0,626,627,5,121,0,0,
627,113,1,0,0,0,628,629,5,91,0,0,629,115,1,0,0,0,630,631,5,123,0,0,631,117,
1,0,0,0,632,633,5,40,0,0,633,119,1,0,0,0,634,635,5,79,0,0,635,636,5,80,0,
0,636,637,5,109,0,0,637,121,1,0,0,0,638,639,5,111,0,0,639,640,5,114,0,0,
640,123,1,0,0,0,641,642,5,79,0,0,642,643,5,84,0,0,643,644,5,84,0,0,644,645,
5,69,0,0,645,646,5,82,0,0,646,125,1,0,0,0,647,648,5,112,0,0,648,649,5,114,
0,0,649,650,5,101,0,0,650,651,5,100,0,0,651,652,5,105,0,0,652,653,5,99,0,
0,653,654,5,97,0,0,654,655,5,116,0,0,655,656,5,101,0,0,656,127,1,0,0,0,657,
658,5,112,0,0,658,659,5,114,0,0,659,660,5,101,0,0,660,661,5,100,0,0,661,
662,5,105,0,0,662,663,5,99,0,0,663,664,5,97,0,0,664,665,5,116,0,0,665,666,
5,101,0,0,666,667,5,115,0,0,667,129,1,0,0,0,668,669,5,80,0,0,669,670,5,82,
0,0,670,671,5,79,0,0,671,672,5,84,0,0,672,673,5,69,0,0,673,674,5,73,0,0,
674,675,5,78,0,0,675,131,1,0,0,0,676,677,5,82,0,0,677,678,5,101,0,0,678,
679,5,119,0,0,679,133,1,0,0,0,680,681,5,82,0,0,681,682,5,82,0,0,682,683,
5,69,0,0,683,135,1,0,0,0,684,685,5,115,0,0,685,686,5,97,0,0,686,687,5,116,
0,0,687,688,5,105,0,0,688,689,5,115,0,0,689,690,5,102,0,0,690,691,5,105,
0,0,691,692,5,97,0,0,692,693,5,98,0,0,693,694,5,108,0,0,694,695,5,101,0,
0,695,137,1,0,0,0,696,697,5,83,0,0,697,698,5,65,0,0,698,699,5,84,0,0,699,
700,5,85,0,0,700,701,5,82,0,0,701,702,5,65,0,0,702,703,5,84,0,0,703,704,
5,69,0,0,704,139,1,0,0,0,705,706,5,83,0,0,706,707,5,69,0,0,707,708,5,84,
0,0,708,709,5,72,0,0,709,710,5,69,0,0,710,711,5,79,0,0,711,141,1,0,0,0,712,
713,5,83,0,0,713,714,5,72,0,0,714,715,5,121,0,0,715,143,1,0,0,0,716,717,
5,83,0,0,717,718,5,111,0,0,718,719,5,82,0,0,719,145,1,0,0,0,720,721,5,115,
0,0,721,722,5,111,0,0,722,723,5,114,0,0,723,724,5,116,0,0,724,147,1,0,0,
0,725,726,5,115,0,0,726,727,5,111,0,0,727,728,5,114,0,0,728,729,5,116,0,
0,729,730,5,115,0,0,730,149,1,0,0,0,731,732,5,83,0,0,732,733,5,80,0,0,733,
734,5,65,0,0,734,735,5,83,0,0,735,736,5,83,0,0,736,151,1,0,0,0,737,738,5,
83,0,0,738,739,5,112,0,0,739,740,5,76,0,0,740,153,1,0,0,0,741,742,5,115,
0,0,742,743,5,112,0,0,743,744,5,108,0,0,744,745,5,105,0,0,745,746,5,116,
0,0,746,747,5,108,0,0,747,748,5,101,0,0,748,749,5,118,0,0,749,750,5,101,
0,0,750,751,5,108,0,0,751,155,1,0,0,0,752,753,5,83,0,0,753,754,5,80,0,0,
754,755,5,109,0,0,755,157,1,0,0,0,756,757,5,83,0,0,757,758,5,112,0,0,758,
759,5,82,0,0,759,159,1,0,0,0,760,761,5,83,0,0,761,762,5,112,0,0,762,763,
5,116,0,0,763,161,1,0,0,0,764,765,5,83,0,0,765,766,5,83,0,0,766,767,5,105,
0,0,767,163,1,0,0,0,768,769,5,115,0,0,769,770,5,116,0,0,770,771,5,97,0,0,
771,772,5,116,0,0,772,773,5,117,0,0,773,774,5,115,0,0,774,165,1,0,0,0,775,
776,5,115,0,0,776,777,5,116,0,0,777,778,5,101,0,0,778,779,5,112,0,0,779,
167,1,0,0,0,780,781,5,115,0,0,781,782,5,117,0,0,782,783,5,98,0,0,783,784,
5,115,0,0,784,785,5,111,0,0,785,786,5,114,0,0,786,787,5,116,0,0,787,169,
1,0,0,0,788,789,5,84,0,0,789,790,5,101,0,0,790,791,5,114,0,0,791,171,1,0,
0,0,792,793,5,51,0,0,793,794,5,84,0,0,794,795,5,65,0,0,795,796,5,80,0,0,
796,173,1,0,0,0,797,798,5,116,0,0,798,799,5,114,0,0,799,800,5,117,0,0,800,
801,5,101,0,0,801,175,1,0,0,0,802,803,5,85,0,0,803,804,5,110,0,0,804,805,
5,67,0,0,805,177,1,0,0,0,806,807,5,117,0,0,807,808,5,110,0,0,808,809,5,107,
0,0,809,810,5,110,0,0,810,811,5,111,0,0,811,812,5,119,0,0,812,813,5,110,
0,0,813,179,1,0,0,0,814,815,5,117,0,0,815,816,5,110,0,0,816,817,5,115,0,
0,817,818,5,97,0,0,818,819,5,116,0,0,819,820,5,105,0,0,820,821,5,115,0,0,
821,822,5,102,0,0,822,823,5,105,0,0,823,824,5,97,0,0,824,825,5,98,0,0,825,
826,5,108,0,0,826,827,5,101,0,0,827,181,1,0,0,0,828,829,5,85,0,0,829,830,
5,82,0,0,830,831,5,82,0,0,831,183,1,0,0,0,832,833,5,118,0,0,833,834,5,101,
0,0,834,835,5,114,0,0,835,836,5,115,0,0,836,837,5,105,0,0,837,838,5,111,
0,0,838,839,5,110,0,0,839,185,1,0,0,0,840,842,7,0,0,0,841,840,1,0,0,0,842,
843,1,0,0,0,843,841,1,0,0,0,843,844,1,0,0,0,844,845,1,0,0,0,845,846,6,92,
0,0,846,187,1,0,0,0,847,848,5,123,0,0,848,849,5,42,0,0,849,850,1,0,0,0,850,
851,6,93,1,0,851,189,1,0,0,0,852,858,3,192,95,0,853,857,3,192,95,0,854,857,
3,194,96,0,855,857,3,2,0,0,856,853,1,0,0,0,856,854,1,0,0,0,856,855,1,0,0,
0,857,860,1,0,0,0,858,856,1,0,0,0,858,859,1,0,0,0,859,191,1,0,0,0,860,858,
1,0,0,0,861,862,7,1,0,0,862,193,1,0,0,0,863,864,2,48,57,0,864,195,1,0,0,
0,865,866,5,42,0,0,866,867,5,125,0,0,867,868,1,0,0,0,868,869,6,97,2,0,869,
197,1,0,0,0,870,874,8,2,0,0,871,872,5,42,0,0,872,874,8,3,0,0,873,870,1,0,
0,0,873,871,1,0,0,0,874,875,1,0,0,0,875,873,1,0,0,0,875,876,1,0,0,0,876,
199,1,0,0,0,7,0,1,843,856,858,873,875,3,0,1,0,5,1,0,4,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class SpassLexer extends antlr4.Lexer {

    static grammarFileName = "SpassLexer.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE", "TextMode" ];
	static literalNames = [ null, "'-'", "'and'", "'author'", "'axioms'", "'begin_problem'", 
                         "'clause'", "']'", "'}'", "')'", "'ClR'", "'cnf'", 
                         "':'", "','", "'Con'", "'conjectures'", "'date'", 
                         "'description'", "'dnf'", "'.'", "'EmS'", "'end_of_list'", 
                         "'end_problem'", "'EqF'", "'EqR'", "'equal'", "'equiv'", 
                         "'exists'", "'Fac'", "'false'", "'forall'", "'formula'", 
                         "'freely'", "'functions'", "'generated_by'", "'GeR'", 
                         "'hypothesis'", "'implied'", "'implies'", "'Inp'", 
                         "'KIV'", "'LEM'", "'list_of_clauses'", "'list_of_declarations'", 
                         "'list_of_descriptions'", "'list_of_formulae'", 
                         "'list_of_general_settings'", "'list_of_proof'", 
                         "'list_of_settings'", "'list_of_symbols'", "'logic'", 
                         "'-1'", "'MPm'", "'name'", "'not'", "'Obv'", "'OHy'", 
                         "'['", "'{'", "'('", "'OPm'", "'or'", "'OTTER'", 
                         "'predicate'", "'predicates'", "'PROTEIN'", "'Rew'", 
                         "'RRE'", "'satisfiable'", "'SATURATE'", "'SETHEO'", 
                         "'SHy'", "'SoR'", "'sort'", "'sorts'", "'SPASS'", 
                         "'SpL'", "'splitlevel'", "'SPm'", "'SpR'", "'Spt'", 
                         "'SSi'", "'status'", "'step'", "'subsort'", "'Ter'", 
                         "'3TAP'", "'true'", "'UnC'", "'unknown'", "'unsatisfiable'", 
                         "'URR'", "'version'", null, "'{*'", null, null, 
                         null, "'*}'" ];
	static symbolicNames = [ null, "Special_symbol", "And", "Author", "Axioms", 
                          "Begin_problem", "Clause", "CloseB", "CloseBc", 
                          "CloseP", "ClR", "Cnf", "Colon", "Comma", "Con", 
                          "Conjectures", "Date", "Description", "Dnf", "Dot", 
                          "EmS", "End_of_list", "End_problem", "EqF", "EqR", 
                          "Equal", "Equiv", "Exists", "Fac", "False_", "Forall", 
                          "Formula", "Freely", "Functions", "Generated_by", 
                          "GeR", "Hypothesis", "Implied", "Implies", "Inp", 
                          "KIV", "LEM", "List_of_clauses", "List_of_declarations", 
                          "List_of_descriptions", "List_of_formulae", "List_of_general_settings", 
                          "List_of_proof", "List_of_settings", "List_of_symbols", 
                          "Logic", "MOne", "MPm", "Name", "Not", "Obv", 
                          "OHy", "OpenB", "OpenBc", "OpenP", "OPm", "Or", 
                          "OTTER", "Predicate", "Predicates", "PROTEIN", 
                          "Rew", "RRE", "Satisfiable", "SATURATE", "SETHEO", 
                          "SHy", "SoR", "Sort", "Sorts", "SPASS", "SpL", 
                          "Splitlevel", "SPm", "SpR", "Spt", "SSi", "Status", 
                          "Step", "Subsort", "Ter", "ThreeTAP", "True_", 
                          "UnC", "Unknown", "Unsatisfiable", "URR", "Version", 
                          "WS", "Open", "Identifier", "Letter", "Digit", 
                          "Close", "JustText" ];
	static ruleNames = [ "Special_symbol", "And", "Author", "Axioms", "Begin_problem", 
                      "Clause", "CloseB", "CloseBc", "CloseP", "ClR", "Cnf", 
                      "Colon", "Comma", "Con", "Conjectures", "Date", "Description", 
                      "Dnf", "Dot", "EmS", "End_of_list", "End_problem", 
                      "EqF", "EqR", "Equal", "Equiv", "Exists", "Fac", "False_", 
                      "Forall", "Formula", "Freely", "Functions", "Generated_by", 
                      "GeR", "Hypothesis", "Implied", "Implies", "Inp", 
                      "KIV", "LEM", "List_of_clauses", "List_of_declarations", 
                      "List_of_descriptions", "List_of_formulae", "List_of_general_settings", 
                      "List_of_proof", "List_of_settings", "List_of_symbols", 
                      "Logic", "MOne", "MPm", "Name", "Not", "Obv", "OHy", 
                      "OpenB", "OpenBc", "OpenP", "OPm", "Or", "OTTER", 
                      "Predicate", "Predicates", "PROTEIN", "Rew", "RRE", 
                      "Satisfiable", "SATURATE", "SETHEO", "SHy", "SoR", 
                      "Sort", "Sorts", "SPASS", "SpL", "Splitlevel", "SPm", 
                      "SpR", "Spt", "SSi", "Status", "Step", "Subsort", 
                      "Ter", "ThreeTAP", "True_", "UnC", "Unknown", "Unsatisfiable", 
                      "URR", "Version", "WS", "Open", "Identifier", "Letter", 
                      "Digit", "Close", "JustText" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

SpassLexer.EOF = antlr4.Token.EOF;
SpassLexer.Special_symbol = 1;
SpassLexer.And = 2;
SpassLexer.Author = 3;
SpassLexer.Axioms = 4;
SpassLexer.Begin_problem = 5;
SpassLexer.Clause = 6;
SpassLexer.CloseB = 7;
SpassLexer.CloseBc = 8;
SpassLexer.CloseP = 9;
SpassLexer.ClR = 10;
SpassLexer.Cnf = 11;
SpassLexer.Colon = 12;
SpassLexer.Comma = 13;
SpassLexer.Con = 14;
SpassLexer.Conjectures = 15;
SpassLexer.Date = 16;
SpassLexer.Description = 17;
SpassLexer.Dnf = 18;
SpassLexer.Dot = 19;
SpassLexer.EmS = 20;
SpassLexer.End_of_list = 21;
SpassLexer.End_problem = 22;
SpassLexer.EqF = 23;
SpassLexer.EqR = 24;
SpassLexer.Equal = 25;
SpassLexer.Equiv = 26;
SpassLexer.Exists = 27;
SpassLexer.Fac = 28;
SpassLexer.False_ = 29;
SpassLexer.Forall = 30;
SpassLexer.Formula = 31;
SpassLexer.Freely = 32;
SpassLexer.Functions = 33;
SpassLexer.Generated_by = 34;
SpassLexer.GeR = 35;
SpassLexer.Hypothesis = 36;
SpassLexer.Implied = 37;
SpassLexer.Implies = 38;
SpassLexer.Inp = 39;
SpassLexer.KIV = 40;
SpassLexer.LEM = 41;
SpassLexer.List_of_clauses = 42;
SpassLexer.List_of_declarations = 43;
SpassLexer.List_of_descriptions = 44;
SpassLexer.List_of_formulae = 45;
SpassLexer.List_of_general_settings = 46;
SpassLexer.List_of_proof = 47;
SpassLexer.List_of_settings = 48;
SpassLexer.List_of_symbols = 49;
SpassLexer.Logic = 50;
SpassLexer.MOne = 51;
SpassLexer.MPm = 52;
SpassLexer.Name = 53;
SpassLexer.Not = 54;
SpassLexer.Obv = 55;
SpassLexer.OHy = 56;
SpassLexer.OpenB = 57;
SpassLexer.OpenBc = 58;
SpassLexer.OpenP = 59;
SpassLexer.OPm = 60;
SpassLexer.Or = 61;
SpassLexer.OTTER = 62;
SpassLexer.Predicate = 63;
SpassLexer.Predicates = 64;
SpassLexer.PROTEIN = 65;
SpassLexer.Rew = 66;
SpassLexer.RRE = 67;
SpassLexer.Satisfiable = 68;
SpassLexer.SATURATE = 69;
SpassLexer.SETHEO = 70;
SpassLexer.SHy = 71;
SpassLexer.SoR = 72;
SpassLexer.Sort = 73;
SpassLexer.Sorts = 74;
SpassLexer.SPASS = 75;
SpassLexer.SpL = 76;
SpassLexer.Splitlevel = 77;
SpassLexer.SPm = 78;
SpassLexer.SpR = 79;
SpassLexer.Spt = 80;
SpassLexer.SSi = 81;
SpassLexer.Status = 82;
SpassLexer.Step = 83;
SpassLexer.Subsort = 84;
SpassLexer.Ter = 85;
SpassLexer.ThreeTAP = 86;
SpassLexer.True_ = 87;
SpassLexer.UnC = 88;
SpassLexer.Unknown = 89;
SpassLexer.Unsatisfiable = 90;
SpassLexer.URR = 91;
SpassLexer.Version = 92;
SpassLexer.WS = 93;
SpassLexer.Open = 94;
SpassLexer.Identifier = 95;
SpassLexer.Letter = 96;
SpassLexer.Digit = 97;
SpassLexer.Close = 98;
SpassLexer.JustText = 99;

SpassLexer.TextMode = 1;




