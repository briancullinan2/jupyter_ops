// Generated from Resources/Parsers/turtle/TURTLE.g4 by ANTLR 4.10.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,45,452,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,2,44,7,44,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,
1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,
12,1,13,1,13,1,13,3,13,140,8,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,
1,14,3,14,151,8,14,1,15,1,15,1,15,1,15,3,15,157,8,15,1,16,1,16,3,16,161,
8,16,1,17,4,17,164,8,17,11,17,12,17,165,1,17,1,17,1,18,1,18,1,18,5,18,173,
8,18,10,18,12,18,176,9,18,1,18,3,18,179,8,18,1,19,1,19,1,19,1,19,5,19,185,
8,19,10,19,12,19,188,9,19,1,19,1,19,1,20,3,20,193,8,20,1,20,1,20,1,21,1,
21,3,21,199,8,21,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,3,23,209,8,23,1,
23,1,23,5,23,213,8,23,10,23,12,23,216,9,23,1,23,3,23,219,8,23,1,24,1,24,
4,24,223,8,24,11,24,12,24,224,1,24,1,24,4,24,229,8,24,11,24,12,24,230,5,
24,233,8,24,10,24,12,24,236,9,24,1,25,3,25,239,8,25,1,25,4,25,242,8,25,11,
25,12,25,243,1,26,3,26,247,8,26,1,26,5,26,250,8,26,10,26,12,26,253,9,26,
1,26,1,26,4,26,257,8,26,11,26,12,26,258,1,27,3,27,262,8,27,1,27,4,27,265,
8,27,11,27,12,27,266,1,27,1,27,5,27,271,8,27,10,27,12,27,274,9,27,1,27,1,
27,1,27,4,27,279,8,27,11,27,12,27,280,1,27,1,27,4,27,285,8,27,11,27,12,27,
286,1,27,3,27,290,8,27,1,28,1,28,3,28,294,8,28,1,28,4,28,297,8,28,11,28,
12,28,298,1,29,1,29,1,29,1,29,1,29,1,29,1,29,3,29,308,8,29,1,29,1,29,1,29,
1,29,3,29,314,8,29,5,29,316,8,29,10,29,12,29,319,9,29,1,29,1,29,1,29,1,29,
1,30,1,30,1,30,1,30,1,30,1,30,1,30,3,30,332,8,30,1,30,1,30,1,30,1,30,3,30,
338,8,30,5,30,340,8,30,10,30,12,30,343,9,30,1,30,1,30,1,30,1,30,1,31,1,31,
1,31,1,31,1,31,5,31,354,8,31,10,31,12,31,357,9,31,1,31,1,31,1,32,1,32,1,
32,1,32,1,32,5,32,366,8,32,10,32,12,32,369,9,32,1,32,1,32,1,33,1,33,1,33,
1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,
33,1,33,1,33,3,33,393,8,33,1,34,1,34,1,34,1,35,1,35,1,36,1,36,5,36,402,8,
36,10,36,12,36,405,9,36,1,36,1,36,1,37,1,37,1,38,1,38,3,38,413,8,38,1,39,
1,39,3,39,417,8,39,1,40,1,40,1,40,3,40,422,8,40,1,40,1,40,1,40,5,40,427,
8,40,10,40,12,40,430,9,40,1,40,1,40,1,40,3,40,435,8,40,3,40,437,8,40,1,41,
1,41,3,41,441,8,41,1,42,1,42,1,42,1,42,1,43,3,43,448,8,43,1,44,1,44,1,44,
0,0,45,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,
14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,
26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,
38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,1,0,18,3,0,9,10,12,13,32,32,
6,0,35,35,37,38,46,47,58,58,64,64,92,92,1,0,48,57,2,0,65,90,97,122,3,0,48,
57,65,90,97,122,2,0,43,43,45,45,2,0,69,69,101,101,3,0,39,39,92,92,94,94,
2,0,34,34,92,92,4,0,10,10,13,13,34,34,92,92,4,0,10,10,13,13,39,39,92,92,
8,0,34,34,39,39,92,92,98,98,102,102,110,110,114,114,116,116,3,0,9,10,13,
13,32,32,13,0,65,90,97,122,192,214,216,246,248,767,880,893,895,8191,8204,
8205,8304,8591,11264,12271,12289,55295,63744,64975,65008,65533,5,0,45,45,
48,57,183,183,768,879,8255,8256,2,0,46,46,58,58,3,0,48,57,65,70,97,102,7,
0,33,33,35,47,59,59,61,61,63,64,95,95,126,126,520,0,1,1,0,0,0,0,3,1,0,0,
0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,
0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,
1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,
0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,
0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,
61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,
0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,
1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,1,91,1,0,0,0,3,93,1,0,0,0,
5,101,1,0,0,0,7,107,1,0,0,0,9,112,1,0,0,0,11,119,1,0,0,0,13,121,1,0,0,0,
15,123,1,0,0,0,17,125,1,0,0,0,19,127,1,0,0,0,21,129,1,0,0,0,23,131,1,0,0,
0,25,133,1,0,0,0,27,139,1,0,0,0,29,150,1,0,0,0,31,156,1,0,0,0,33,160,1,0,
0,0,35,163,1,0,0,0,37,169,1,0,0,0,39,180,1,0,0,0,41,192,1,0,0,0,43,198,1,
0,0,0,45,200,1,0,0,0,47,203,1,0,0,0,49,220,1,0,0,0,51,238,1,0,0,0,53,246,
1,0,0,0,55,261,1,0,0,0,57,291,1,0,0,0,59,300,1,0,0,0,61,324,1,0,0,0,63,348,
1,0,0,0,65,360,1,0,0,0,67,392,1,0,0,0,69,394,1,0,0,0,71,397,1,0,0,0,73,399,
1,0,0,0,75,408,1,0,0,0,77,412,1,0,0,0,79,416,1,0,0,0,81,421,1,0,0,0,83,440,
1,0,0,0,85,442,1,0,0,0,87,447,1,0,0,0,89,449,1,0,0,0,91,92,5,46,0,0,92,2,
1,0,0,0,93,94,5,64,0,0,94,95,5,112,0,0,95,96,5,114,0,0,96,97,5,101,0,0,97,
98,5,102,0,0,98,99,5,105,0,0,99,100,5,120,0,0,100,4,1,0,0,0,101,102,5,64,
0,0,102,103,5,98,0,0,103,104,5,97,0,0,104,105,5,115,0,0,105,106,5,101,0,
0,106,6,1,0,0,0,107,108,5,66,0,0,108,109,5,65,0,0,109,110,5,83,0,0,110,111,
5,69,0,0,111,8,1,0,0,0,112,113,5,80,0,0,113,114,5,82,0,0,114,115,5,69,0,
0,115,116,5,70,0,0,116,117,5,73,0,0,117,118,5,88,0,0,118,10,1,0,0,0,119,
120,5,59,0,0,120,12,1,0,0,0,121,122,5,44,0,0,122,14,1,0,0,0,123,124,5,97,
0,0,124,16,1,0,0,0,125,126,5,91,0,0,126,18,1,0,0,0,127,128,5,93,0,0,128,
20,1,0,0,0,129,130,5,40,0,0,130,22,1,0,0,0,131,132,5,41,0,0,132,24,1,0,0,
0,133,134,5,94,0,0,134,135,5,94,0,0,135,26,1,0,0,0,136,140,3,51,25,0,137,
140,3,53,26,0,138,140,3,55,27,0,139,136,1,0,0,0,139,137,1,0,0,0,139,138,
1,0,0,0,140,28,1,0,0,0,141,142,5,116,0,0,142,143,5,114,0,0,143,144,5,117,
0,0,144,151,5,101,0,0,145,146,5,102,0,0,146,147,5,97,0,0,147,148,5,108,0,
0,148,149,5,115,0,0,149,151,5,101,0,0,150,141,1,0,0,0,150,145,1,0,0,0,151,
30,1,0,0,0,152,157,3,63,31,0,153,157,3,65,32,0,154,157,3,59,29,0,155,157,
3,61,30,0,156,152,1,0,0,0,156,153,1,0,0,0,156,154,1,0,0,0,156,155,1,0,0,
0,157,32,1,0,0,0,158,161,3,47,23,0,159,161,3,73,36,0,160,158,1,0,0,0,160,
159,1,0,0,0,161,34,1,0,0,0,162,164,7,0,0,0,163,162,1,0,0,0,164,165,1,0,0,
0,165,163,1,0,0,0,165,166,1,0,0,0,166,167,1,0,0,0,167,168,6,17,0,0,168,36,
1,0,0,0,169,178,3,75,37,0,170,173,3,79,39,0,171,173,5,46,0,0,172,170,1,0,
0,0,172,171,1,0,0,0,173,176,1,0,0,0,174,172,1,0,0,0,174,175,1,0,0,0,175,
177,1,0,0,0,176,174,1,0,0,0,177,179,3,79,39,0,178,174,1,0,0,0,178,179,1,
0,0,0,179,38,1,0,0,0,180,186,5,60,0,0,181,185,3,79,39,0,182,185,7,1,0,0,
183,185,3,67,33,0,184,181,1,0,0,0,184,182,1,0,0,0,184,183,1,0,0,0,185,188,
1,0,0,0,186,184,1,0,0,0,186,187,1,0,0,0,187,189,1,0,0,0,188,186,1,0,0,0,
189,190,5,62,0,0,190,40,1,0,0,0,191,193,3,37,18,0,192,191,1,0,0,0,192,193,
1,0,0,0,193,194,1,0,0,0,194,195,5,58,0,0,195,42,1,0,0,0,196,199,3,45,22,
0,197,199,3,41,20,0,198,196,1,0,0,0,198,197,1,0,0,0,199,44,1,0,0,0,200,201,
3,41,20,0,201,202,3,81,40,0,202,46,1,0,0,0,203,204,5,95,0,0,204,205,5,58,
0,0,205,208,1,0,0,0,206,209,3,77,38,0,207,209,7,2,0,0,208,206,1,0,0,0,208,
207,1,0,0,0,209,218,1,0,0,0,210,213,3,79,39,0,211,213,5,46,0,0,212,210,1,
0,0,0,212,211,1,0,0,0,213,216,1,0,0,0,214,212,1,0,0,0,214,215,1,0,0,0,215,
217,1,0,0,0,216,214,1,0,0,0,217,219,3,79,39,0,218,214,1,0,0,0,218,219,1,
0,0,0,219,48,1,0,0,0,220,222,5,64,0,0,221,223,7,3,0,0,222,221,1,0,0,0,223,
224,1,0,0,0,224,222,1,0,0,0,224,225,1,0,0,0,225,234,1,0,0,0,226,228,5,45,
0,0,227,229,7,4,0,0,228,227,1,0,0,0,229,230,1,0,0,0,230,228,1,0,0,0,230,
231,1,0,0,0,231,233,1,0,0,0,232,226,1,0,0,0,233,236,1,0,0,0,234,232,1,0,
0,0,234,235,1,0,0,0,235,50,1,0,0,0,236,234,1,0,0,0,237,239,7,5,0,0,238,237,
1,0,0,0,238,239,1,0,0,0,239,241,1,0,0,0,240,242,7,2,0,0,241,240,1,0,0,0,
242,243,1,0,0,0,243,241,1,0,0,0,243,244,1,0,0,0,244,52,1,0,0,0,245,247,7,
5,0,0,246,245,1,0,0,0,246,247,1,0,0,0,247,251,1,0,0,0,248,250,7,2,0,0,249,
248,1,0,0,0,250,253,1,0,0,0,251,249,1,0,0,0,251,252,1,0,0,0,252,254,1,0,
0,0,253,251,1,0,0,0,254,256,5,46,0,0,255,257,7,2,0,0,256,255,1,0,0,0,257,
258,1,0,0,0,258,256,1,0,0,0,258,259,1,0,0,0,259,54,1,0,0,0,260,262,7,5,0,
0,261,260,1,0,0,0,261,262,1,0,0,0,262,289,1,0,0,0,263,265,7,2,0,0,264,263,
1,0,0,0,265,266,1,0,0,0,266,264,1,0,0,0,266,267,1,0,0,0,267,268,1,0,0,0,
268,272,5,46,0,0,269,271,7,2,0,0,270,269,1,0,0,0,271,274,1,0,0,0,272,270,
1,0,0,0,272,273,1,0,0,0,273,275,1,0,0,0,274,272,1,0,0,0,275,290,3,57,28,
0,276,278,5,46,0,0,277,279,7,2,0,0,278,277,1,0,0,0,279,280,1,0,0,0,280,278,
1,0,0,0,280,281,1,0,0,0,281,282,1,0,0,0,282,290,3,57,28,0,283,285,7,2,0,
0,284,283,1,0,0,0,285,286,1,0,0,0,286,284,1,0,0,0,286,287,1,0,0,0,287,288,
1,0,0,0,288,290,3,57,28,0,289,264,1,0,0,0,289,276,1,0,0,0,289,284,1,0,0,
0,290,56,1,0,0,0,291,293,7,6,0,0,292,294,7,5,0,0,293,292,1,0,0,0,293,294,
1,0,0,0,294,296,1,0,0,0,295,297,7,2,0,0,296,295,1,0,0,0,297,298,1,0,0,0,
298,296,1,0,0,0,298,299,1,0,0,0,299,58,1,0,0,0,300,301,5,39,0,0,301,302,
5,39,0,0,302,303,5,39,0,0,303,317,1,0,0,0,304,308,5,39,0,0,305,306,5,39,
0,0,306,308,5,39,0,0,307,304,1,0,0,0,307,305,1,0,0,0,307,308,1,0,0,0,308,
313,1,0,0,0,309,314,7,7,0,0,310,314,3,69,34,0,311,314,3,67,33,0,312,314,
5,34,0,0,313,309,1,0,0,0,313,310,1,0,0,0,313,311,1,0,0,0,313,312,1,0,0,0,
314,316,1,0,0,0,315,307,1,0,0,0,316,319,1,0,0,0,317,315,1,0,0,0,317,318,
1,0,0,0,318,320,1,0,0,0,319,317,1,0,0,0,320,321,5,39,0,0,321,322,5,39,0,
0,322,323,5,39,0,0,323,60,1,0,0,0,324,325,5,34,0,0,325,326,5,34,0,0,326,
327,5,34,0,0,327,341,1,0,0,0,328,332,5,34,0,0,329,330,5,34,0,0,330,332,5,
34,0,0,331,328,1,0,0,0,331,329,1,0,0,0,331,332,1,0,0,0,332,337,1,0,0,0,333,
338,8,8,0,0,334,338,3,69,34,0,335,338,3,67,33,0,336,338,5,39,0,0,337,333,
1,0,0,0,337,334,1,0,0,0,337,335,1,0,0,0,337,336,1,0,0,0,338,340,1,0,0,0,
339,331,1,0,0,0,340,343,1,0,0,0,341,339,1,0,0,0,341,342,1,0,0,0,342,344,
1,0,0,0,343,341,1,0,0,0,344,345,5,34,0,0,345,346,5,34,0,0,346,347,5,34,0,
0,347,62,1,0,0,0,348,355,5,34,0,0,349,354,8,9,0,0,350,354,5,39,0,0,351,352,
5,92,0,0,352,354,5,34,0,0,353,349,1,0,0,0,353,350,1,0,0,0,353,351,1,0,0,
0,354,357,1,0,0,0,355,353,1,0,0,0,355,356,1,0,0,0,356,358,1,0,0,0,357,355,
1,0,0,0,358,359,5,34,0,0,359,64,1,0,0,0,360,367,5,39,0,0,361,366,8,10,0,
0,362,366,3,69,34,0,363,366,3,67,33,0,364,366,5,34,0,0,365,361,1,0,0,0,365,
362,1,0,0,0,365,363,1,0,0,0,365,364,1,0,0,0,366,369,1,0,0,0,367,365,1,0,
0,0,367,368,1,0,0,0,368,370,1,0,0,0,369,367,1,0,0,0,370,371,5,39,0,0,371,
66,1,0,0,0,372,373,5,92,0,0,373,374,5,117,0,0,374,375,1,0,0,0,375,376,3,
87,43,0,376,377,3,87,43,0,377,378,3,87,43,0,378,379,3,87,43,0,379,393,1,
0,0,0,380,381,5,92,0,0,381,382,5,85,0,0,382,383,1,0,0,0,383,384,3,87,43,
0,384,385,3,87,43,0,385,386,3,87,43,0,386,387,3,87,43,0,387,388,3,87,43,
0,388,389,3,87,43,0,389,390,3,87,43,0,390,391,3,87,43,0,391,393,1,0,0,0,
392,372,1,0,0,0,392,380,1,0,0,0,393,68,1,0,0,0,394,395,5,92,0,0,395,396,
7,11,0,0,396,70,1,0,0,0,397,398,7,12,0,0,398,72,1,0,0,0,399,403,5,91,0,0,
400,402,3,71,35,0,401,400,1,0,0,0,402,405,1,0,0,0,403,401,1,0,0,0,403,404,
1,0,0,0,404,406,1,0,0,0,405,403,1,0,0,0,406,407,5,93,0,0,407,74,1,0,0,0,
408,409,7,13,0,0,409,76,1,0,0,0,410,413,3,75,37,0,411,413,5,95,0,0,412,410,
1,0,0,0,412,411,1,0,0,0,413,78,1,0,0,0,414,417,3,77,38,0,415,417,7,14,0,
0,416,414,1,0,0,0,416,415,1,0,0,0,417,80,1,0,0,0,418,422,3,77,38,0,419,422,
2,48,58,0,420,422,3,83,41,0,421,418,1,0,0,0,421,419,1,0,0,0,421,420,1,0,
0,0,422,436,1,0,0,0,423,427,3,79,39,0,424,427,7,15,0,0,425,427,3,83,41,0,
426,423,1,0,0,0,426,424,1,0,0,0,426,425,1,0,0,0,427,430,1,0,0,0,428,426,
1,0,0,0,428,429,1,0,0,0,429,434,1,0,0,0,430,428,1,0,0,0,431,435,3,79,39,
0,432,435,5,58,0,0,433,435,3,83,41,0,434,431,1,0,0,0,434,432,1,0,0,0,434,
433,1,0,0,0,435,437,1,0,0,0,436,428,1,0,0,0,436,437,1,0,0,0,437,82,1,0,0,
0,438,441,3,85,42,0,439,441,3,89,44,0,440,438,1,0,0,0,440,439,1,0,0,0,441,
84,1,0,0,0,442,443,5,37,0,0,443,444,3,87,43,0,444,445,3,87,43,0,445,86,1,
0,0,0,446,448,7,16,0,0,447,446,1,0,0,0,448,88,1,0,0,0,449,450,5,92,0,0,450,
451,7,17,0,0,451,90,1,0,0,0,55,0,139,150,156,160,163,165,172,174,178,184,
186,192,198,208,212,214,218,224,230,234,238,243,246,251,258,261,266,272,
280,286,289,293,298,307,313,317,331,337,341,353,355,365,367,392,403,412,
416,421,426,428,434,436,440,447,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class TURTLELexer extends antlr4.Lexer {

    static grammarFileName = "TURTLE.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'.'", "'@prefix'", "'@base'", "'BASE'", 
                         "'PREFIX'", "';'", "','", "'a'", "'['", "']'", 
                         "'('", "')'", "'^^'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, "NumericLiteral", 
                          "BooleanLiteral", "String", "BlankNode", "WS", 
                          "PN_PREFIX", "IRIREF", "PNAME_NS", "PrefixedName", 
                          "PNAME_LN", "BLANK_NODE_LABEL", "LANGTAG", "INTEGER", 
                          "DECIMAL", "DOUBLE", "EXPONENT", "STRING_LITERAL_LONG_SINGLE_QUOTE", 
                          "STRING_LITERAL_LONG_QUOTE", "STRING_LITERAL_QUOTE", 
                          "STRING_LITERAL_SINGLE_QUOTE", "UCHAR", "ECHAR", 
                          "ANON_WS", "ANON", "PN_CHARS_BASE", "PN_CHARS_U", 
                          "PN_CHARS", "PN_LOCAL", "PLX", "PERCENT", "HEX", 
                          "PN_LOCAL_ESC" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "NumericLiteral", "BooleanLiteral", "String", "BlankNode", 
                      "WS", "PN_PREFIX", "IRIREF", "PNAME_NS", "PrefixedName", 
                      "PNAME_LN", "BLANK_NODE_LABEL", "LANGTAG", "INTEGER", 
                      "DECIMAL", "DOUBLE", "EXPONENT", "STRING_LITERAL_LONG_SINGLE_QUOTE", 
                      "STRING_LITERAL_LONG_QUOTE", "STRING_LITERAL_QUOTE", 
                      "STRING_LITERAL_SINGLE_QUOTE", "UCHAR", "ECHAR", "ANON_WS", 
                      "ANON", "PN_CHARS_BASE", "PN_CHARS_U", "PN_CHARS", 
                      "PN_LOCAL", "PLX", "PERCENT", "HEX", "PN_LOCAL_ESC" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

TURTLELexer.EOF = antlr4.Token.EOF;
TURTLELexer.T__0 = 1;
TURTLELexer.T__1 = 2;
TURTLELexer.T__2 = 3;
TURTLELexer.T__3 = 4;
TURTLELexer.T__4 = 5;
TURTLELexer.T__5 = 6;
TURTLELexer.T__6 = 7;
TURTLELexer.T__7 = 8;
TURTLELexer.T__8 = 9;
TURTLELexer.T__9 = 10;
TURTLELexer.T__10 = 11;
TURTLELexer.T__11 = 12;
TURTLELexer.T__12 = 13;
TURTLELexer.NumericLiteral = 14;
TURTLELexer.BooleanLiteral = 15;
TURTLELexer.String = 16;
TURTLELexer.BlankNode = 17;
TURTLELexer.WS = 18;
TURTLELexer.PN_PREFIX = 19;
TURTLELexer.IRIREF = 20;
TURTLELexer.PNAME_NS = 21;
TURTLELexer.PrefixedName = 22;
TURTLELexer.PNAME_LN = 23;
TURTLELexer.BLANK_NODE_LABEL = 24;
TURTLELexer.LANGTAG = 25;
TURTLELexer.INTEGER = 26;
TURTLELexer.DECIMAL = 27;
TURTLELexer.DOUBLE = 28;
TURTLELexer.EXPONENT = 29;
TURTLELexer.STRING_LITERAL_LONG_SINGLE_QUOTE = 30;
TURTLELexer.STRING_LITERAL_LONG_QUOTE = 31;
TURTLELexer.STRING_LITERAL_QUOTE = 32;
TURTLELexer.STRING_LITERAL_SINGLE_QUOTE = 33;
TURTLELexer.UCHAR = 34;
TURTLELexer.ECHAR = 35;
TURTLELexer.ANON_WS = 36;
TURTLELexer.ANON = 37;
TURTLELexer.PN_CHARS_BASE = 38;
TURTLELexer.PN_CHARS_U = 39;
TURTLELexer.PN_CHARS = 40;
TURTLELexer.PN_LOCAL = 41;
TURTLELexer.PLX = 42;
TURTLELexer.PERCENT = 43;
TURTLELexer.HEX = 44;
TURTLELexer.PN_LOCAL_ESC = 45;



