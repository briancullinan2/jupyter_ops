// Generated from Resources/Parsers/capnproto/CapnProto.g4 by ANTLR 4.10.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,39,320,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,1,0,1,0,
1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,5,
1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,
1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,
12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,15,
1,15,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,
18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,
1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,
24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,27,
1,27,1,27,1,28,1,28,1,29,1,29,3,29,216,8,29,1,30,1,30,4,30,220,8,30,11,30,
12,30,221,1,30,3,30,225,8,30,1,31,1,31,5,31,229,8,31,10,31,12,31,232,9,31,
1,31,1,31,1,32,3,32,237,8,32,1,32,4,32,240,8,32,11,32,12,32,241,1,33,3,33,
245,8,33,1,33,4,33,248,8,33,11,33,12,33,249,1,33,1,33,4,33,254,8,33,11,33,
12,33,255,3,33,258,8,33,1,33,1,33,3,33,262,8,33,1,33,4,33,265,8,33,11,33,
12,33,266,3,33,269,8,33,1,34,3,34,272,8,34,1,34,1,34,1,34,1,34,4,34,278,
8,34,11,34,12,34,279,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,
36,1,36,3,36,294,8,36,1,37,1,37,1,37,1,37,1,37,1,38,1,38,5,38,303,8,38,10,
38,12,38,306,9,38,1,39,1,39,5,39,310,8,39,10,39,12,39,313,9,39,1,39,1,39,
1,40,1,40,1,40,1,40,1,230,0,41,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,
10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,
22,45,23,47,24,49,25,51,26,53,27,55,28,57,0,59,0,61,29,63,30,65,31,67,32,
69,33,71,34,73,35,75,36,77,37,79,38,81,39,1,0,7,1,0,48,57,2,0,65,70,97,102,
1,0,34,34,2,0,65,90,97,122,3,0,48,57,65,90,97,122,1,0,10,10,3,0,9,10,13,
13,32,32,335,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,
0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,
0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,
33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,
0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,
1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,
0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,
0,0,0,1,83,1,0,0,0,3,85,1,0,0,0,5,91,1,0,0,0,7,93,1,0,0,0,9,100,1,0,0,0,
11,102,1,0,0,0,13,104,1,0,0,0,15,115,1,0,0,0,17,117,1,0,0,0,19,119,1,0,0,
0,21,126,1,0,0,0,23,128,1,0,0,0,25,130,1,0,0,0,27,140,1,0,0,0,29,148,1,0,
0,0,31,150,1,0,0,0,33,152,1,0,0,0,35,157,1,0,0,0,37,162,1,0,0,0,39,169,1,
0,0,0,41,175,1,0,0,0,43,182,1,0,0,0,45,185,1,0,0,0,47,187,1,0,0,0,49,189,
1,0,0,0,51,200,1,0,0,0,53,206,1,0,0,0,55,208,1,0,0,0,57,211,1,0,0,0,59,215,
1,0,0,0,61,217,1,0,0,0,63,226,1,0,0,0,65,236,1,0,0,0,67,244,1,0,0,0,69,271,
1,0,0,0,71,281,1,0,0,0,73,293,1,0,0,0,75,295,1,0,0,0,77,300,1,0,0,0,79,307,
1,0,0,0,81,316,1,0,0,0,83,84,5,59,0,0,84,2,1,0,0,0,85,86,5,117,0,0,86,87,
5,115,0,0,87,88,5,105,0,0,88,89,5,110,0,0,89,90,5,103,0,0,90,4,1,0,0,0,91,
92,5,61,0,0,92,6,1,0,0,0,93,94,5,105,0,0,94,95,5,109,0,0,95,96,5,112,0,0,
96,97,5,111,0,0,97,98,5,114,0,0,98,99,5,116,0,0,99,8,1,0,0,0,100,101,5,46,
0,0,101,10,1,0,0,0,102,103,5,36,0,0,103,12,1,0,0,0,104,105,5,46,0,0,105,
106,5,110,0,0,106,107,5,97,0,0,107,108,5,109,0,0,108,109,5,101,0,0,109,110,
5,115,0,0,110,111,5,112,0,0,111,112,5,97,0,0,112,113,5,99,0,0,113,114,5,
101,0,0,114,14,1,0,0,0,115,116,5,40,0,0,116,16,1,0,0,0,117,118,5,41,0,0,
118,18,1,0,0,0,119,120,5,115,0,0,120,121,5,116,0,0,121,122,5,114,0,0,122,
123,5,117,0,0,123,124,5,99,0,0,124,125,5,116,0,0,125,20,1,0,0,0,126,127,
5,123,0,0,127,22,1,0,0,0,128,129,5,125,0,0,129,24,1,0,0,0,130,131,5,105,
0,0,131,132,5,110,0,0,132,133,5,116,0,0,133,134,5,101,0,0,134,135,5,114,
0,0,135,136,5,102,0,0,136,137,5,97,0,0,137,138,5,99,0,0,138,139,5,101,0,
0,139,26,1,0,0,0,140,141,5,101,0,0,141,142,5,120,0,0,142,143,5,116,0,0,143,
144,5,101,0,0,144,145,5,110,0,0,145,146,5,100,0,0,146,147,5,115,0,0,147,
28,1,0,0,0,148,149,5,58,0,0,149,30,1,0,0,0,150,151,5,44,0,0,151,32,1,0,0,
0,152,153,5,101,0,0,153,154,5,110,0,0,154,155,5,117,0,0,155,156,5,109,0,
0,156,34,1,0,0,0,157,158,5,46,0,0,158,159,5,97,0,0,159,160,5,110,0,0,160,
161,5,110,0,0,161,36,1,0,0,0,162,163,5,58,0,0,163,164,5,117,0,0,164,165,
5,110,0,0,165,166,5,105,0,0,166,167,5,111,0,0,167,168,5,110,0,0,168,38,1,
0,0,0,169,170,5,117,0,0,170,171,5,110,0,0,171,172,5,105,0,0,172,173,5,111,
0,0,173,174,5,110,0,0,174,40,1,0,0,0,175,176,5,58,0,0,176,177,5,103,0,0,
177,178,5,114,0,0,178,179,5,111,0,0,179,180,5,117,0,0,180,181,5,112,0,0,
181,42,1,0,0,0,182,183,5,45,0,0,183,184,5,62,0,0,184,44,1,0,0,0,185,186,
5,91,0,0,186,46,1,0,0,0,187,188,5,93,0,0,188,48,1,0,0,0,189,190,5,97,0,0,
190,191,5,110,0,0,191,192,5,110,0,0,192,193,5,111,0,0,193,194,5,116,0,0,
194,195,5,97,0,0,195,196,5,116,0,0,196,197,5,105,0,0,197,198,5,111,0,0,198,
199,5,110,0,0,199,50,1,0,0,0,200,201,5,99,0,0,201,202,5,111,0,0,202,203,
5,110,0,0,203,204,5,115,0,0,204,205,5,116,0,0,205,52,1,0,0,0,206,207,5,45,
0,0,207,54,1,0,0,0,208,209,5,48,0,0,209,210,5,120,0,0,210,56,1,0,0,0,211,
212,7,0,0,0,212,58,1,0,0,0,213,216,3,57,28,0,214,216,7,1,0,0,215,213,1,0,
0,0,215,214,1,0,0,0,216,60,1,0,0,0,217,219,5,64,0,0,218,220,3,57,28,0,219,
218,1,0,0,0,220,221,1,0,0,0,221,219,1,0,0,0,221,222,1,0,0,0,222,224,1,0,
0,0,223,225,5,33,0,0,224,223,1,0,0,0,224,225,1,0,0,0,225,62,1,0,0,0,226,
230,5,34,0,0,227,229,8,2,0,0,228,227,1,0,0,0,229,232,1,0,0,0,230,231,1,0,
0,0,230,228,1,0,0,0,231,233,1,0,0,0,232,230,1,0,0,0,233,234,5,34,0,0,234,
64,1,0,0,0,235,237,5,45,0,0,236,235,1,0,0,0,236,237,1,0,0,0,237,239,1,0,
0,0,238,240,3,57,28,0,239,238,1,0,0,0,240,241,1,0,0,0,241,239,1,0,0,0,241,
242,1,0,0,0,242,66,1,0,0,0,243,245,5,45,0,0,244,243,1,0,0,0,244,245,1,0,
0,0,245,247,1,0,0,0,246,248,3,57,28,0,247,246,1,0,0,0,248,249,1,0,0,0,249,
247,1,0,0,0,249,250,1,0,0,0,250,257,1,0,0,0,251,253,5,46,0,0,252,254,3,57,
28,0,253,252,1,0,0,0,254,255,1,0,0,0,255,253,1,0,0,0,255,256,1,0,0,0,256,
258,1,0,0,0,257,251,1,0,0,0,257,258,1,0,0,0,258,268,1,0,0,0,259,261,5,101,
0,0,260,262,5,45,0,0,261,260,1,0,0,0,261,262,1,0,0,0,262,264,1,0,0,0,263,
265,3,57,28,0,264,263,1,0,0,0,265,266,1,0,0,0,266,264,1,0,0,0,266,267,1,
0,0,0,267,269,1,0,0,0,268,259,1,0,0,0,268,269,1,0,0,0,269,68,1,0,0,0,270,
272,5,45,0,0,271,270,1,0,0,0,271,272,1,0,0,0,272,273,1,0,0,0,273,274,5,48,
0,0,274,275,5,120,0,0,275,277,1,0,0,0,276,278,3,59,29,0,277,276,1,0,0,0,
278,279,1,0,0,0,279,277,1,0,0,0,279,280,1,0,0,0,280,70,1,0,0,0,281,282,5,
64,0,0,282,283,3,69,34,0,283,72,1,0,0,0,284,285,5,116,0,0,285,286,5,114,
0,0,286,287,5,117,0,0,287,294,5,101,0,0,288,289,5,102,0,0,289,290,5,97,0,
0,290,291,5,108,0,0,291,292,5,115,0,0,292,294,5,101,0,0,293,284,1,0,0,0,
293,288,1,0,0,0,294,74,1,0,0,0,295,296,5,118,0,0,296,297,5,111,0,0,297,298,
5,105,0,0,298,299,5,100,0,0,299,76,1,0,0,0,300,304,7,3,0,0,301,303,7,4,0,
0,302,301,1,0,0,0,303,306,1,0,0,0,304,302,1,0,0,0,304,305,1,0,0,0,305,78,
1,0,0,0,306,304,1,0,0,0,307,311,5,35,0,0,308,310,8,5,0,0,309,308,1,0,0,0,
310,313,1,0,0,0,311,309,1,0,0,0,311,312,1,0,0,0,312,314,1,0,0,0,313,311,
1,0,0,0,314,315,6,39,0,0,315,80,1,0,0,0,316,317,7,6,0,0,317,318,1,0,0,0,
318,319,6,40,1,0,319,82,1,0,0,0,19,0,215,221,224,230,236,241,244,249,255,
257,261,266,268,271,279,293,304,311,2,0,1,0,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class CapnProtoLexer extends antlr4.Lexer {

    static grammarFileName = "CapnProto.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "';'", "'using'", "'='", "'import'", "'.'", 
                         "'$'", "'.namespace'", "'('", "')'", "'struct'", 
                         "'{'", "'}'", "'interface'", "'extends'", "':'", 
                         "','", "'enum'", "'.ann'", "':union'", "'union'", 
                         "':group'", "'->'", "'['", "']'", "'annotation'", 
                         "'const'", "'-'", "'0x'", null, null, null, null, 
                         null, null, null, "'void'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, "LOCATOR", "TEXT", 
                          "INTEGER", "FLOAT", "HEXADECIMAL", "FILE_ID", 
                          "BOOLEAN", "VOID", "NAME", "COMMENT", "WHITESPACE" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
                      "T__25", "T__26", "T__27", "DIGIT", "HEX_DIGIT", "LOCATOR", 
                      "TEXT", "INTEGER", "FLOAT", "HEXADECIMAL", "FILE_ID", 
                      "BOOLEAN", "VOID", "NAME", "COMMENT", "WHITESPACE" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

CapnProtoLexer.EOF = antlr4.Token.EOF;
CapnProtoLexer.T__0 = 1;
CapnProtoLexer.T__1 = 2;
CapnProtoLexer.T__2 = 3;
CapnProtoLexer.T__3 = 4;
CapnProtoLexer.T__4 = 5;
CapnProtoLexer.T__5 = 6;
CapnProtoLexer.T__6 = 7;
CapnProtoLexer.T__7 = 8;
CapnProtoLexer.T__8 = 9;
CapnProtoLexer.T__9 = 10;
CapnProtoLexer.T__10 = 11;
CapnProtoLexer.T__11 = 12;
CapnProtoLexer.T__12 = 13;
CapnProtoLexer.T__13 = 14;
CapnProtoLexer.T__14 = 15;
CapnProtoLexer.T__15 = 16;
CapnProtoLexer.T__16 = 17;
CapnProtoLexer.T__17 = 18;
CapnProtoLexer.T__18 = 19;
CapnProtoLexer.T__19 = 20;
CapnProtoLexer.T__20 = 21;
CapnProtoLexer.T__21 = 22;
CapnProtoLexer.T__22 = 23;
CapnProtoLexer.T__23 = 24;
CapnProtoLexer.T__24 = 25;
CapnProtoLexer.T__25 = 26;
CapnProtoLexer.T__26 = 27;
CapnProtoLexer.T__27 = 28;
CapnProtoLexer.LOCATOR = 29;
CapnProtoLexer.TEXT = 30;
CapnProtoLexer.INTEGER = 31;
CapnProtoLexer.FLOAT = 32;
CapnProtoLexer.HEXADECIMAL = 33;
CapnProtoLexer.FILE_ID = 34;
CapnProtoLexer.BOOLEAN = 35;
CapnProtoLexer.VOID = 36;
CapnProtoLexer.NAME = 37;
CapnProtoLexer.COMMENT = 38;
CapnProtoLexer.WHITESPACE = 39;



