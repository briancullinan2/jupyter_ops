// Generated from Resources/Parsers/wavefront/WavefrontOBJ.g4 by ANTLR 4.10.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,61,460,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,
2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,
56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,1,0,1,0,1,1,1,
1,1,2,1,2,1,2,1,3,1,3,1,3,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,
6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,
9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,
10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,13,1,13,1,13,
1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,18,1,18,1,
18,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,
1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,
24,1,24,1,24,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,28,
1,28,1,29,1,29,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,32,1,32,1,33,1,33,1,
33,1,33,1,33,1,33,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,
1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,
38,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,40,
1,40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,
42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,
1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,
45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,
1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,49,1,
49,1,50,1,50,1,50,1,50,1,51,1,51,1,51,3,51,392,8,51,1,51,1,51,1,51,1,52,
3,52,398,8,52,1,52,4,52,401,8,52,11,52,12,52,402,1,53,1,53,1,53,5,53,408,
8,53,10,53,12,53,411,9,53,3,53,413,8,53,1,54,1,54,1,55,1,55,5,55,419,8,55,
10,55,12,55,422,9,55,1,55,1,55,1,55,1,55,1,56,4,56,429,8,56,11,56,12,56,
430,1,57,4,57,434,8,57,11,57,12,57,435,1,58,1,58,1,58,4,58,441,8,58,11,58,
12,58,442,1,58,1,58,1,59,1,59,3,59,449,8,59,1,59,3,59,452,8,59,1,60,1,60,
1,61,4,61,457,8,61,11,61,12,61,458,0,0,62,1,1,3,2,5,3,7,4,9,5,11,6,13,7,
15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,
20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,
32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,
44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,0,
111,55,113,56,115,57,117,58,119,59,121,60,123,61,1,0,5,7,0,40,41,45,45,48,
57,65,90,95,95,97,122,126,126,4,0,9,10,13,13,32,32,47,47,2,0,9,9,32,32,2,
0,10,10,13,13,3,0,9,10,13,13,32,32,471,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,
0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,
0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,
29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,
0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,
1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,
0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,
0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,
85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,
0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,
0,107,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,
119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,1,125,1,0,0,0,3,127,1,0,0,0,5,129,
1,0,0,0,7,132,1,0,0,0,9,135,1,0,0,0,11,138,1,0,0,0,13,145,1,0,0,0,15,149,
1,0,0,0,17,157,1,0,0,0,19,164,1,0,0,0,21,172,1,0,0,0,23,181,1,0,0,0,25,188,
1,0,0,0,27,192,1,0,0,0,29,197,1,0,0,0,31,199,1,0,0,0,33,201,1,0,0,0,35,203,
1,0,0,0,37,205,1,0,0,0,39,210,1,0,0,0,41,216,1,0,0,0,43,221,1,0,0,0,45,226,
1,0,0,0,47,231,1,0,0,0,49,236,1,0,0,0,51,241,1,0,0,0,53,244,1,0,0,0,55,248,
1,0,0,0,57,252,1,0,0,0,59,254,1,0,0,0,61,256,1,0,0,0,63,260,1,0,0,0,65,263,
1,0,0,0,67,265,1,0,0,0,69,271,1,0,0,0,71,274,1,0,0,0,73,283,1,0,0,0,75,292,
1,0,0,0,77,296,1,0,0,0,79,303,1,0,0,0,81,310,1,0,0,0,83,317,1,0,0,0,85,324,
1,0,0,0,87,335,1,0,0,0,89,345,1,0,0,0,91,351,1,0,0,0,93,357,1,0,0,0,95,364,
1,0,0,0,97,370,1,0,0,0,99,377,1,0,0,0,101,384,1,0,0,0,103,388,1,0,0,0,105,
397,1,0,0,0,107,404,1,0,0,0,109,414,1,0,0,0,111,416,1,0,0,0,113,428,1,0,
0,0,115,433,1,0,0,0,117,440,1,0,0,0,119,451,1,0,0,0,121,453,1,0,0,0,123,
456,1,0,0,0,125,126,5,45,0,0,126,2,1,0,0,0,127,128,5,118,0,0,128,4,1,0,0,
0,129,130,5,118,0,0,130,131,5,112,0,0,131,6,1,0,0,0,132,133,5,118,0,0,133,
134,5,110,0,0,134,8,1,0,0,0,135,136,5,118,0,0,136,137,5,116,0,0,137,10,1,
0,0,0,138,139,5,99,0,0,139,140,5,115,0,0,140,141,5,116,0,0,141,142,5,121,
0,0,142,143,5,112,0,0,143,144,5,101,0,0,144,12,1,0,0,0,145,146,5,114,0,0,
146,147,5,97,0,0,147,148,5,116,0,0,148,14,1,0,0,0,149,150,5,98,0,0,150,151,
5,109,0,0,151,152,5,97,0,0,152,153,5,116,0,0,153,154,5,114,0,0,154,155,5,
105,0,0,155,156,5,120,0,0,156,16,1,0,0,0,157,158,5,98,0,0,158,159,5,101,
0,0,159,160,5,122,0,0,160,161,5,105,0,0,161,162,5,101,0,0,162,163,5,114,
0,0,163,18,1,0,0,0,164,165,5,98,0,0,165,166,5,115,0,0,166,167,5,112,0,0,
167,168,5,108,0,0,168,169,5,105,0,0,169,170,5,110,0,0,170,171,5,101,0,0,
171,20,1,0,0,0,172,173,5,99,0,0,173,174,5,97,0,0,174,175,5,114,0,0,175,176,
5,100,0,0,176,177,5,105,0,0,177,178,5,110,0,0,178,179,5,97,0,0,179,180,5,
108,0,0,180,22,1,0,0,0,181,182,5,116,0,0,182,183,5,97,0,0,183,184,5,121,
0,0,184,185,5,108,0,0,185,186,5,111,0,0,186,187,5,114,0,0,187,24,1,0,0,0,
188,189,5,100,0,0,189,190,5,101,0,0,190,191,5,103,0,0,191,26,1,0,0,0,192,
193,5,98,0,0,193,194,5,109,0,0,194,195,5,97,0,0,195,196,5,116,0,0,196,28,
1,0,0,0,197,198,5,117,0,0,198,30,1,0,0,0,199,200,5,112,0,0,200,32,1,0,0,
0,201,202,5,108,0,0,202,34,1,0,0,0,203,204,5,102,0,0,204,36,1,0,0,0,205,
206,5,99,0,0,206,207,5,117,0,0,207,208,5,114,0,0,208,209,5,118,0,0,209,38,
1,0,0,0,210,211,5,99,0,0,211,212,5,117,0,0,212,213,5,114,0,0,213,214,5,118,
0,0,214,215,5,50,0,0,215,40,1,0,0,0,216,217,5,115,0,0,217,218,5,117,0,0,
218,219,5,114,0,0,219,220,5,102,0,0,220,42,1,0,0,0,221,222,5,112,0,0,222,
223,5,97,0,0,223,224,5,114,0,0,224,225,5,109,0,0,225,44,1,0,0,0,226,227,
5,116,0,0,227,228,5,114,0,0,228,229,5,105,0,0,229,230,5,109,0,0,230,46,1,
0,0,0,231,232,5,104,0,0,232,233,5,111,0,0,233,234,5,108,0,0,234,235,5,101,
0,0,235,48,1,0,0,0,236,237,5,115,0,0,237,238,5,99,0,0,238,239,5,114,0,0,
239,240,5,118,0,0,240,50,1,0,0,0,241,242,5,115,0,0,242,243,5,112,0,0,243,
52,1,0,0,0,244,245,5,101,0,0,245,246,5,110,0,0,246,247,5,100,0,0,247,54,
1,0,0,0,248,249,5,99,0,0,249,250,5,111,0,0,250,251,5,110,0,0,251,56,1,0,
0,0,252,253,5,103,0,0,253,58,1,0,0,0,254,255,5,115,0,0,255,60,1,0,0,0,256,
257,5,111,0,0,257,258,5,102,0,0,258,259,5,102,0,0,259,62,1,0,0,0,260,261,
5,109,0,0,261,262,5,103,0,0,262,64,1,0,0,0,263,264,5,111,0,0,264,66,1,0,
0,0,265,266,5,98,0,0,266,267,5,101,0,0,267,268,5,118,0,0,268,269,5,101,0,
0,269,270,5,108,0,0,270,68,1,0,0,0,271,272,5,111,0,0,272,273,5,110,0,0,273,
70,1,0,0,0,274,275,5,99,0,0,275,276,5,95,0,0,276,277,5,105,0,0,277,278,5,
110,0,0,278,279,5,116,0,0,279,280,5,101,0,0,280,281,5,114,0,0,281,282,5,
112,0,0,282,72,1,0,0,0,283,284,5,100,0,0,284,285,5,95,0,0,285,286,5,105,
0,0,286,287,5,110,0,0,287,288,5,116,0,0,288,289,5,101,0,0,289,290,5,114,
0,0,290,291,5,112,0,0,291,74,1,0,0,0,292,293,5,108,0,0,293,294,5,111,0,0,
294,295,5,100,0,0,295,76,1,0,0,0,296,297,5,109,0,0,297,298,5,97,0,0,298,
299,5,112,0,0,299,300,5,108,0,0,300,301,5,105,0,0,301,302,5,98,0,0,302,78,
1,0,0,0,303,304,5,117,0,0,304,305,5,115,0,0,305,306,5,101,0,0,306,307,5,
109,0,0,307,308,5,97,0,0,308,309,5,112,0,0,309,80,1,0,0,0,310,311,5,109,
0,0,311,312,5,116,0,0,312,313,5,108,0,0,313,314,5,108,0,0,314,315,5,105,
0,0,315,316,5,98,0,0,316,82,1,0,0,0,317,318,5,117,0,0,318,319,5,115,0,0,
319,320,5,101,0,0,320,321,5,109,0,0,321,322,5,116,0,0,322,323,5,108,0,0,
323,84,1,0,0,0,324,325,5,115,0,0,325,326,5,104,0,0,326,327,5,97,0,0,327,
328,5,100,0,0,328,329,5,111,0,0,329,330,5,119,0,0,330,331,5,95,0,0,331,332,
5,111,0,0,332,333,5,98,0,0,333,334,5,106,0,0,334,86,1,0,0,0,335,336,5,116,
0,0,336,337,5,114,0,0,337,338,5,97,0,0,338,339,5,99,0,0,339,340,5,101,0,
0,340,341,5,95,0,0,341,342,5,111,0,0,342,343,5,98,0,0,343,344,5,106,0,0,
344,88,1,0,0,0,345,346,5,99,0,0,346,347,5,116,0,0,347,348,5,101,0,0,348,
349,5,99,0,0,349,350,5,104,0,0,350,90,1,0,0,0,351,352,5,99,0,0,352,353,5,
112,0,0,353,354,5,97,0,0,354,355,5,114,0,0,355,356,5,109,0,0,356,92,1,0,
0,0,357,358,5,99,0,0,358,359,5,115,0,0,359,360,5,112,0,0,360,361,5,97,0,
0,361,362,5,99,0,0,362,363,5,101,0,0,363,94,1,0,0,0,364,365,5,115,0,0,365,
366,5,116,0,0,366,367,5,101,0,0,367,368,5,99,0,0,368,369,5,104,0,0,369,96,
1,0,0,0,370,371,5,99,0,0,371,372,5,112,0,0,372,373,5,97,0,0,373,374,5,114,
0,0,374,375,5,109,0,0,375,376,5,97,0,0,376,98,1,0,0,0,377,378,5,99,0,0,378,
379,5,112,0,0,379,380,5,97,0,0,380,381,5,114,0,0,381,382,5,109,0,0,382,383,
5,98,0,0,383,100,1,0,0,0,384,385,3,105,52,0,385,386,5,47,0,0,386,387,3,105,
52,0,387,102,1,0,0,0,388,389,3,105,52,0,389,391,5,47,0,0,390,392,3,105,52,
0,391,390,1,0,0,0,391,392,1,0,0,0,392,393,1,0,0,0,393,394,5,47,0,0,394,395,
3,105,52,0,395,104,1,0,0,0,396,398,5,45,0,0,397,396,1,0,0,0,397,398,1,0,
0,0,398,400,1,0,0,0,399,401,3,109,54,0,400,399,1,0,0,0,401,402,1,0,0,0,402,
400,1,0,0,0,402,403,1,0,0,0,403,106,1,0,0,0,404,412,3,105,52,0,405,409,5,
46,0,0,406,408,3,109,54,0,407,406,1,0,0,0,408,411,1,0,0,0,409,407,1,0,0,
0,409,410,1,0,0,0,410,413,1,0,0,0,411,409,1,0,0,0,412,405,1,0,0,0,412,413,
1,0,0,0,413,108,1,0,0,0,414,415,2,48,57,0,415,110,1,0,0,0,416,420,5,35,0,
0,417,419,3,121,60,0,418,417,1,0,0,0,419,422,1,0,0,0,420,418,1,0,0,0,420,
421,1,0,0,0,421,423,1,0,0,0,422,420,1,0,0,0,423,424,3,119,59,0,424,425,1,
0,0,0,425,426,6,55,0,0,426,112,1,0,0,0,427,429,7,0,0,0,428,427,1,0,0,0,429,
430,1,0,0,0,430,428,1,0,0,0,430,431,1,0,0,0,431,114,1,0,0,0,432,434,8,1,
0,0,433,432,1,0,0,0,434,435,1,0,0,0,435,433,1,0,0,0,435,436,1,0,0,0,436,
116,1,0,0,0,437,441,7,2,0,0,438,439,5,92,0,0,439,441,3,119,59,0,440,437,
1,0,0,0,440,438,1,0,0,0,441,442,1,0,0,0,442,440,1,0,0,0,442,443,1,0,0,0,
443,444,1,0,0,0,444,445,6,58,0,0,445,118,1,0,0,0,446,448,5,13,0,0,447,449,
5,10,0,0,448,447,1,0,0,0,448,449,1,0,0,0,449,452,1,0,0,0,450,452,5,10,0,
0,451,446,1,0,0,0,451,450,1,0,0,0,452,120,1,0,0,0,453,454,8,3,0,0,454,122,
1,0,0,0,455,457,8,4,0,0,456,455,1,0,0,0,457,458,1,0,0,0,458,456,1,0,0,0,
458,459,1,0,0,0,459,124,1,0,0,0,14,0,391,397,402,409,412,420,430,435,440,
442,448,451,458,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class WavefrontOBJLexer extends antlr4.Lexer {

    static grammarFileName = "WavefrontOBJ.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'-'", "'v'", "'vp'", "'vn'", "'vt'", "'cstype'", 
                         "'rat'", "'bmatrix'", "'bezier'", "'bspline'", 
                         "'cardinal'", "'taylor'", "'deg'", "'bmat'", "'u'", 
                         "'p'", "'l'", "'f'", "'curv'", "'curv2'", "'surf'", 
                         "'parm'", "'trim'", "'hole'", "'scrv'", "'sp'", 
                         "'end'", "'con'", "'g'", "'s'", "'off'", "'mg'", 
                         "'o'", "'bevel'", "'on'", "'c_interp'", "'d_interp'", 
                         "'lod'", "'maplib'", "'usemap'", "'mtllib'", "'usemtl'", 
                         "'shadow_obj'", "'trace_obj'", "'ctech'", "'cparm'", 
                         "'cspace'", "'stech'", "'cparma'", "'cparmb'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, "INTEGER_PAIR", "INTEGER_TRIPLET", 
                          "INTEGER", "DECIMAL", "COMMENT", "NAME", "FILENAME", 
                          "WS", "NL", "NON_NL", "NON_WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
                      "T__25", "T__26", "T__27", "T__28", "T__29", "T__30", 
                      "T__31", "T__32", "T__33", "T__34", "T__35", "T__36", 
                      "T__37", "T__38", "T__39", "T__40", "T__41", "T__42", 
                      "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
                      "T__49", "INTEGER_PAIR", "INTEGER_TRIPLET", "INTEGER", 
                      "DECIMAL", "DIGIT", "COMMENT", "NAME", "FILENAME", 
                      "WS", "NL", "NON_NL", "NON_WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

WavefrontOBJLexer.EOF = antlr4.Token.EOF;
WavefrontOBJLexer.T__0 = 1;
WavefrontOBJLexer.T__1 = 2;
WavefrontOBJLexer.T__2 = 3;
WavefrontOBJLexer.T__3 = 4;
WavefrontOBJLexer.T__4 = 5;
WavefrontOBJLexer.T__5 = 6;
WavefrontOBJLexer.T__6 = 7;
WavefrontOBJLexer.T__7 = 8;
WavefrontOBJLexer.T__8 = 9;
WavefrontOBJLexer.T__9 = 10;
WavefrontOBJLexer.T__10 = 11;
WavefrontOBJLexer.T__11 = 12;
WavefrontOBJLexer.T__12 = 13;
WavefrontOBJLexer.T__13 = 14;
WavefrontOBJLexer.T__14 = 15;
WavefrontOBJLexer.T__15 = 16;
WavefrontOBJLexer.T__16 = 17;
WavefrontOBJLexer.T__17 = 18;
WavefrontOBJLexer.T__18 = 19;
WavefrontOBJLexer.T__19 = 20;
WavefrontOBJLexer.T__20 = 21;
WavefrontOBJLexer.T__21 = 22;
WavefrontOBJLexer.T__22 = 23;
WavefrontOBJLexer.T__23 = 24;
WavefrontOBJLexer.T__24 = 25;
WavefrontOBJLexer.T__25 = 26;
WavefrontOBJLexer.T__26 = 27;
WavefrontOBJLexer.T__27 = 28;
WavefrontOBJLexer.T__28 = 29;
WavefrontOBJLexer.T__29 = 30;
WavefrontOBJLexer.T__30 = 31;
WavefrontOBJLexer.T__31 = 32;
WavefrontOBJLexer.T__32 = 33;
WavefrontOBJLexer.T__33 = 34;
WavefrontOBJLexer.T__34 = 35;
WavefrontOBJLexer.T__35 = 36;
WavefrontOBJLexer.T__36 = 37;
WavefrontOBJLexer.T__37 = 38;
WavefrontOBJLexer.T__38 = 39;
WavefrontOBJLexer.T__39 = 40;
WavefrontOBJLexer.T__40 = 41;
WavefrontOBJLexer.T__41 = 42;
WavefrontOBJLexer.T__42 = 43;
WavefrontOBJLexer.T__43 = 44;
WavefrontOBJLexer.T__44 = 45;
WavefrontOBJLexer.T__45 = 46;
WavefrontOBJLexer.T__46 = 47;
WavefrontOBJLexer.T__47 = 48;
WavefrontOBJLexer.T__48 = 49;
WavefrontOBJLexer.T__49 = 50;
WavefrontOBJLexer.INTEGER_PAIR = 51;
WavefrontOBJLexer.INTEGER_TRIPLET = 52;
WavefrontOBJLexer.INTEGER = 53;
WavefrontOBJLexer.DECIMAL = 54;
WavefrontOBJLexer.COMMENT = 55;
WavefrontOBJLexer.NAME = 56;
WavefrontOBJLexer.FILENAME = 57;
WavefrontOBJLexer.WS = 58;
WavefrontOBJLexer.NL = 59;
WavefrontOBJLexer.NON_NL = 60;
WavefrontOBJLexer.NON_WS = 61;



