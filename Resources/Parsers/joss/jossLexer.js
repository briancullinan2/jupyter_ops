// Generated from ./joss/joss.g4 by ANTLR 4.10.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,75,459,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,
2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,
56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,
70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,1,0,1,0,1,1,1,1,1,1,1,2,1,2,1,
2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,5,1,5,1,
5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,
8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,
11,1,11,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,15,
1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,
17,1,18,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,24,1,24,1,24,1,25,1,25,1,25,1,26,1,
26,1,26,1,26,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,
1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,1,
35,1,35,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,38,1,38,1,39,1,39,1,39,1,40,
1,40,1,40,1,41,1,41,1,41,1,42,1,42,1,43,1,43,1,44,1,44,1,44,1,44,1,45,1,
45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,
1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,
51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,53,1,54,1,54,1,54,
1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,56,1,56,1,56,1,56,1,56,1,57,1,57,1,
57,1,57,1,57,1,58,1,58,1,58,1,58,1,58,1,59,1,59,1,60,1,60,1,61,4,61,398,
8,61,11,61,12,61,399,1,62,1,62,1,62,3,62,405,8,62,1,63,1,63,1,64,1,64,1,
65,3,65,412,8,65,1,65,1,65,1,66,1,66,1,66,1,66,1,66,3,66,421,8,66,1,67,1,
67,1,67,1,67,1,67,3,67,428,8,67,1,68,4,68,431,8,68,11,68,12,68,432,1,69,
1,69,3,69,437,8,69,1,70,1,70,1,71,1,71,1,72,1,72,1,72,1,72,3,72,447,8,72,
1,73,1,73,1,73,1,73,1,74,4,74,454,8,74,11,74,12,74,455,1,74,1,74,0,0,75,
1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,
15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,
27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,
39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,
51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,121,61,
123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,69,139,70,141,71,143,
72,145,73,147,74,149,75,1,0,6,2,0,42,42,47,47,2,0,43,43,45,45,2,0,65,90,
97,122,7,0,32,32,35,36,39,39,44,44,46,46,58,59,63,63,1,0,49,57,3,0,9,10,
13,13,32,32,469,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,
0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,
0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,
0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,
55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,
0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,
1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,
0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,
0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,
0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,
0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,
0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,
141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,1,151,
1,0,0,0,3,153,1,0,0,0,5,156,1,0,0,0,7,163,1,0,0,0,9,170,1,0,0,0,11,174,1,
0,0,0,13,180,1,0,0,0,15,186,1,0,0,0,17,192,1,0,0,0,19,197,1,0,0,0,21,202,
1,0,0,0,23,209,1,0,0,0,25,212,1,0,0,0,27,216,1,0,0,0,29,219,1,0,0,0,31,224,
1,0,0,0,33,229,1,0,0,0,35,234,1,0,0,0,37,240,1,0,0,0,39,243,1,0,0,0,41,245,
1,0,0,0,43,247,1,0,0,0,45,254,1,0,0,0,47,259,1,0,0,0,49,261,1,0,0,0,51,264,
1,0,0,0,53,267,1,0,0,0,55,271,1,0,0,0,57,273,1,0,0,0,59,278,1,0,0,0,61,283,
1,0,0,0,63,288,1,0,0,0,65,291,1,0,0,0,67,293,1,0,0,0,69,295,1,0,0,0,71,297,
1,0,0,0,73,299,1,0,0,0,75,303,1,0,0,0,77,306,1,0,0,0,79,308,1,0,0,0,81,311,
1,0,0,0,83,314,1,0,0,0,85,317,1,0,0,0,87,319,1,0,0,0,89,321,1,0,0,0,91,325,
1,0,0,0,93,331,1,0,0,0,95,336,1,0,0,0,97,341,1,0,0,0,99,346,1,0,0,0,101,
351,1,0,0,0,103,355,1,0,0,0,105,359,1,0,0,0,107,363,1,0,0,0,109,367,1,0,
0,0,111,372,1,0,0,0,113,377,1,0,0,0,115,382,1,0,0,0,117,387,1,0,0,0,119,
392,1,0,0,0,121,394,1,0,0,0,123,397,1,0,0,0,125,404,1,0,0,0,127,406,1,0,
0,0,129,408,1,0,0,0,131,411,1,0,0,0,133,420,1,0,0,0,135,427,1,0,0,0,137,
430,1,0,0,0,139,436,1,0,0,0,141,438,1,0,0,0,143,440,1,0,0,0,145,446,1,0,
0,0,147,448,1,0,0,0,149,453,1,0,0,0,151,152,5,46,0,0,152,2,1,0,0,0,153,154,
5,71,0,0,154,155,5,111,0,0,155,4,1,0,0,0,156,157,5,67,0,0,157,158,5,97,0,
0,158,159,5,110,0,0,159,160,5,99,0,0,160,161,5,101,0,0,161,162,5,108,0,0,
162,6,1,0,0,0,163,164,5,68,0,0,164,165,5,101,0,0,165,166,5,108,0,0,166,167,
5,101,0,0,167,168,5,116,0,0,168,169,5,101,0,0,169,8,1,0,0,0,170,171,5,97,
0,0,171,172,5,108,0,0,172,173,5,108,0,0,173,10,1,0,0,0,174,175,5,115,0,0,
175,176,5,116,0,0,176,177,5,101,0,0,177,178,5,112,0,0,178,179,5,115,0,0,
179,12,1,0,0,0,180,181,5,112,0,0,181,182,5,97,0,0,182,183,5,114,0,0,183,
184,5,116,0,0,184,185,5,115,0,0,185,14,1,0,0,0,186,187,5,102,0,0,187,188,
5,111,0,0,188,189,5,114,0,0,189,190,5,109,0,0,190,191,5,115,0,0,191,16,1,
0,0,0,192,193,5,68,0,0,193,194,5,111,0,0,194,195,5,110,0,0,195,196,5,101,
0,0,196,18,1,0,0,0,197,198,5,83,0,0,198,199,5,116,0,0,199,200,5,111,0,0,
200,201,5,112,0,0,201,20,1,0,0,0,202,203,5,68,0,0,203,204,5,101,0,0,204,
205,5,109,0,0,205,206,5,97,0,0,206,207,5,110,0,0,207,208,5,100,0,0,208,22,
1,0,0,0,209,210,5,84,0,0,210,211,5,111,0,0,211,24,1,0,0,0,212,213,5,83,0,
0,213,214,5,101,0,0,214,215,5,116,0,0,215,26,1,0,0,0,216,217,5,68,0,0,217,
218,5,111,0,0,218,28,1,0,0,0,219,220,5,84,0,0,220,221,5,121,0,0,221,222,
5,112,0,0,222,223,5,101,0,0,223,30,1,0,0,0,224,225,5,115,0,0,225,226,5,105,
0,0,226,227,5,122,0,0,227,228,5,101,0,0,228,32,1,0,0,0,229,230,5,116,0,0,
230,231,5,105,0,0,231,232,5,109,0,0,232,233,5,101,0,0,233,34,1,0,0,0,234,
235,5,117,0,0,235,236,5,115,0,0,236,237,5,101,0,0,237,238,5,114,0,0,238,
239,5,115,0,0,239,36,1,0,0,0,240,241,5,105,0,0,241,242,5,110,0,0,242,38,
1,0,0,0,243,244,5,44,0,0,244,40,1,0,0,0,245,246,5,39,0,0,246,42,1,0,0,0,
247,248,5,118,0,0,248,249,5,97,0,0,249,250,5,108,0,0,250,251,5,117,0,0,251,
252,5,101,0,0,252,253,5,115,0,0,253,44,1,0,0,0,254,255,5,70,0,0,255,256,
5,111,0,0,256,257,5,114,0,0,257,258,5,109,0,0,258,46,1,0,0,0,259,260,5,58,
0,0,260,48,1,0,0,0,261,262,5,46,0,0,262,263,5,46,0,0,263,50,1,0,0,0,264,
265,5,95,0,0,265,266,5,95,0,0,266,52,1,0,0,0,267,268,5,46,0,0,268,269,5,
95,0,0,269,270,5,95,0,0,270,54,1,0,0,0,271,272,5,95,0,0,272,56,1,0,0,0,273,
274,5,115,0,0,274,275,5,116,0,0,275,276,5,101,0,0,276,277,5,112,0,0,277,
58,1,0,0,0,278,279,5,112,0,0,279,280,5,97,0,0,280,281,5,114,0,0,281,282,
5,116,0,0,282,60,1,0,0,0,283,284,5,102,0,0,284,285,5,111,0,0,285,286,5,114,
0,0,286,287,5,109,0,0,287,62,1,0,0,0,288,289,5,105,0,0,289,290,5,102,0,0,
290,64,1,0,0,0,291,292,5,40,0,0,292,66,1,0,0,0,293,294,5,41,0,0,294,68,1,
0,0,0,295,296,5,91,0,0,296,70,1,0,0,0,297,298,5,93,0,0,298,72,1,0,0,0,299,
300,5,97,0,0,300,301,5,110,0,0,301,302,5,100,0,0,302,74,1,0,0,0,303,304,
5,111,0,0,304,305,5,114,0,0,305,76,1,0,0,0,306,307,5,61,0,0,307,78,1,0,0,
0,308,309,5,33,0,0,309,310,5,61,0,0,310,80,1,0,0,0,311,312,5,60,0,0,312,
313,5,61,0,0,313,82,1,0,0,0,314,315,5,61,0,0,315,316,5,62,0,0,316,84,1,0,
0,0,317,318,5,60,0,0,318,86,1,0,0,0,319,320,5,62,0,0,320,88,1,0,0,0,321,
322,5,102,0,0,322,323,5,111,0,0,323,324,5,114,0,0,324,90,1,0,0,0,325,326,
5,115,0,0,326,327,5,113,0,0,327,328,5,114,0,0,328,329,5,116,0,0,329,330,
5,40,0,0,330,92,1,0,0,0,331,332,5,108,0,0,332,333,5,111,0,0,333,334,5,103,
0,0,334,335,5,40,0,0,335,94,1,0,0,0,336,337,5,101,0,0,337,338,5,120,0,0,
338,339,5,112,0,0,339,340,5,40,0,0,340,96,1,0,0,0,341,342,5,115,0,0,342,
343,5,105,0,0,343,344,5,110,0,0,344,345,5,40,0,0,345,98,1,0,0,0,346,347,
5,99,0,0,347,348,5,111,0,0,348,349,5,115,0,0,349,350,5,40,0,0,350,100,1,
0,0,0,351,352,5,105,0,0,352,353,5,112,0,0,353,354,5,40,0,0,354,102,1,0,0,
0,355,356,5,102,0,0,356,357,5,112,0,0,357,358,5,40,0,0,358,104,1,0,0,0,359,
360,5,100,0,0,360,361,5,112,0,0,361,362,5,40,0,0,362,106,1,0,0,0,363,364,
5,120,0,0,364,365,5,112,0,0,365,366,5,40,0,0,366,108,1,0,0,0,367,368,5,115,
0,0,368,369,5,103,0,0,369,370,5,110,0,0,370,371,5,40,0,0,371,110,1,0,0,0,
372,373,5,109,0,0,373,374,5,97,0,0,374,375,5,120,0,0,375,376,5,40,0,0,376,
112,1,0,0,0,377,378,5,109,0,0,378,379,5,105,0,0,379,380,5,110,0,0,380,381,
5,40,0,0,381,114,1,0,0,0,382,383,5,76,0,0,383,384,5,105,0,0,384,385,5,110,
0,0,385,386,5,101,0,0,386,116,1,0,0,0,387,388,5,80,0,0,388,389,5,97,0,0,
389,390,5,103,0,0,390,391,5,101,0,0,391,118,1,0,0,0,392,393,7,0,0,0,393,
120,1,0,0,0,394,395,7,1,0,0,395,122,1,0,0,0,396,398,3,125,62,0,397,396,1,
0,0,0,398,399,1,0,0,0,399,397,1,0,0,0,399,400,1,0,0,0,400,124,1,0,0,0,401,
405,3,127,63,0,402,405,3,139,69,0,403,405,3,129,64,0,404,401,1,0,0,0,404,
402,1,0,0,0,404,403,1,0,0,0,405,126,1,0,0,0,406,407,7,2,0,0,407,128,1,0,
0,0,408,409,7,3,0,0,409,130,1,0,0,0,410,412,3,143,71,0,411,410,1,0,0,0,411,
412,1,0,0,0,412,413,1,0,0,0,413,414,3,133,66,0,414,132,1,0,0,0,415,421,3,
135,67,0,416,417,3,135,67,0,417,418,5,46,0,0,418,419,3,137,68,0,419,421,
1,0,0,0,420,415,1,0,0,0,420,416,1,0,0,0,421,134,1,0,0,0,422,428,5,48,0,0,
423,428,3,141,70,0,424,425,3,141,70,0,425,426,3,137,68,0,426,428,1,0,0,0,
427,422,1,0,0,0,427,423,1,0,0,0,427,424,1,0,0,0,428,136,1,0,0,0,429,431,
3,139,69,0,430,429,1,0,0,0,431,432,1,0,0,0,432,430,1,0,0,0,432,433,1,0,0,
0,433,138,1,0,0,0,434,437,5,48,0,0,435,437,3,141,70,0,436,434,1,0,0,0,436,
435,1,0,0,0,437,140,1,0,0,0,438,439,7,4,0,0,439,142,1,0,0,0,440,441,7,1,
0,0,441,144,1,0,0,0,442,447,3,141,70,0,443,444,3,141,70,0,444,445,3,135,
67,0,445,447,1,0,0,0,446,442,1,0,0,0,446,443,1,0,0,0,447,146,1,0,0,0,448,
449,3,145,72,0,449,450,5,46,0,0,450,451,3,145,72,0,451,148,1,0,0,0,452,454,
7,5,0,0,453,452,1,0,0,0,454,455,1,0,0,0,455,453,1,0,0,0,455,456,1,0,0,0,
456,457,1,0,0,0,457,458,6,74,0,0,458,150,1,0,0,0,10,0,399,404,411,420,427,
432,436,446,455,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class jossLexer extends antlr4.Lexer {

    static grammarFileName = "joss.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'.'", "'Go'", "'Cancel'", "'Delete'", "'all'", 
                         "'steps'", "'parts'", "'forms'", "'Done'", "'Stop'", 
                         "'Demand'", "'To'", "'Set'", "'Do'", "'Type'", 
                         "'size'", "'time'", "'users'", "'in'", "','", "'''", 
                         "'values'", "'Form'", "':'", "'..'", "'__'", "'.__'", 
                         "'_'", "'step'", "'part'", "'form'", "'if'", "'('", 
                         "')'", "'['", "']'", "'and'", "'or'", "'='", "'!='", 
                         "'<='", "'=>'", "'<'", "'>'", "'for'", "'sqrt('", 
                         "'log('", "'exp('", "'sin('", "'cos('", "'ip('", 
                         "'fp('", "'dp('", "'xp('", "'sgn('", "'max('", 
                         "'min('", "'Line'", "'Page'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, "LINECMD", "PAGECMD", "MULOP", "ADDOP", 
                          "STRING", "CHAR", "ALPHA", "SPECIALCHAR", "NUMBER", 
                          "NUMBERPART", "INTPART", "DECIMALPART", "DIGIT", 
                          "NZDIGIT", "SIGN", "PARTNUMBER", "STEPNUMBER", 
                          "WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
                      "T__25", "T__26", "T__27", "T__28", "T__29", "T__30", 
                      "T__31", "T__32", "T__33", "T__34", "T__35", "T__36", 
                      "T__37", "T__38", "T__39", "T__40", "T__41", "T__42", 
                      "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
                      "T__49", "T__50", "T__51", "T__52", "T__53", "T__54", 
                      "T__55", "T__56", "LINECMD", "PAGECMD", "MULOP", "ADDOP", 
                      "STRING", "CHAR", "ALPHA", "SPECIALCHAR", "NUMBER", 
                      "NUMBERPART", "INTPART", "DECIMALPART", "DIGIT", "NZDIGIT", 
                      "SIGN", "PARTNUMBER", "STEPNUMBER", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

jossLexer.EOF = antlr4.Token.EOF;
jossLexer.T__0 = 1;
jossLexer.T__1 = 2;
jossLexer.T__2 = 3;
jossLexer.T__3 = 4;
jossLexer.T__4 = 5;
jossLexer.T__5 = 6;
jossLexer.T__6 = 7;
jossLexer.T__7 = 8;
jossLexer.T__8 = 9;
jossLexer.T__9 = 10;
jossLexer.T__10 = 11;
jossLexer.T__11 = 12;
jossLexer.T__12 = 13;
jossLexer.T__13 = 14;
jossLexer.T__14 = 15;
jossLexer.T__15 = 16;
jossLexer.T__16 = 17;
jossLexer.T__17 = 18;
jossLexer.T__18 = 19;
jossLexer.T__19 = 20;
jossLexer.T__20 = 21;
jossLexer.T__21 = 22;
jossLexer.T__22 = 23;
jossLexer.T__23 = 24;
jossLexer.T__24 = 25;
jossLexer.T__25 = 26;
jossLexer.T__26 = 27;
jossLexer.T__27 = 28;
jossLexer.T__28 = 29;
jossLexer.T__29 = 30;
jossLexer.T__30 = 31;
jossLexer.T__31 = 32;
jossLexer.T__32 = 33;
jossLexer.T__33 = 34;
jossLexer.T__34 = 35;
jossLexer.T__35 = 36;
jossLexer.T__36 = 37;
jossLexer.T__37 = 38;
jossLexer.T__38 = 39;
jossLexer.T__39 = 40;
jossLexer.T__40 = 41;
jossLexer.T__41 = 42;
jossLexer.T__42 = 43;
jossLexer.T__43 = 44;
jossLexer.T__44 = 45;
jossLexer.T__45 = 46;
jossLexer.T__46 = 47;
jossLexer.T__47 = 48;
jossLexer.T__48 = 49;
jossLexer.T__49 = 50;
jossLexer.T__50 = 51;
jossLexer.T__51 = 52;
jossLexer.T__52 = 53;
jossLexer.T__53 = 54;
jossLexer.T__54 = 55;
jossLexer.T__55 = 56;
jossLexer.T__56 = 57;
jossLexer.LINECMD = 58;
jossLexer.PAGECMD = 59;
jossLexer.MULOP = 60;
jossLexer.ADDOP = 61;
jossLexer.STRING = 62;
jossLexer.CHAR = 63;
jossLexer.ALPHA = 64;
jossLexer.SPECIALCHAR = 65;
jossLexer.NUMBER = 66;
jossLexer.NUMBERPART = 67;
jossLexer.INTPART = 68;
jossLexer.DECIMALPART = 69;
jossLexer.DIGIT = 70;
jossLexer.NZDIGIT = 71;
jossLexer.SIGN = 72;
jossLexer.PARTNUMBER = 73;
jossLexer.STEPNUMBER = 74;
jossLexer.WS = 75;



