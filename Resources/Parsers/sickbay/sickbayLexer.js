// Generated from ./sickbay/sickbay.g4 by ANTLR 4.10.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,24,162,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,1,0,1,0,1,1,1,1,1,1,1,1,1,2,1,2,
1,2,1,2,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,
1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,
1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,
1,12,1,12,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,
15,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,18,1,18,1,18,1,19,1,19,5,19,137,
8,19,10,19,12,19,140,9,19,1,20,1,20,5,20,144,8,20,10,20,12,20,147,9,20,1,
20,1,20,1,21,5,21,152,8,21,10,21,12,21,155,9,21,1,22,1,22,1,23,1,23,1,23,
1,23,0,0,24,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,
13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,1,0,
8,3,0,42,43,45,45,47,47,1,0,65,90,3,0,37,37,48,57,65,90,1,0,48,57,1,0,34,
34,1,0,10,10,2,0,10,10,13,13,3,0,9,10,13,13,32,32,164,0,1,1,0,0,0,0,3,1,
0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,
1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,
0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,
0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,1,
49,1,0,0,0,3,51,1,0,0,0,5,55,1,0,0,0,7,59,1,0,0,0,9,61,1,0,0,0,11,66,1,0,
0,0,13,72,1,0,0,0,15,79,1,0,0,0,17,83,1,0,0,0,19,91,1,0,0,0,21,100,1,0,0,
0,23,104,1,0,0,0,25,109,1,0,0,0,27,111,1,0,0,0,29,113,1,0,0,0,31,119,1,0,
0,0,33,124,1,0,0,0,35,129,1,0,0,0,37,131,1,0,0,0,39,134,1,0,0,0,41,141,1,
0,0,0,43,153,1,0,0,0,45,156,1,0,0,0,47,158,1,0,0,0,49,50,5,58,0,0,50,2,1,
0,0,0,51,52,5,82,0,0,52,53,5,69,0,0,53,54,5,77,0,0,54,4,1,0,0,0,55,56,5,
76,0,0,56,57,5,69,0,0,57,58,5,84,0,0,58,6,1,0,0,0,59,60,5,61,0,0,60,8,1,
0,0,0,61,62,5,71,0,0,62,63,5,79,0,0,63,64,5,84,0,0,64,65,5,79,0,0,65,10,
1,0,0,0,66,67,5,71,0,0,67,68,5,79,0,0,68,69,5,83,0,0,69,70,5,85,0,0,70,71,
5,66,0,0,71,12,1,0,0,0,72,73,5,82,0,0,73,74,5,69,0,0,74,75,5,84,0,0,75,76,
5,85,0,0,76,77,5,82,0,0,77,78,5,78,0,0,78,14,1,0,0,0,79,80,5,69,0,0,80,81,
5,78,0,0,81,82,5,68,0,0,82,16,1,0,0,0,83,84,5,80,0,0,84,85,5,82,0,0,85,86,
5,79,0,0,86,87,5,76,0,0,87,88,5,79,0,0,88,89,5,78,0,0,89,90,5,71,0,0,90,
18,1,0,0,0,91,92,5,67,0,0,92,93,5,85,0,0,93,94,5,84,0,0,94,95,5,83,0,0,95,
96,5,72,0,0,96,97,5,79,0,0,97,98,5,82,0,0,98,99,5,84,0,0,99,20,1,0,0,0,100,
101,5,68,0,0,101,102,5,73,0,0,102,103,5,77,0,0,103,22,1,0,0,0,104,105,5,
82,0,0,105,106,5,73,0,0,106,107,5,78,0,0,107,108,5,71,0,0,108,24,1,0,0,0,
109,110,5,40,0,0,110,26,1,0,0,0,111,112,5,41,0,0,112,28,1,0,0,0,113,114,
5,73,0,0,114,115,5,78,0,0,115,116,5,80,0,0,116,117,5,85,0,0,117,118,5,84,
0,0,118,30,1,0,0,0,119,120,5,67,0,0,120,121,5,72,0,0,121,122,5,82,0,0,122,
123,5,36,0,0,123,32,1,0,0,0,124,125,5,82,0,0,125,126,5,78,0,0,126,127,5,
68,0,0,127,128,5,37,0,0,128,34,1,0,0,0,129,130,7,0,0,0,130,36,1,0,0,0,131,
132,7,1,0,0,132,133,7,2,0,0,133,38,1,0,0,0,134,138,7,3,0,0,135,137,7,3,0,
0,136,135,1,0,0,0,137,140,1,0,0,0,138,136,1,0,0,0,138,139,1,0,0,0,139,40,
1,0,0,0,140,138,1,0,0,0,141,145,5,34,0,0,142,144,8,4,0,0,143,142,1,0,0,0,
144,147,1,0,0,0,145,143,1,0,0,0,145,146,1,0,0,0,146,148,1,0,0,0,147,145,
1,0,0,0,148,149,5,34,0,0,149,42,1,0,0,0,150,152,8,5,0,0,151,150,1,0,0,0,
152,155,1,0,0,0,153,151,1,0,0,0,153,154,1,0,0,0,154,44,1,0,0,0,155,153,1,
0,0,0,156,157,7,6,0,0,157,46,1,0,0,0,158,159,7,7,0,0,159,160,1,0,0,0,160,
161,6,23,0,0,161,48,1,0,0,0,4,0,138,145,153,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class sickbayLexer extends antlr4.Lexer {

    static grammarFileName = "sickbay.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "':'", "'REM'", "'LET'", "'='", "'GOTO'", 
                         "'GOSUB'", "'RETURN'", "'END'", "'PROLONG'", "'CUTSHORT'", 
                         "'DIM'", "'RING'", "'('", "')'", "'INPUT'", "'CHR$'", 
                         "'RND%'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, "INTOP", "IINTID", "INTCONST", "STRCONST", 
                          "ARBTEXT", "NL", "WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "INTOP", "IINTID", 
                      "INTCONST", "STRCONST", "ARBTEXT", "NL", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

sickbayLexer.EOF = antlr4.Token.EOF;
sickbayLexer.T__0 = 1;
sickbayLexer.T__1 = 2;
sickbayLexer.T__2 = 3;
sickbayLexer.T__3 = 4;
sickbayLexer.T__4 = 5;
sickbayLexer.T__5 = 6;
sickbayLexer.T__6 = 7;
sickbayLexer.T__7 = 8;
sickbayLexer.T__8 = 9;
sickbayLexer.T__9 = 10;
sickbayLexer.T__10 = 11;
sickbayLexer.T__11 = 12;
sickbayLexer.T__12 = 13;
sickbayLexer.T__13 = 14;
sickbayLexer.T__14 = 15;
sickbayLexer.T__15 = 16;
sickbayLexer.T__16 = 17;
sickbayLexer.INTOP = 18;
sickbayLexer.IINTID = 19;
sickbayLexer.INTCONST = 20;
sickbayLexer.STRCONST = 21;
sickbayLexer.ARBTEXT = 22;
sickbayLexer.NL = 23;
sickbayLexer.WS = 24;



