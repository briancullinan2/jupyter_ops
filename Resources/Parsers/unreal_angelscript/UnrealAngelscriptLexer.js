// Generated from Resources/Parsers/unreal_angelscript/UnrealAngelscriptLexer.g4 by ANTLR 4.10.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,124,1201,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,
2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,
7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,
2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,
34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,
7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,
48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,
2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,
63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,
77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,84,
2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,7,91,2,
92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,98,7,98,2,99,
7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,7,104,2,105,7,
105,2,106,7,106,2,107,7,107,2,108,7,108,2,109,7,109,2,110,7,110,2,111,7,
111,2,112,7,112,2,113,7,113,2,114,7,114,2,115,7,115,2,116,7,116,2,117,7,
117,2,118,7,118,2,119,7,119,2,120,7,120,2,121,7,121,2,122,7,122,2,123,7,
123,2,124,7,124,2,125,7,125,2,126,7,126,2,127,7,127,2,128,7,128,2,129,7,
129,2,130,7,130,2,131,7,131,2,132,7,132,2,133,7,133,2,134,7,134,2,135,7,
135,2,136,7,136,2,137,7,137,2,138,7,138,2,139,7,139,2,140,7,140,2,141,7,
141,2,142,7,142,2,143,7,143,2,144,7,144,2,145,7,145,1,0,1,0,3,0,296,8,0,
1,0,1,0,3,0,300,8,0,1,0,1,0,3,0,304,8,0,1,0,1,0,3,0,308,8,0,3,0,310,8,0,
1,1,3,1,313,8,1,1,1,1,1,4,1,317,8,1,11,1,12,1,318,1,1,1,1,1,2,1,2,3,2,325,
8,2,1,2,3,2,328,8,2,1,2,1,2,1,2,3,2,333,8,2,3,2,335,8,2,1,3,1,3,1,3,1,3,
1,3,5,3,342,8,3,10,3,12,3,345,9,3,1,3,1,3,1,3,1,3,3,3,351,8,3,1,3,1,3,1,
3,5,3,356,8,3,10,3,12,3,359,9,3,1,3,3,3,362,8,3,1,4,1,4,1,4,1,4,3,4,368,
8,4,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,
1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,
1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,
11,1,11,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,
1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,
15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,
1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,
20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,
1,22,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,
25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,
1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,
29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,32,1,32,
1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,
34,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,
1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,
39,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,42,
1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,
44,1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,47,1,47,
1,47,1,47,1,47,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,
49,1,49,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,51,
1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,53,1,
53,1,53,1,53,1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,
1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,56,1,56,1,56,1,56,1,56,1,
56,1,56,1,57,1,57,1,57,1,57,1,57,1,57,1,58,1,58,1,58,1,58,1,58,1,58,1,58,
1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,60,1,60,1,60,1,60,1,60,1,61,1,61,1,
61,1,61,1,61,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,63,1,63,1,63,1,63,
1,63,1,64,1,64,1,64,1,64,1,64,1,64,1,65,1,65,1,66,1,66,1,67,1,67,1,68,1,
68,1,69,1,69,1,70,1,70,1,71,1,71,1,72,1,72,1,73,1,73,1,74,1,74,1,75,1,75,
1,76,1,76,1,76,3,76,786,8,76,1,77,1,77,1,78,1,78,1,79,1,79,1,80,1,80,1,81,
1,81,1,82,1,82,1,83,1,83,1,84,1,84,1,84,1,85,1,85,1,85,1,86,1,86,1,86,1,
87,1,87,1,87,1,88,1,88,1,88,1,89,1,89,1,89,1,90,1,90,1,90,1,91,1,91,1,91,
1,92,1,92,1,92,1,92,1,93,1,93,1,93,1,93,1,94,1,94,1,94,1,95,1,95,1,95,1,
96,1,96,1,96,1,97,1,97,1,97,1,98,1,98,1,98,1,99,1,99,1,99,1,100,1,100,1,
100,1,101,1,101,1,101,1,102,1,102,1,103,1,103,1,104,1,104,1,105,1,105,1,
105,1,106,1,106,1,107,1,107,1,108,1,108,1,108,5,108,874,8,108,10,108,12,
108,877,9,108,1,109,1,109,1,110,1,110,1,111,1,111,1,112,1,112,3,112,887,
8,112,1,112,5,112,890,8,112,10,112,12,112,893,9,112,1,113,1,113,3,113,897,
8,113,1,113,5,113,900,8,113,10,113,12,113,903,9,113,1,114,1,114,1,114,1,
114,3,114,909,8,114,1,114,1,114,3,114,913,8,114,1,114,5,114,916,8,114,10,
114,12,114,919,9,114,1,115,1,115,1,115,1,115,3,115,925,8,115,1,115,1,115,
3,115,929,8,115,1,115,5,115,932,8,115,10,115,12,115,935,9,115,1,116,1,116,
1,117,1,117,1,118,1,118,1,119,1,119,1,120,1,120,3,120,947,8,120,1,120,1,
120,3,120,951,8,120,1,120,1,120,3,120,955,8,120,1,120,1,120,3,120,959,8,
120,3,120,961,8,120,1,121,1,121,1,122,1,122,1,123,1,123,1,123,1,123,3,123,
971,8,123,1,124,1,124,3,124,975,8,124,1,125,1,125,1,125,3,125,980,8,125,
1,126,1,126,1,126,1,126,1,126,1,126,1,126,1,126,1,126,1,126,1,126,1,126,
1,126,1,126,1,126,1,126,1,126,1,126,1,126,1,126,1,126,3,126,1003,8,126,1,
126,3,126,1006,8,126,1,126,1,126,1,126,1,126,3,126,1012,8,126,1,127,1,127,
1,127,1,127,1,127,1,127,1,127,1,127,1,127,1,127,1,127,3,127,1025,8,127,1,
128,1,128,1,128,1,128,4,128,1031,8,128,11,128,12,128,1032,1,129,3,129,1036,
8,129,1,129,1,129,1,129,1,129,1,129,3,129,1043,8,129,1,130,1,130,3,130,1047,
8,130,1,130,1,130,1,130,3,130,1052,8,130,1,130,3,130,1055,8,130,1,131,1,
131,1,132,1,132,3,132,1061,8,132,1,132,5,132,1064,8,132,10,132,12,132,1067,
9,132,1,133,1,133,1,134,1,134,1,134,3,134,1074,8,134,1,135,1,135,1,135,1,
135,1,135,1,135,1,135,1,135,1,135,1,135,1,135,1,135,3,135,1088,8,135,1,136,
1,136,3,136,1092,8,136,1,136,1,136,1,136,1,136,1,136,1,136,3,136,1100,8,
136,1,137,1,137,1,137,1,138,1,138,1,138,1,139,1,139,1,140,4,140,1111,8,140,
11,140,12,140,1112,1,140,1,140,1,141,1,141,3,141,1119,8,141,1,141,3,141,
1122,8,141,1,141,1,141,1,142,1,142,1,142,1,142,5,142,1130,8,142,10,142,12,
142,1133,9,142,1,142,1,142,1,142,1,142,1,142,1,143,1,143,1,143,1,143,5,143,
1144,8,143,10,143,12,143,1147,9,143,1,143,1,143,1,144,1,144,1,144,1,144,
1,144,1,144,1,144,5,144,1158,8,144,10,144,12,144,1161,9,144,1,144,1,144,
1,144,1,144,1,144,1,144,1,144,1,144,1,144,1,145,1,145,1,145,1,145,1,145,
1,145,1,145,1,145,1,145,1,145,1,145,1,145,1,145,1,145,1,145,1,145,1,145,
1,145,1,145,1,145,3,145,1192,8,145,1,145,5,145,1195,8,145,10,145,12,145,
1198,9,145,1,145,1,145,3,343,1131,1159,0,146,1,1,3,2,5,3,7,4,9,5,11,6,13,
7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,
39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,
63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,
87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,
55,111,56,113,57,115,58,117,59,119,60,121,61,123,62,125,63,127,64,129,65,
131,66,133,67,135,68,137,69,139,70,141,71,143,72,145,73,147,74,149,75,151,
76,153,77,155,78,157,79,159,80,161,81,163,82,165,83,167,84,169,85,171,86,
173,87,175,88,177,89,179,90,181,91,183,92,185,93,187,94,189,95,191,96,193,
97,195,98,197,99,199,100,201,101,203,102,205,103,207,104,209,105,211,106,
213,107,215,108,217,109,219,0,221,0,223,0,225,110,227,111,229,112,231,113,
233,0,235,0,237,0,239,0,241,114,243,0,245,0,247,0,249,0,251,0,253,0,255,
0,257,0,259,0,261,0,263,0,265,0,267,0,269,0,271,115,273,116,275,117,277,
118,279,0,281,119,283,120,285,121,287,122,289,123,291,124,1,0,16,3,0,76,
76,85,85,117,117,2,0,102,102,110,110,4,0,34,34,92,92,133,133,8232,8233,3,
0,65,90,95,95,97,122,1,0,48,57,1,0,49,57,1,0,48,55,3,0,48,57,65,70,97,102,
1,0,48,49,2,0,85,85,117,117,2,0,76,76,108,108,4,0,10,10,13,13,39,39,92,92,
2,0,43,43,45,45,4,0,70,70,76,76,102,102,108,108,2,0,9,9,32,32,2,0,10,10,
13,13,1262,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,
11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,
0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,
1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,
0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,
0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,
67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,
0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,
1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,
0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,
111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,
1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,
0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,
0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,
0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,
0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,
173,1,0,0,0,0,175,1,0,0,0,0,177,1,0,0,0,0,179,1,0,0,0,0,181,1,0,0,0,0,183,
1,0,0,0,0,185,1,0,0,0,0,187,1,0,0,0,0,189,1,0,0,0,0,191,1,0,0,0,0,193,1,
0,0,0,0,195,1,0,0,0,0,197,1,0,0,0,0,199,1,0,0,0,0,201,1,0,0,0,0,203,1,0,
0,0,0,205,1,0,0,0,0,207,1,0,0,0,0,209,1,0,0,0,0,211,1,0,0,0,0,213,1,0,0,
0,0,215,1,0,0,0,0,217,1,0,0,0,0,225,1,0,0,0,0,227,1,0,0,0,0,229,1,0,0,0,
0,231,1,0,0,0,0,241,1,0,0,0,0,271,1,0,0,0,0,273,1,0,0,0,0,275,1,0,0,0,0,
277,1,0,0,0,0,281,1,0,0,0,0,283,1,0,0,0,0,285,1,0,0,0,0,287,1,0,0,0,0,289,
1,0,0,0,0,291,1,0,0,0,1,309,1,0,0,0,3,312,1,0,0,0,5,334,1,0,0,0,7,361,1,
0,0,0,9,367,1,0,0,0,11,369,1,0,0,0,13,374,1,0,0,0,15,381,1,0,0,0,17,389,
1,0,0,0,19,399,1,0,0,0,21,409,1,0,0,0,23,416,1,0,0,0,25,421,1,0,0,0,27,425,
1,0,0,0,29,434,1,0,0,0,31,441,1,0,0,0,33,454,1,0,0,0,35,460,1,0,0,0,37,466,
1,0,0,0,39,470,1,0,0,0,41,475,1,0,0,0,43,481,1,0,0,0,45,487,1,0,0,0,47,493,
1,0,0,0,49,498,1,0,0,0,51,504,1,0,0,0,53,511,1,0,0,0,55,518,1,0,0,0,57,525,
1,0,0,0,59,531,1,0,0,0,61,538,1,0,0,0,63,543,1,0,0,0,65,548,1,0,0,0,67,554,
1,0,0,0,69,559,1,0,0,0,71,565,1,0,0,0,73,570,1,0,0,0,75,576,1,0,0,0,77,582,
1,0,0,0,79,591,1,0,0,0,81,599,1,0,0,0,83,602,1,0,0,0,85,607,1,0,0,0,87,612,
1,0,0,0,89,619,1,0,0,0,91,625,1,0,0,0,93,631,1,0,0,0,95,635,1,0,0,0,97,640,
1,0,0,0,99,643,1,0,0,0,101,653,1,0,0,0,103,661,1,0,0,0,105,670,1,0,0,0,107,
679,1,0,0,0,109,687,1,0,0,0,111,697,1,0,0,0,113,704,1,0,0,0,115,711,1,0,
0,0,117,717,1,0,0,0,119,724,1,0,0,0,121,731,1,0,0,0,123,736,1,0,0,0,125,
741,1,0,0,0,127,749,1,0,0,0,129,754,1,0,0,0,131,760,1,0,0,0,133,762,1,0,
0,0,135,764,1,0,0,0,137,766,1,0,0,0,139,768,1,0,0,0,141,770,1,0,0,0,143,
772,1,0,0,0,145,774,1,0,0,0,147,776,1,0,0,0,149,778,1,0,0,0,151,780,1,0,
0,0,153,785,1,0,0,0,155,787,1,0,0,0,157,789,1,0,0,0,159,791,1,0,0,0,161,
793,1,0,0,0,163,795,1,0,0,0,165,797,1,0,0,0,167,799,1,0,0,0,169,801,1,0,
0,0,171,804,1,0,0,0,173,807,1,0,0,0,175,810,1,0,0,0,177,813,1,0,0,0,179,
816,1,0,0,0,181,819,1,0,0,0,183,822,1,0,0,0,185,825,1,0,0,0,187,829,1,0,
0,0,189,833,1,0,0,0,191,836,1,0,0,0,193,839,1,0,0,0,195,842,1,0,0,0,197,
845,1,0,0,0,199,848,1,0,0,0,201,851,1,0,0,0,203,854,1,0,0,0,205,857,1,0,
0,0,207,859,1,0,0,0,209,861,1,0,0,0,211,863,1,0,0,0,213,866,1,0,0,0,215,
868,1,0,0,0,217,870,1,0,0,0,219,878,1,0,0,0,221,880,1,0,0,0,223,882,1,0,
0,0,225,884,1,0,0,0,227,894,1,0,0,0,229,908,1,0,0,0,231,924,1,0,0,0,233,
936,1,0,0,0,235,938,1,0,0,0,237,940,1,0,0,0,239,942,1,0,0,0,241,960,1,0,
0,0,243,962,1,0,0,0,245,964,1,0,0,0,247,970,1,0,0,0,249,974,1,0,0,0,251,
979,1,0,0,0,253,1011,1,0,0,0,255,1024,1,0,0,0,257,1026,1,0,0,0,259,1042,
1,0,0,0,261,1054,1,0,0,0,263,1056,1,0,0,0,265,1058,1,0,0,0,267,1068,1,0,
0,0,269,1073,1,0,0,0,271,1087,1,0,0,0,273,1099,1,0,0,0,275,1101,1,0,0,0,
277,1104,1,0,0,0,279,1107,1,0,0,0,281,1110,1,0,0,0,283,1121,1,0,0,0,285,
1125,1,0,0,0,287,1139,1,0,0,0,289,1150,1,0,0,0,291,1191,1,0,0,0,293,295,
3,225,112,0,294,296,3,241,120,0,295,294,1,0,0,0,295,296,1,0,0,0,296,310,
1,0,0,0,297,299,3,227,113,0,298,300,3,241,120,0,299,298,1,0,0,0,299,300,
1,0,0,0,300,310,1,0,0,0,301,303,3,229,114,0,302,304,3,241,120,0,303,302,
1,0,0,0,303,304,1,0,0,0,304,310,1,0,0,0,305,307,3,231,115,0,306,308,3,241,
120,0,307,306,1,0,0,0,307,308,1,0,0,0,308,310,1,0,0,0,309,293,1,0,0,0,309,
297,1,0,0,0,309,301,1,0,0,0,309,305,1,0,0,0,310,2,1,0,0,0,311,313,7,0,0,
0,312,311,1,0,0,0,312,313,1,0,0,0,313,314,1,0,0,0,314,316,5,39,0,0,315,317,
3,249,124,0,316,315,1,0,0,0,317,318,1,0,0,0,318,316,1,0,0,0,318,319,1,0,
0,0,319,320,1,0,0,0,320,321,5,39,0,0,321,4,1,0,0,0,322,324,3,259,129,0,323,
325,3,261,130,0,324,323,1,0,0,0,324,325,1,0,0,0,325,327,1,0,0,0,326,328,
3,267,133,0,327,326,1,0,0,0,327,328,1,0,0,0,328,335,1,0,0,0,329,330,3,265,
132,0,330,332,3,261,130,0,331,333,3,267,133,0,332,331,1,0,0,0,332,333,1,
0,0,0,333,335,1,0,0,0,334,322,1,0,0,0,334,329,1,0,0,0,335,6,1,0,0,0,336,
337,5,34,0,0,337,338,5,34,0,0,338,339,5,34,0,0,339,343,1,0,0,0,340,342,9,
0,0,0,341,340,1,0,0,0,342,345,1,0,0,0,343,344,1,0,0,0,343,341,1,0,0,0,344,
346,1,0,0,0,345,343,1,0,0,0,346,347,5,34,0,0,347,348,5,34,0,0,348,362,5,
34,0,0,349,351,7,1,0,0,350,349,1,0,0,0,350,351,1,0,0,0,351,352,1,0,0,0,352,
357,5,34,0,0,353,356,8,2,0,0,354,356,3,251,125,0,355,353,1,0,0,0,355,354,
1,0,0,0,356,359,1,0,0,0,357,355,1,0,0,0,357,358,1,0,0,0,358,360,1,0,0,0,
359,357,1,0,0,0,360,362,5,34,0,0,361,336,1,0,0,0,361,350,1,0,0,0,362,8,1,
0,0,0,363,368,3,271,135,0,364,368,3,273,136,0,365,368,3,275,137,0,366,368,
3,277,138,0,367,363,1,0,0,0,367,364,1,0,0,0,367,365,1,0,0,0,367,366,1,0,
0,0,368,10,1,0,0,0,369,370,5,67,0,0,370,371,5,97,0,0,371,372,5,115,0,0,372,
373,5,116,0,0,373,12,1,0,0,0,374,375,5,85,0,0,375,376,5,67,0,0,376,377,5,
76,0,0,377,378,5,65,0,0,378,379,5,83,0,0,379,380,5,83,0,0,380,14,1,0,0,0,
381,382,5,85,0,0,382,383,5,83,0,0,383,384,5,84,0,0,384,385,5,82,0,0,385,
386,5,85,0,0,386,387,5,67,0,0,387,388,5,84,0,0,388,16,1,0,0,0,389,390,5,
85,0,0,390,391,5,80,0,0,391,392,5,82,0,0,392,393,5,79,0,0,393,394,5,80,0,
0,394,395,5,69,0,0,395,396,5,82,0,0,396,397,5,84,0,0,397,398,5,89,0,0,398,
18,1,0,0,0,399,400,5,85,0,0,400,401,5,70,0,0,401,402,5,85,0,0,402,403,5,
78,0,0,403,404,5,67,0,0,404,405,5,84,0,0,405,406,5,73,0,0,406,407,5,79,0,
0,407,408,5,78,0,0,408,20,1,0,0,0,409,410,5,105,0,0,410,411,5,109,0,0,411,
412,5,112,0,0,412,413,5,111,0,0,413,414,5,114,0,0,414,415,5,116,0,0,415,
22,1,0,0,0,416,417,5,102,0,0,417,418,5,114,0,0,418,419,5,111,0,0,419,420,
5,109,0,0,420,24,1,0,0,0,421,422,5,111,0,0,422,423,5,117,0,0,423,424,5,116,
0,0,424,26,1,0,0,0,425,426,5,112,0,0,426,427,5,114,0,0,427,428,5,111,0,0,
428,429,5,112,0,0,429,430,5,101,0,0,430,431,5,114,0,0,431,432,5,116,0,0,
432,433,5,121,0,0,433,28,1,0,0,0,434,435,5,101,0,0,435,436,5,110,0,0,436,
437,5,115,0,0,437,438,5,117,0,0,438,439,5,114,0,0,439,440,5,101,0,0,440,
30,1,0,0,0,441,442,5,101,0,0,442,443,5,110,0,0,443,444,5,115,0,0,444,445,
5,117,0,0,445,446,5,114,0,0,446,447,5,101,0,0,447,448,5,65,0,0,448,449,5,
108,0,0,449,450,5,119,0,0,450,451,5,97,0,0,451,452,5,121,0,0,452,453,5,115,
0,0,453,32,1,0,0,0,454,455,5,99,0,0,455,456,5,104,0,0,456,457,5,101,0,0,
457,458,5,99,0,0,458,459,5,107,0,0,459,34,1,0,0,0,460,461,5,109,0,0,461,
462,5,105,0,0,462,463,5,120,0,0,463,464,5,105,0,0,464,465,5,110,0,0,465,
36,1,0,0,0,466,467,5,105,0,0,467,468,5,110,0,0,468,469,5,116,0,0,469,38,
1,0,0,0,470,471,5,105,0,0,471,472,5,110,0,0,472,473,5,116,0,0,473,474,5,
56,0,0,474,40,1,0,0,0,475,476,5,105,0,0,476,477,5,110,0,0,477,478,5,116,
0,0,478,479,5,49,0,0,479,480,5,54,0,0,480,42,1,0,0,0,481,482,5,105,0,0,482,
483,5,110,0,0,483,484,5,116,0,0,484,485,5,51,0,0,485,486,5,50,0,0,486,44,
1,0,0,0,487,488,5,105,0,0,488,489,5,110,0,0,489,490,5,116,0,0,490,491,5,
54,0,0,491,492,5,52,0,0,492,46,1,0,0,0,493,494,5,117,0,0,494,495,5,105,0,
0,495,496,5,110,0,0,496,497,5,116,0,0,497,48,1,0,0,0,498,499,5,117,0,0,499,
500,5,105,0,0,500,501,5,110,0,0,501,502,5,116,0,0,502,503,5,56,0,0,503,50,
1,0,0,0,504,505,5,117,0,0,505,506,5,105,0,0,506,507,5,110,0,0,507,508,5,
116,0,0,508,509,5,49,0,0,509,510,5,54,0,0,510,52,1,0,0,0,511,512,5,117,0,
0,512,513,5,105,0,0,513,514,5,110,0,0,514,515,5,116,0,0,515,516,5,51,0,0,
516,517,5,50,0,0,517,54,1,0,0,0,518,519,5,117,0,0,519,520,5,105,0,0,520,
521,5,110,0,0,521,522,5,116,0,0,522,523,5,54,0,0,523,524,5,52,0,0,524,56,
1,0,0,0,525,526,5,102,0,0,526,527,5,108,0,0,527,528,5,111,0,0,528,529,5,
97,0,0,529,530,5,116,0,0,530,58,1,0,0,0,531,532,5,100,0,0,532,533,5,111,
0,0,533,534,5,117,0,0,534,535,5,98,0,0,535,536,5,108,0,0,536,537,5,101,0,
0,537,60,1,0,0,0,538,539,5,98,0,0,539,540,5,111,0,0,540,541,5,111,0,0,541,
542,5,108,0,0,542,62,1,0,0,0,543,544,5,97,0,0,544,545,5,117,0,0,545,546,
5,116,0,0,546,547,5,111,0,0,547,64,1,0,0,0,548,549,5,98,0,0,549,550,5,114,
0,0,550,551,5,101,0,0,551,552,5,97,0,0,552,553,5,107,0,0,553,66,1,0,0,0,
554,555,5,99,0,0,555,556,5,97,0,0,556,557,5,115,0,0,557,558,5,101,0,0,558,
68,1,0,0,0,559,560,5,99,0,0,560,561,5,97,0,0,561,562,5,116,0,0,562,563,5,
99,0,0,563,564,5,104,0,0,564,70,1,0,0,0,565,566,5,99,0,0,566,567,5,104,0,
0,567,568,5,97,0,0,568,569,5,114,0,0,569,72,1,0,0,0,570,571,5,99,0,0,571,
572,5,108,0,0,572,573,5,97,0,0,573,574,5,115,0,0,574,575,5,115,0,0,575,74,
1,0,0,0,576,577,5,99,0,0,577,578,5,111,0,0,578,579,5,110,0,0,579,580,5,115,
0,0,580,581,5,116,0,0,581,76,1,0,0,0,582,583,5,99,0,0,583,584,5,111,0,0,
584,585,5,110,0,0,585,586,5,116,0,0,586,587,5,105,0,0,587,588,5,110,0,0,
588,589,5,117,0,0,589,590,5,101,0,0,590,78,1,0,0,0,591,592,5,100,0,0,592,
593,5,101,0,0,593,594,5,102,0,0,594,595,5,97,0,0,595,596,5,117,0,0,596,597,
5,108,0,0,597,598,5,116,0,0,598,80,1,0,0,0,599,600,5,100,0,0,600,601,5,111,
0,0,601,82,1,0,0,0,602,603,5,101,0,0,603,604,5,108,0,0,604,605,5,115,0,0,
605,606,5,101,0,0,606,84,1,0,0,0,607,608,5,101,0,0,608,609,5,110,0,0,609,
610,5,117,0,0,610,611,5,109,0,0,611,86,1,0,0,0,612,613,5,101,0,0,613,614,
5,120,0,0,614,615,5,112,0,0,615,616,5,111,0,0,616,617,5,114,0,0,617,618,
5,116,0,0,618,88,1,0,0,0,619,620,5,102,0,0,620,621,5,97,0,0,621,622,5,108,
0,0,622,623,5,115,0,0,623,624,5,101,0,0,624,90,1,0,0,0,625,626,5,102,0,0,
626,627,5,105,0,0,627,628,5,110,0,0,628,629,5,97,0,0,629,630,5,108,0,0,630,
92,1,0,0,0,631,632,5,102,0,0,632,633,5,111,0,0,633,634,5,114,0,0,634,94,
1,0,0,0,635,636,5,103,0,0,636,637,5,111,0,0,637,638,5,116,0,0,638,639,5,
111,0,0,639,96,1,0,0,0,640,641,5,105,0,0,641,642,5,102,0,0,642,98,1,0,0,
0,643,644,5,110,0,0,644,645,5,97,0,0,645,646,5,109,0,0,646,647,5,101,0,0,
647,648,5,115,0,0,648,649,5,112,0,0,649,650,5,97,0,0,650,651,5,99,0,0,651,
652,5,101,0,0,652,100,1,0,0,0,653,654,5,110,0,0,654,655,5,117,0,0,655,656,
5,108,0,0,656,657,5,108,0,0,657,658,5,112,0,0,658,659,5,116,0,0,659,660,
5,114,0,0,660,102,1,0,0,0,661,662,5,111,0,0,662,663,5,112,0,0,663,664,5,
101,0,0,664,665,5,114,0,0,665,666,5,97,0,0,666,667,5,116,0,0,667,668,5,111,
0,0,668,669,5,114,0,0,669,104,1,0,0,0,670,671,5,111,0,0,671,672,5,118,0,
0,672,673,5,101,0,0,673,674,5,114,0,0,674,675,5,114,0,0,675,676,5,105,0,
0,676,677,5,100,0,0,677,678,5,101,0,0,678,106,1,0,0,0,679,680,5,112,0,0,
680,681,5,114,0,0,681,682,5,105,0,0,682,683,5,118,0,0,683,684,5,97,0,0,684,
685,5,116,0,0,685,686,5,101,0,0,686,108,1,0,0,0,687,688,5,112,0,0,688,689,
5,114,0,0,689,690,5,111,0,0,690,691,5,116,0,0,691,692,5,101,0,0,692,693,
5,99,0,0,693,694,5,116,0,0,694,695,5,101,0,0,695,696,5,100,0,0,696,110,1,
0,0,0,697,698,5,112,0,0,698,699,5,117,0,0,699,700,5,98,0,0,700,701,5,108,
0,0,701,702,5,105,0,0,702,703,5,99,0,0,703,112,1,0,0,0,704,705,5,114,0,0,
705,706,5,101,0,0,706,707,5,116,0,0,707,708,5,117,0,0,708,709,5,114,0,0,
709,710,5,110,0,0,710,114,1,0,0,0,711,712,5,115,0,0,712,713,5,104,0,0,713,
714,5,111,0,0,714,715,5,114,0,0,715,716,5,116,0,0,716,116,1,0,0,0,717,718,
5,115,0,0,718,719,5,116,0,0,719,720,5,114,0,0,720,721,5,117,0,0,721,722,
5,99,0,0,722,723,5,116,0,0,723,118,1,0,0,0,724,725,5,115,0,0,725,726,5,119,
0,0,726,727,5,105,0,0,727,728,5,116,0,0,728,729,5,99,0,0,729,730,5,104,0,
0,730,120,1,0,0,0,731,732,5,116,0,0,732,733,5,104,0,0,733,734,5,105,0,0,
734,735,5,115,0,0,735,122,1,0,0,0,736,737,5,116,0,0,737,738,5,114,0,0,738,
739,5,117,0,0,739,740,5,101,0,0,740,124,1,0,0,0,741,742,5,118,0,0,742,743,
5,105,0,0,743,744,5,114,0,0,744,745,5,116,0,0,745,746,5,117,0,0,746,747,
5,97,0,0,747,748,5,108,0,0,748,126,1,0,0,0,749,750,5,118,0,0,750,751,5,111,
0,0,751,752,5,105,0,0,752,753,5,100,0,0,753,128,1,0,0,0,754,755,5,119,0,
0,755,756,5,104,0,0,756,757,5,105,0,0,757,758,5,108,0,0,758,759,5,101,0,
0,759,130,1,0,0,0,760,761,5,40,0,0,761,132,1,0,0,0,762,763,5,41,0,0,763,
134,1,0,0,0,764,765,5,91,0,0,765,136,1,0,0,0,766,767,5,93,0,0,767,138,1,
0,0,0,768,769,5,123,0,0,769,140,1,0,0,0,770,771,5,125,0,0,771,142,1,0,0,
0,772,773,5,43,0,0,773,144,1,0,0,0,774,775,5,45,0,0,775,146,1,0,0,0,776,
777,5,42,0,0,777,148,1,0,0,0,778,779,5,47,0,0,779,150,1,0,0,0,780,781,5,
37,0,0,781,152,1,0,0,0,782,783,5,94,0,0,783,786,5,94,0,0,784,786,5,94,0,
0,785,782,1,0,0,0,785,784,1,0,0,0,786,154,1,0,0,0,787,788,5,38,0,0,788,156,
1,0,0,0,789,790,5,124,0,0,790,158,1,0,0,0,791,792,5,126,0,0,792,160,1,0,
0,0,793,794,5,33,0,0,794,162,1,0,0,0,795,796,5,61,0,0,796,164,1,0,0,0,797,
798,5,60,0,0,798,166,1,0,0,0,799,800,5,62,0,0,800,168,1,0,0,0,801,802,5,
43,0,0,802,803,5,61,0,0,803,170,1,0,0,0,804,805,5,45,0,0,805,806,5,61,0,
0,806,172,1,0,0,0,807,808,5,42,0,0,808,809,5,61,0,0,809,174,1,0,0,0,810,
811,5,47,0,0,811,812,5,61,0,0,812,176,1,0,0,0,813,814,5,37,0,0,814,815,5,
61,0,0,815,178,1,0,0,0,816,817,5,94,0,0,817,818,5,61,0,0,818,180,1,0,0,0,
819,820,5,38,0,0,820,821,5,61,0,0,821,182,1,0,0,0,822,823,5,124,0,0,823,
824,5,61,0,0,824,184,1,0,0,0,825,826,5,60,0,0,826,827,5,60,0,0,827,828,5,
61,0,0,828,186,1,0,0,0,829,830,5,62,0,0,830,831,5,62,0,0,831,832,5,61,0,
0,832,188,1,0,0,0,833,834,5,61,0,0,834,835,5,61,0,0,835,190,1,0,0,0,836,
837,5,33,0,0,837,838,5,61,0,0,838,192,1,0,0,0,839,840,5,60,0,0,840,841,5,
61,0,0,841,194,1,0,0,0,842,843,5,62,0,0,843,844,5,61,0,0,844,196,1,0,0,0,
845,846,5,38,0,0,846,847,5,38,0,0,847,198,1,0,0,0,848,849,5,124,0,0,849,
850,5,124,0,0,850,200,1,0,0,0,851,852,5,43,0,0,852,853,5,43,0,0,853,202,
1,0,0,0,854,855,5,45,0,0,855,856,5,45,0,0,856,204,1,0,0,0,857,858,5,44,0,
0,858,206,1,0,0,0,859,860,5,63,0,0,860,208,1,0,0,0,861,862,5,58,0,0,862,
210,1,0,0,0,863,864,5,58,0,0,864,865,5,58,0,0,865,212,1,0,0,0,866,867,5,
59,0,0,867,214,1,0,0,0,868,869,5,46,0,0,869,216,1,0,0,0,870,875,3,219,109,
0,871,874,3,219,109,0,872,874,3,223,111,0,873,871,1,0,0,0,873,872,1,0,0,
0,874,877,1,0,0,0,875,873,1,0,0,0,875,876,1,0,0,0,876,218,1,0,0,0,877,875,
1,0,0,0,878,879,3,221,110,0,879,220,1,0,0,0,880,881,7,3,0,0,881,222,1,0,
0,0,882,883,7,4,0,0,883,224,1,0,0,0,884,891,3,233,116,0,885,887,5,39,0,0,
886,885,1,0,0,0,886,887,1,0,0,0,887,888,1,0,0,0,888,890,3,223,111,0,889,
886,1,0,0,0,890,893,1,0,0,0,891,889,1,0,0,0,891,892,1,0,0,0,892,226,1,0,
0,0,893,891,1,0,0,0,894,901,5,48,0,0,895,897,5,39,0,0,896,895,1,0,0,0,896,
897,1,0,0,0,897,898,1,0,0,0,898,900,3,235,117,0,899,896,1,0,0,0,900,903,
1,0,0,0,901,899,1,0,0,0,901,902,1,0,0,0,902,228,1,0,0,0,903,901,1,0,0,0,
904,905,5,48,0,0,905,909,5,120,0,0,906,907,5,48,0,0,907,909,5,88,0,0,908,
904,1,0,0,0,908,906,1,0,0,0,909,910,1,0,0,0,910,917,3,237,118,0,911,913,
5,39,0,0,912,911,1,0,0,0,912,913,1,0,0,0,913,914,1,0,0,0,914,916,3,237,118,
0,915,912,1,0,0,0,916,919,1,0,0,0,917,915,1,0,0,0,917,918,1,0,0,0,918,230,
1,0,0,0,919,917,1,0,0,0,920,921,5,48,0,0,921,925,5,98,0,0,922,923,5,48,0,
0,923,925,5,66,0,0,924,920,1,0,0,0,924,922,1,0,0,0,925,926,1,0,0,0,926,933,
3,239,119,0,927,929,5,39,0,0,928,927,1,0,0,0,928,929,1,0,0,0,929,930,1,0,
0,0,930,932,3,239,119,0,931,928,1,0,0,0,932,935,1,0,0,0,933,931,1,0,0,0,
933,934,1,0,0,0,934,232,1,0,0,0,935,933,1,0,0,0,936,937,7,5,0,0,937,234,
1,0,0,0,938,939,7,6,0,0,939,236,1,0,0,0,940,941,7,7,0,0,941,238,1,0,0,0,
942,943,7,8,0,0,943,240,1,0,0,0,944,946,3,243,121,0,945,947,3,245,122,0,
946,945,1,0,0,0,946,947,1,0,0,0,947,961,1,0,0,0,948,950,3,243,121,0,949,
951,3,247,123,0,950,949,1,0,0,0,950,951,1,0,0,0,951,961,1,0,0,0,952,954,
3,245,122,0,953,955,3,243,121,0,954,953,1,0,0,0,954,955,1,0,0,0,955,961,
1,0,0,0,956,958,3,247,123,0,957,959,3,243,121,0,958,957,1,0,0,0,958,959,
1,0,0,0,959,961,1,0,0,0,960,944,1,0,0,0,960,948,1,0,0,0,960,952,1,0,0,0,
960,956,1,0,0,0,961,242,1,0,0,0,962,963,7,9,0,0,963,244,1,0,0,0,964,965,
7,10,0,0,965,246,1,0,0,0,966,967,5,108,0,0,967,971,5,108,0,0,968,969,5,76,
0,0,969,971,5,76,0,0,970,966,1,0,0,0,970,968,1,0,0,0,971,248,1,0,0,0,972,
975,8,11,0,0,973,975,3,251,125,0,974,972,1,0,0,0,974,973,1,0,0,0,975,250,
1,0,0,0,976,980,3,253,126,0,977,980,3,255,127,0,978,980,3,257,128,0,979,
976,1,0,0,0,979,977,1,0,0,0,979,978,1,0,0,0,980,252,1,0,0,0,981,982,5,92,
0,0,982,1012,5,39,0,0,983,984,5,92,0,0,984,1012,5,34,0,0,985,986,5,92,0,
0,986,1012,5,63,0,0,987,988,5,92,0,0,988,1012,5,92,0,0,989,990,5,92,0,0,
990,1012,5,97,0,0,991,992,5,92,0,0,992,1012,5,98,0,0,993,994,5,92,0,0,994,
1012,5,102,0,0,995,996,5,92,0,0,996,1012,5,110,0,0,997,998,5,92,0,0,998,
1012,5,114,0,0,999,1005,5,92,0,0,1000,1002,5,13,0,0,1001,1003,5,10,0,0,1002,
1001,1,0,0,0,1002,1003,1,0,0,0,1003,1006,1,0,0,0,1004,1006,5,10,0,0,1005,
1000,1,0,0,0,1005,1004,1,0,0,0,1006,1012,1,0,0,0,1007,1008,5,92,0,0,1008,
1012,5,116,0,0,1009,1010,5,92,0,0,1010,1012,5,118,0,0,1011,981,1,0,0,0,1011,
983,1,0,0,0,1011,985,1,0,0,0,1011,987,1,0,0,0,1011,989,1,0,0,0,1011,991,
1,0,0,0,1011,993,1,0,0,0,1011,995,1,0,0,0,1011,997,1,0,0,0,1011,999,1,0,
0,0,1011,1007,1,0,0,0,1011,1009,1,0,0,0,1012,254,1,0,0,0,1013,1014,5,92,
0,0,1014,1025,3,235,117,0,1015,1016,5,92,0,0,1016,1017,3,235,117,0,1017,
1018,3,235,117,0,1018,1025,1,0,0,0,1019,1020,5,92,0,0,1020,1021,3,235,117,
0,1021,1022,3,235,117,0,1022,1023,3,235,117,0,1023,1025,1,0,0,0,1024,1013,
1,0,0,0,1024,1015,1,0,0,0,1024,1019,1,0,0,0,1025,256,1,0,0,0,1026,1027,5,
92,0,0,1027,1028,5,120,0,0,1028,1030,1,0,0,0,1029,1031,3,237,118,0,1030,
1029,1,0,0,0,1031,1032,1,0,0,0,1032,1030,1,0,0,0,1032,1033,1,0,0,0,1033,
258,1,0,0,0,1034,1036,3,265,132,0,1035,1034,1,0,0,0,1035,1036,1,0,0,0,1036,
1037,1,0,0,0,1037,1038,5,46,0,0,1038,1043,3,265,132,0,1039,1040,3,265,132,
0,1040,1041,5,46,0,0,1041,1043,1,0,0,0,1042,1035,1,0,0,0,1042,1039,1,0,0,
0,1043,260,1,0,0,0,1044,1046,5,101,0,0,1045,1047,3,263,131,0,1046,1045,1,
0,0,0,1046,1047,1,0,0,0,1047,1048,1,0,0,0,1048,1055,3,265,132,0,1049,1051,
5,69,0,0,1050,1052,3,263,131,0,1051,1050,1,0,0,0,1051,1052,1,0,0,0,1052,
1053,1,0,0,0,1053,1055,3,265,132,0,1054,1044,1,0,0,0,1054,1049,1,0,0,0,1055,
262,1,0,0,0,1056,1057,7,12,0,0,1057,264,1,0,0,0,1058,1065,3,223,111,0,1059,
1061,5,39,0,0,1060,1059,1,0,0,0,1060,1061,1,0,0,0,1061,1062,1,0,0,0,1062,
1064,3,223,111,0,1063,1060,1,0,0,0,1064,1067,1,0,0,0,1065,1063,1,0,0,0,1065,
1066,1,0,0,0,1066,266,1,0,0,0,1067,1065,1,0,0,0,1068,1069,7,13,0,0,1069,
268,1,0,0,0,1070,1071,5,117,0,0,1071,1074,5,56,0,0,1072,1074,7,0,0,0,1073,
1070,1,0,0,0,1073,1072,1,0,0,0,1074,270,1,0,0,0,1075,1076,3,225,112,0,1076,
1077,3,279,139,0,1077,1088,1,0,0,0,1078,1079,3,227,113,0,1079,1080,3,279,
139,0,1080,1088,1,0,0,0,1081,1082,3,229,114,0,1082,1083,3,279,139,0,1083,
1088,1,0,0,0,1084,1085,3,231,115,0,1085,1086,3,279,139,0,1086,1088,1,0,0,
0,1087,1075,1,0,0,0,1087,1078,1,0,0,0,1087,1081,1,0,0,0,1087,1084,1,0,0,
0,1088,272,1,0,0,0,1089,1091,3,259,129,0,1090,1092,3,261,130,0,1091,1090,
1,0,0,0,1091,1092,1,0,0,0,1092,1093,1,0,0,0,1093,1094,3,279,139,0,1094,1100,
1,0,0,0,1095,1096,3,265,132,0,1096,1097,3,261,130,0,1097,1098,3,279,139,
0,1098,1100,1,0,0,0,1099,1089,1,0,0,0,1099,1095,1,0,0,0,1100,274,1,0,0,0,
1101,1102,3,7,3,0,1102,1103,3,279,139,0,1103,276,1,0,0,0,1104,1105,3,3,1,
0,1105,1106,3,279,139,0,1106,278,1,0,0,0,1107,1108,3,217,108,0,1108,280,
1,0,0,0,1109,1111,7,14,0,0,1110,1109,1,0,0,0,1111,1112,1,0,0,0,1112,1110,
1,0,0,0,1112,1113,1,0,0,0,1113,1114,1,0,0,0,1114,1115,6,140,0,0,1115,282,
1,0,0,0,1116,1118,5,13,0,0,1117,1119,5,10,0,0,1118,1117,1,0,0,0,1118,1119,
1,0,0,0,1119,1122,1,0,0,0,1120,1122,5,10,0,0,1121,1116,1,0,0,0,1121,1120,
1,0,0,0,1122,1123,1,0,0,0,1123,1124,6,141,0,0,1124,284,1,0,0,0,1125,1126,
5,47,0,0,1126,1127,5,42,0,0,1127,1131,1,0,0,0,1128,1130,9,0,0,0,1129,1128,
1,0,0,0,1130,1133,1,0,0,0,1131,1132,1,0,0,0,1131,1129,1,0,0,0,1132,1134,
1,0,0,0,1133,1131,1,0,0,0,1134,1135,5,42,0,0,1135,1136,5,47,0,0,1136,1137,
1,0,0,0,1137,1138,6,142,0,0,1138,286,1,0,0,0,1139,1140,5,47,0,0,1140,1141,
5,47,0,0,1141,1145,1,0,0,0,1142,1144,8,15,0,0,1143,1142,1,0,0,0,1144,1147,
1,0,0,0,1145,1143,1,0,0,0,1145,1146,1,0,0,0,1146,1148,1,0,0,0,1147,1145,
1,0,0,0,1148,1149,6,143,0,0,1149,288,1,0,0,0,1150,1151,5,35,0,0,1151,1152,
5,101,0,0,1152,1153,5,108,0,0,1153,1154,5,115,0,0,1154,1155,5,101,0,0,1155,
1159,1,0,0,0,1156,1158,9,0,0,0,1157,1156,1,0,0,0,1158,1161,1,0,0,0,1159,
1160,1,0,0,0,1159,1157,1,0,0,0,1160,1162,1,0,0,0,1161,1159,1,0,0,0,1162,
1163,5,35,0,0,1163,1164,5,101,0,0,1164,1165,5,110,0,0,1165,1166,5,100,0,
0,1166,1167,5,105,0,0,1167,1168,5,102,0,0,1168,1169,1,0,0,0,1169,1170,6,
144,0,0,1170,290,1,0,0,0,1171,1172,5,35,0,0,1172,1173,5,105,0,0,1173,1192,
5,102,0,0,1174,1175,5,35,0,0,1175,1176,5,105,0,0,1176,1177,5,102,0,0,1177,
1178,5,100,0,0,1178,1179,5,101,0,0,1179,1192,5,102,0,0,1180,1181,5,35,0,
0,1181,1182,5,101,0,0,1182,1183,5,108,0,0,1183,1184,5,115,0,0,1184,1192,
5,101,0,0,1185,1186,5,35,0,0,1186,1187,5,101,0,0,1187,1188,5,110,0,0,1188,
1189,5,100,0,0,1189,1190,5,105,0,0,1190,1192,5,102,0,0,1191,1171,1,0,0,0,
1191,1174,1,0,0,0,1191,1180,1,0,0,0,1191,1185,1,0,0,0,1192,1196,1,0,0,0,
1193,1195,8,15,0,0,1194,1193,1,0,0,0,1195,1198,1,0,0,0,1196,1194,1,0,0,0,
1196,1197,1,0,0,0,1197,1199,1,0,0,0,1198,1196,1,0,0,0,1199,1200,6,145,0,
0,1200,292,1,0,0,0,63,0,295,299,303,307,309,312,318,324,327,332,334,343,
350,355,357,361,367,785,873,875,886,891,896,901,908,912,917,924,928,933,
946,950,954,958,960,970,974,979,1002,1005,1011,1024,1032,1035,1042,1046,
1051,1054,1060,1065,1073,1087,1091,1099,1112,1118,1121,1131,1145,1159,1191,
1196,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class UnrealAngelscriptLexer extends antlr4.Lexer {

    static grammarFileName = "UnrealAngelscriptLexer.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, null, null, null, null, null, "'Cast'", "'UCLASS'", 
                         "'USTRUCT'", "'UPROPERTY'", "'UFUNCTION'", "'import'", 
                         "'from'", "'out'", "'property'", "'ensure'", "'ensureAlways'", 
                         "'check'", "'mixin'", "'int'", "'int8'", "'int16'", 
                         "'int32'", "'int64'", "'uint'", "'uint8'", "'uint16'", 
                         "'uint32'", "'uint64'", "'float'", "'double'", 
                         "'bool'", "'auto'", "'break'", "'case'", "'catch'", 
                         "'char'", "'class'", "'const'", "'continue'", "'default'", 
                         "'do'", "'else'", "'enum'", "'export'", "'false'", 
                         "'final'", "'for'", "'goto'", "'if'", "'namespace'", 
                         "'nullptr'", "'operator'", "'override'", "'private'", 
                         "'protected'", "'public'", "'return'", "'short'", 
                         "'struct'", "'switch'", "'this'", "'true'", "'virtual'", 
                         "'void'", "'while'", "'('", "')'", "'['", "']'", 
                         "'{'", "'}'", "'+'", "'-'", "'*'", "'/'", "'%'", 
                         null, "'&'", "'|'", "'~'", "'!'", "'='", "'<'", 
                         "'>'", "'+='", "'-='", "'*='", "'/='", "'%='", 
                         "'^='", "'&='", "'|='", "'<<='", "'>>='", "'=='", 
                         "'!='", "'<='", "'>='", "'&&'", "'||'", "'++'", 
                         "'--'", "','", "'?'", "':'", "'::'", "';'", "'.'" ];
	static symbolicNames = [ null, "IntegerLiteral", "CharacterLiteral", "FloatingLiteral", 
                          "StringLiteral", "UserDefinedLiteral", "Cast", 
                          "UClass", "UStruct", "UProperty", "UFunction", 
                          "Import", "From", "Out", "Property", "Ensure", 
                          "EnsureAlways", "Check", "Mixin", "Int", "Int8", 
                          "Int16", "Int32", "Int64", "UInt", "UInt8", "UInt16", 
                          "UInt32", "UInt64", "Float", "Double", "Bool", 
                          "Auto", "Break", "Case", "Catch", "Char", "Class", 
                          "Const", "Continue", "Default", "Do", "Else", 
                          "Enum", "Export", "False_", "Final", "For", "Goto", 
                          "If", "Namespace", "Nullptr", "Operator", "Override", 
                          "Private", "Protected", "Public", "Return", "Short", 
                          "Struct", "Switch", "This", "True_", "Virtual", 
                          "Void", "While", "LeftParen", "RightParen", "LeftBracket", 
                          "RightBracket", "LeftBrace", "RightBrace", "Plus", 
                          "Minus", "Star", "Div", "Mod", "Xor", "And", "Or", 
                          "Tilde", "Not", "Assign", "Less", "Greater", "PlusAssign", 
                          "MinusAssign", "StarAssign", "DivAssign", "ModAssign", 
                          "XorAssign", "AndAssign", "OrAssign", "LeftShiftAssign", 
                          "RightShiftAssign", "Equal", "NotEqual", "LessEqual", 
                          "GreaterEqual", "AndAnd", "OrOr", "PlusPlus", 
                          "MinusMinus", "Comma", "Question", "Colon", "Doublecolon", 
                          "Semi", "Dot", "Identifier", "DecimalLiteral", 
                          "OctalLiteral", "HexadecimalLiteral", "BinaryLiteral", 
                          "Integersuffix", "UserDefinedIntegerLiteral", 
                          "UserDefinedFloatingLiteral", "UserDefinedStringLiteral", 
                          "UserDefinedCharacterLiteral", "Whitespace", "Newline", 
                          "BlockComment", "LineComment", "PreprocessorBranchRemoval", 
                          "Preprocessor" ];
	static ruleNames = [ "IntegerLiteral", "CharacterLiteral", "FloatingLiteral", 
                      "StringLiteral", "UserDefinedLiteral", "Cast", "UClass", 
                      "UStruct", "UProperty", "UFunction", "Import", "From", 
                      "Out", "Property", "Ensure", "EnsureAlways", "Check", 
                      "Mixin", "Int", "Int8", "Int16", "Int32", "Int64", 
                      "UInt", "UInt8", "UInt16", "UInt32", "UInt64", "Float", 
                      "Double", "Bool", "Auto", "Break", "Case", "Catch", 
                      "Char", "Class", "Const", "Continue", "Default", "Do", 
                      "Else", "Enum", "Export", "False_", "Final", "For", 
                      "Goto", "If", "Namespace", "Nullptr", "Operator", 
                      "Override", "Private", "Protected", "Public", "Return", 
                      "Short", "Struct", "Switch", "This", "True_", "Virtual", 
                      "Void", "While", "LeftParen", "RightParen", "LeftBracket", 
                      "RightBracket", "LeftBrace", "RightBrace", "Plus", 
                      "Minus", "Star", "Div", "Mod", "Xor", "And", "Or", 
                      "Tilde", "Not", "Assign", "Less", "Greater", "PlusAssign", 
                      "MinusAssign", "StarAssign", "DivAssign", "ModAssign", 
                      "XorAssign", "AndAssign", "OrAssign", "LeftShiftAssign", 
                      "RightShiftAssign", "Equal", "NotEqual", "LessEqual", 
                      "GreaterEqual", "AndAnd", "OrOr", "PlusPlus", "MinusMinus", 
                      "Comma", "Question", "Colon", "Doublecolon", "Semi", 
                      "Dot", "Identifier", "Identifiernondigit", "NONDIGIT", 
                      "DIGIT", "DecimalLiteral", "OctalLiteral", "HexadecimalLiteral", 
                      "BinaryLiteral", "NONZERODIGIT", "OCTALDIGIT", "HEXADECIMALDIGIT", 
                      "BINARYDIGIT", "Integersuffix", "Unsignedsuffix", 
                      "Longsuffix", "Longlongsuffix", "Cchar", "Escapesequence", 
                      "Simpleescapesequence", "Octalescapesequence", "Hexadecimalescapesequence", 
                      "Fractionalconstant", "Exponentpart", "SIGN", "Digitsequence", 
                      "Floatingsuffix", "Encodingprefix", "UserDefinedIntegerLiteral", 
                      "UserDefinedFloatingLiteral", "UserDefinedStringLiteral", 
                      "UserDefinedCharacterLiteral", "Udsuffix", "Whitespace", 
                      "Newline", "BlockComment", "LineComment", "PreprocessorBranchRemoval", 
                      "Preprocessor" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

UnrealAngelscriptLexer.EOF = antlr4.Token.EOF;
UnrealAngelscriptLexer.IntegerLiteral = 1;
UnrealAngelscriptLexer.CharacterLiteral = 2;
UnrealAngelscriptLexer.FloatingLiteral = 3;
UnrealAngelscriptLexer.StringLiteral = 4;
UnrealAngelscriptLexer.UserDefinedLiteral = 5;
UnrealAngelscriptLexer.Cast = 6;
UnrealAngelscriptLexer.UClass = 7;
UnrealAngelscriptLexer.UStruct = 8;
UnrealAngelscriptLexer.UProperty = 9;
UnrealAngelscriptLexer.UFunction = 10;
UnrealAngelscriptLexer.Import = 11;
UnrealAngelscriptLexer.From = 12;
UnrealAngelscriptLexer.Out = 13;
UnrealAngelscriptLexer.Property = 14;
UnrealAngelscriptLexer.Ensure = 15;
UnrealAngelscriptLexer.EnsureAlways = 16;
UnrealAngelscriptLexer.Check = 17;
UnrealAngelscriptLexer.Mixin = 18;
UnrealAngelscriptLexer.Int = 19;
UnrealAngelscriptLexer.Int8 = 20;
UnrealAngelscriptLexer.Int16 = 21;
UnrealAngelscriptLexer.Int32 = 22;
UnrealAngelscriptLexer.Int64 = 23;
UnrealAngelscriptLexer.UInt = 24;
UnrealAngelscriptLexer.UInt8 = 25;
UnrealAngelscriptLexer.UInt16 = 26;
UnrealAngelscriptLexer.UInt32 = 27;
UnrealAngelscriptLexer.UInt64 = 28;
UnrealAngelscriptLexer.Float = 29;
UnrealAngelscriptLexer.Double = 30;
UnrealAngelscriptLexer.Bool = 31;
UnrealAngelscriptLexer.Auto = 32;
UnrealAngelscriptLexer.Break = 33;
UnrealAngelscriptLexer.Case = 34;
UnrealAngelscriptLexer.Catch = 35;
UnrealAngelscriptLexer.Char = 36;
UnrealAngelscriptLexer.Class = 37;
UnrealAngelscriptLexer.Const = 38;
UnrealAngelscriptLexer.Continue = 39;
UnrealAngelscriptLexer.Default = 40;
UnrealAngelscriptLexer.Do = 41;
UnrealAngelscriptLexer.Else = 42;
UnrealAngelscriptLexer.Enum = 43;
UnrealAngelscriptLexer.Export = 44;
UnrealAngelscriptLexer.False_ = 45;
UnrealAngelscriptLexer.Final = 46;
UnrealAngelscriptLexer.For = 47;
UnrealAngelscriptLexer.Goto = 48;
UnrealAngelscriptLexer.If = 49;
UnrealAngelscriptLexer.Namespace = 50;
UnrealAngelscriptLexer.Nullptr = 51;
UnrealAngelscriptLexer.Operator = 52;
UnrealAngelscriptLexer.Override = 53;
UnrealAngelscriptLexer.Private = 54;
UnrealAngelscriptLexer.Protected = 55;
UnrealAngelscriptLexer.Public = 56;
UnrealAngelscriptLexer.Return = 57;
UnrealAngelscriptLexer.Short = 58;
UnrealAngelscriptLexer.Struct = 59;
UnrealAngelscriptLexer.Switch = 60;
UnrealAngelscriptLexer.This = 61;
UnrealAngelscriptLexer.True_ = 62;
UnrealAngelscriptLexer.Virtual = 63;
UnrealAngelscriptLexer.Void = 64;
UnrealAngelscriptLexer.While = 65;
UnrealAngelscriptLexer.LeftParen = 66;
UnrealAngelscriptLexer.RightParen = 67;
UnrealAngelscriptLexer.LeftBracket = 68;
UnrealAngelscriptLexer.RightBracket = 69;
UnrealAngelscriptLexer.LeftBrace = 70;
UnrealAngelscriptLexer.RightBrace = 71;
UnrealAngelscriptLexer.Plus = 72;
UnrealAngelscriptLexer.Minus = 73;
UnrealAngelscriptLexer.Star = 74;
UnrealAngelscriptLexer.Div = 75;
UnrealAngelscriptLexer.Mod = 76;
UnrealAngelscriptLexer.Xor = 77;
UnrealAngelscriptLexer.And = 78;
UnrealAngelscriptLexer.Or = 79;
UnrealAngelscriptLexer.Tilde = 80;
UnrealAngelscriptLexer.Not = 81;
UnrealAngelscriptLexer.Assign = 82;
UnrealAngelscriptLexer.Less = 83;
UnrealAngelscriptLexer.Greater = 84;
UnrealAngelscriptLexer.PlusAssign = 85;
UnrealAngelscriptLexer.MinusAssign = 86;
UnrealAngelscriptLexer.StarAssign = 87;
UnrealAngelscriptLexer.DivAssign = 88;
UnrealAngelscriptLexer.ModAssign = 89;
UnrealAngelscriptLexer.XorAssign = 90;
UnrealAngelscriptLexer.AndAssign = 91;
UnrealAngelscriptLexer.OrAssign = 92;
UnrealAngelscriptLexer.LeftShiftAssign = 93;
UnrealAngelscriptLexer.RightShiftAssign = 94;
UnrealAngelscriptLexer.Equal = 95;
UnrealAngelscriptLexer.NotEqual = 96;
UnrealAngelscriptLexer.LessEqual = 97;
UnrealAngelscriptLexer.GreaterEqual = 98;
UnrealAngelscriptLexer.AndAnd = 99;
UnrealAngelscriptLexer.OrOr = 100;
UnrealAngelscriptLexer.PlusPlus = 101;
UnrealAngelscriptLexer.MinusMinus = 102;
UnrealAngelscriptLexer.Comma = 103;
UnrealAngelscriptLexer.Question = 104;
UnrealAngelscriptLexer.Colon = 105;
UnrealAngelscriptLexer.Doublecolon = 106;
UnrealAngelscriptLexer.Semi = 107;
UnrealAngelscriptLexer.Dot = 108;
UnrealAngelscriptLexer.Identifier = 109;
UnrealAngelscriptLexer.DecimalLiteral = 110;
UnrealAngelscriptLexer.OctalLiteral = 111;
UnrealAngelscriptLexer.HexadecimalLiteral = 112;
UnrealAngelscriptLexer.BinaryLiteral = 113;
UnrealAngelscriptLexer.Integersuffix = 114;
UnrealAngelscriptLexer.UserDefinedIntegerLiteral = 115;
UnrealAngelscriptLexer.UserDefinedFloatingLiteral = 116;
UnrealAngelscriptLexer.UserDefinedStringLiteral = 117;
UnrealAngelscriptLexer.UserDefinedCharacterLiteral = 118;
UnrealAngelscriptLexer.Whitespace = 119;
UnrealAngelscriptLexer.Newline = 120;
UnrealAngelscriptLexer.BlockComment = 121;
UnrealAngelscriptLexer.LineComment = 122;
UnrealAngelscriptLexer.PreprocessorBranchRemoval = 123;
UnrealAngelscriptLexer.Preprocessor = 124;



