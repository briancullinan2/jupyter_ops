// Generated from Resources/Parsers/pascal/pascal.g4 by ANTLR 4.10.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,80,669,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,
2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,
56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,
70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,
2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,84,2,
85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,7,91,2,92,
7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,98,7,98,2,99,7,
99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,7,104,2,105,7,105,
2,106,7,106,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,
1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,
15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,
1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,
27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,
1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,
32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,35,1,35,1,35,
1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,
38,1,38,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,
1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,44,1,
44,1,44,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,
1,46,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,50,1,
50,1,50,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,53,1,53,1,53,
1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,
54,1,55,1,55,1,55,1,55,1,55,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,57,1,57,
1,57,1,57,1,57,1,57,1,57,1,58,1,58,1,58,1,58,1,59,1,59,1,59,1,59,1,59,1,
60,1,60,1,60,1,61,1,61,1,61,1,61,1,61,1,62,1,62,1,62,1,62,1,62,1,62,1,63,
1,63,1,63,1,63,1,64,1,64,1,64,1,64,1,64,1,64,1,65,1,65,1,65,1,65,1,65,1,
66,1,66,1,67,1,67,1,68,1,68,1,69,1,69,1,70,1,70,1,70,1,71,1,71,1,72,1,72,
1,73,1,73,1,74,1,74,1,75,1,75,1,75,1,76,1,76,1,77,1,77,1,77,1,78,1,78,1,
78,1,79,1,79,1,80,1,80,1,81,1,81,1,82,1,82,1,83,1,83,1,83,1,84,1,84,1,85,
1,85,1,85,1,86,1,86,1,87,1,87,1,88,1,88,1,89,1,89,1,89,1,90,1,90,1,91,1,
91,1,92,1,92,1,92,1,92,1,92,1,93,1,93,1,93,1,93,1,93,1,93,1,93,1,93,1,93,
1,93,1,94,1,94,1,94,1,94,1,94,1,95,1,95,1,95,1,95,1,95,1,95,1,95,1,96,1,
96,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,97,
1,97,1,97,1,97,1,97,1,98,1,98,1,98,1,98,1,98,1,98,1,99,1,99,1,99,1,99,1,
100,1,100,1,100,1,100,5,100,598,8,100,10,100,12,100,601,9,100,1,100,1,100,
1,100,1,100,1,100,1,101,1,101,5,101,610,8,101,10,101,12,101,613,9,101,1,
101,1,101,1,101,1,101,1,102,1,102,5,102,621,8,102,10,102,12,102,624,9,102,
1,103,1,103,1,103,1,103,5,103,630,8,103,10,103,12,103,633,9,103,1,103,1,
103,1,104,4,104,638,8,104,11,104,12,104,639,1,105,4,105,643,8,105,11,105,
12,105,644,1,105,1,105,4,105,649,8,105,11,105,12,105,650,1,105,3,105,654,
8,105,3,105,656,8,105,1,105,3,105,659,8,105,1,106,1,106,3,106,663,8,106,
1,106,4,106,666,8,106,11,106,12,106,667,2,599,611,0,107,1,0,3,0,5,0,7,0,
9,0,11,0,13,0,15,0,17,0,19,0,21,0,23,0,25,0,27,0,29,0,31,0,33,0,35,0,37,
0,39,0,41,0,43,0,45,0,47,0,49,0,51,0,53,1,55,2,57,3,59,4,61,5,63,6,65,7,
67,8,69,9,71,10,73,11,75,12,77,13,79,14,81,15,83,16,85,17,87,18,89,19,91,
20,93,21,95,22,97,23,99,24,101,25,103,26,105,27,107,28,109,29,111,30,113,
31,115,32,117,33,119,34,121,35,123,36,125,37,127,38,129,39,131,40,133,41,
135,42,137,43,139,44,141,45,143,46,145,47,147,48,149,49,151,50,153,51,155,
52,157,53,159,54,161,55,163,56,165,57,167,58,169,59,171,60,173,61,175,62,
177,63,179,64,181,65,183,66,185,67,187,68,189,69,191,70,193,71,195,72,197,
73,199,74,201,75,203,76,205,77,207,78,209,79,211,80,213,0,1,0,31,2,0,65,
65,97,97,2,0,66,66,98,98,2,0,67,67,99,99,2,0,68,68,100,100,2,0,69,69,101,
101,2,0,70,70,102,102,2,0,71,71,103,103,2,0,72,72,104,104,2,0,73,73,105,
105,2,0,74,74,106,106,2,0,75,75,107,107,2,0,76,76,108,108,2,0,77,77,109,
109,2,0,78,78,110,110,2,0,79,79,111,111,2,0,80,80,112,112,2,0,81,81,113,
113,2,0,82,82,114,114,2,0,83,83,115,115,2,0,84,84,116,116,2,0,85,85,117,
117,2,0,86,86,118,118,2,0,87,87,119,119,2,0,88,88,120,120,2,0,89,89,121,
121,2,0,90,90,122,122,3,0,9,10,13,13,32,32,2,0,65,90,97,122,4,0,48,57,65,
90,95,95,97,122,1,0,39,39,2,0,43,43,45,45,654,0,53,1,0,0,0,0,55,1,0,0,0,
0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,
0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,
79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,
0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,
1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,
0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,
0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,
0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,
0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,
153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,
1,0,0,0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,173,1,
0,0,0,0,175,1,0,0,0,0,177,1,0,0,0,0,179,1,0,0,0,0,181,1,0,0,0,0,183,1,0,
0,0,0,185,1,0,0,0,0,187,1,0,0,0,0,189,1,0,0,0,0,191,1,0,0,0,0,193,1,0,0,
0,0,195,1,0,0,0,0,197,1,0,0,0,0,199,1,0,0,0,0,201,1,0,0,0,0,203,1,0,0,0,
0,205,1,0,0,0,0,207,1,0,0,0,0,209,1,0,0,0,0,211,1,0,0,0,1,215,1,0,0,0,3,
217,1,0,0,0,5,219,1,0,0,0,7,221,1,0,0,0,9,223,1,0,0,0,11,225,1,0,0,0,13,
227,1,0,0,0,15,229,1,0,0,0,17,231,1,0,0,0,19,233,1,0,0,0,21,235,1,0,0,0,
23,237,1,0,0,0,25,239,1,0,0,0,27,241,1,0,0,0,29,243,1,0,0,0,31,245,1,0,0,
0,33,247,1,0,0,0,35,249,1,0,0,0,37,251,1,0,0,0,39,253,1,0,0,0,41,255,1,0,
0,0,43,257,1,0,0,0,45,259,1,0,0,0,47,261,1,0,0,0,49,263,1,0,0,0,51,265,1,
0,0,0,53,267,1,0,0,0,55,271,1,0,0,0,57,277,1,0,0,0,59,283,1,0,0,0,61,291,
1,0,0,0,63,296,1,0,0,0,65,301,1,0,0,0,67,305,1,0,0,0,69,311,1,0,0,0,71,315,
1,0,0,0,73,318,1,0,0,0,75,325,1,0,0,0,77,330,1,0,0,0,79,334,1,0,0,0,81,339,
1,0,0,0,83,343,1,0,0,0,85,352,1,0,0,0,87,357,1,0,0,0,89,360,1,0,0,0,91,363,
1,0,0,0,93,371,1,0,0,0,95,377,1,0,0,0,97,381,1,0,0,0,99,385,1,0,0,0,101,
389,1,0,0,0,103,392,1,0,0,0,105,395,1,0,0,0,107,402,1,0,0,0,109,412,1,0,
0,0,111,420,1,0,0,0,113,425,1,0,0,0,115,432,1,0,0,0,117,439,1,0,0,0,119,
443,1,0,0,0,121,448,1,0,0,0,123,451,1,0,0,0,125,456,1,0,0,0,127,462,1,0,
0,0,129,466,1,0,0,0,131,472,1,0,0,0,133,477,1,0,0,0,135,479,1,0,0,0,137,
481,1,0,0,0,139,483,1,0,0,0,141,485,1,0,0,0,143,488,1,0,0,0,145,490,1,0,
0,0,147,492,1,0,0,0,149,494,1,0,0,0,151,496,1,0,0,0,153,499,1,0,0,0,155,
501,1,0,0,0,157,504,1,0,0,0,159,507,1,0,0,0,161,509,1,0,0,0,163,511,1,0,
0,0,165,513,1,0,0,0,167,515,1,0,0,0,169,518,1,0,0,0,171,520,1,0,0,0,173,
523,1,0,0,0,175,525,1,0,0,0,177,527,1,0,0,0,179,529,1,0,0,0,181,532,1,0,
0,0,183,534,1,0,0,0,185,536,1,0,0,0,187,541,1,0,0,0,189,551,1,0,0,0,191,
556,1,0,0,0,193,563,1,0,0,0,195,578,1,0,0,0,197,583,1,0,0,0,199,589,1,0,
0,0,201,593,1,0,0,0,203,607,1,0,0,0,205,618,1,0,0,0,207,625,1,0,0,0,209,
637,1,0,0,0,211,642,1,0,0,0,213,660,1,0,0,0,215,216,7,0,0,0,216,2,1,0,0,
0,217,218,7,1,0,0,218,4,1,0,0,0,219,220,7,2,0,0,220,6,1,0,0,0,221,222,7,
3,0,0,222,8,1,0,0,0,223,224,7,4,0,0,224,10,1,0,0,0,225,226,7,5,0,0,226,12,
1,0,0,0,227,228,7,6,0,0,228,14,1,0,0,0,229,230,7,7,0,0,230,16,1,0,0,0,231,
232,7,8,0,0,232,18,1,0,0,0,233,234,7,9,0,0,234,20,1,0,0,0,235,236,7,10,0,
0,236,22,1,0,0,0,237,238,7,11,0,0,238,24,1,0,0,0,239,240,7,12,0,0,240,26,
1,0,0,0,241,242,7,13,0,0,242,28,1,0,0,0,243,244,7,14,0,0,244,30,1,0,0,0,
245,246,7,15,0,0,246,32,1,0,0,0,247,248,7,16,0,0,248,34,1,0,0,0,249,250,
7,17,0,0,250,36,1,0,0,0,251,252,7,18,0,0,252,38,1,0,0,0,253,254,7,19,0,0,
254,40,1,0,0,0,255,256,7,20,0,0,256,42,1,0,0,0,257,258,7,21,0,0,258,44,1,
0,0,0,259,260,7,22,0,0,260,46,1,0,0,0,261,262,7,23,0,0,262,48,1,0,0,0,263,
264,7,24,0,0,264,50,1,0,0,0,265,266,7,25,0,0,266,52,1,0,0,0,267,268,3,1,
0,0,268,269,3,27,13,0,269,270,3,7,3,0,270,54,1,0,0,0,271,272,3,1,0,0,272,
273,3,35,17,0,273,274,3,35,17,0,274,275,3,1,0,0,275,276,3,49,24,0,276,56,
1,0,0,0,277,278,3,3,1,0,278,279,3,9,4,0,279,280,3,13,6,0,280,281,3,17,8,
0,281,282,3,27,13,0,282,58,1,0,0,0,283,284,3,3,1,0,284,285,3,29,14,0,285,
286,3,29,14,0,286,287,3,23,11,0,287,288,3,9,4,0,288,289,3,1,0,0,289,290,
3,27,13,0,290,60,1,0,0,0,291,292,3,5,2,0,292,293,3,1,0,0,293,294,3,37,18,
0,294,295,3,9,4,0,295,62,1,0,0,0,296,297,3,5,2,0,297,298,3,15,7,0,298,299,
3,1,0,0,299,300,3,35,17,0,300,64,1,0,0,0,301,302,3,5,2,0,302,303,3,15,7,
0,303,304,3,35,17,0,304,66,1,0,0,0,305,306,3,5,2,0,306,307,3,29,14,0,307,
308,3,27,13,0,308,309,3,37,18,0,309,310,3,39,19,0,310,68,1,0,0,0,311,312,
3,7,3,0,312,313,3,17,8,0,313,314,3,43,21,0,314,70,1,0,0,0,315,316,3,7,3,
0,316,317,3,29,14,0,317,72,1,0,0,0,318,319,3,7,3,0,319,320,3,29,14,0,320,
321,3,45,22,0,321,322,3,27,13,0,322,323,3,39,19,0,323,324,3,29,14,0,324,
74,1,0,0,0,325,326,3,9,4,0,326,327,3,23,11,0,327,328,3,37,18,0,328,329,3,
9,4,0,329,76,1,0,0,0,330,331,3,9,4,0,331,332,3,27,13,0,332,333,3,7,3,0,333,
78,1,0,0,0,334,335,3,11,5,0,335,336,3,17,8,0,336,337,3,23,11,0,337,338,3,
9,4,0,338,80,1,0,0,0,339,340,3,11,5,0,340,341,3,29,14,0,341,342,3,35,17,
0,342,82,1,0,0,0,343,344,3,11,5,0,344,345,3,41,20,0,345,346,3,27,13,0,346,
347,3,5,2,0,347,348,3,39,19,0,348,349,3,17,8,0,349,350,3,29,14,0,350,351,
3,27,13,0,351,84,1,0,0,0,352,353,3,13,6,0,353,354,3,29,14,0,354,355,3,39,
19,0,355,356,3,29,14,0,356,86,1,0,0,0,357,358,3,17,8,0,358,359,3,11,5,0,
359,88,1,0,0,0,360,361,3,17,8,0,361,362,3,27,13,0,362,90,1,0,0,0,363,364,
3,17,8,0,364,365,3,27,13,0,365,366,3,39,19,0,366,367,3,9,4,0,367,368,3,13,
6,0,368,369,3,9,4,0,369,370,3,35,17,0,370,92,1,0,0,0,371,372,3,23,11,0,372,
373,3,1,0,0,373,374,3,3,1,0,374,375,3,9,4,0,375,376,3,23,11,0,376,94,1,0,
0,0,377,378,3,25,12,0,378,379,3,29,14,0,379,380,3,7,3,0,380,96,1,0,0,0,381,
382,3,27,13,0,382,383,3,17,8,0,383,384,3,23,11,0,384,98,1,0,0,0,385,386,
3,27,13,0,386,387,3,29,14,0,387,388,3,39,19,0,388,100,1,0,0,0,389,390,3,
29,14,0,390,391,3,11,5,0,391,102,1,0,0,0,392,393,3,29,14,0,393,394,3,35,
17,0,394,104,1,0,0,0,395,396,3,31,15,0,396,397,3,1,0,0,397,398,3,5,2,0,398,
399,3,21,10,0,399,400,3,9,4,0,400,401,3,7,3,0,401,106,1,0,0,0,402,403,3,
31,15,0,403,404,3,35,17,0,404,405,3,29,14,0,405,406,3,5,2,0,406,407,3,9,
4,0,407,408,3,7,3,0,408,409,3,41,20,0,409,410,3,35,17,0,410,411,3,9,4,0,
411,108,1,0,0,0,412,413,3,31,15,0,413,414,3,35,17,0,414,415,3,29,14,0,415,
416,3,13,6,0,416,417,3,35,17,0,417,418,3,1,0,0,418,419,3,25,12,0,419,110,
1,0,0,0,420,421,3,35,17,0,421,422,3,9,4,0,422,423,3,1,0,0,423,424,3,23,11,
0,424,112,1,0,0,0,425,426,3,35,17,0,426,427,3,9,4,0,427,428,3,5,2,0,428,
429,3,29,14,0,429,430,3,35,17,0,430,431,3,7,3,0,431,114,1,0,0,0,432,433,
3,35,17,0,433,434,3,9,4,0,434,435,3,31,15,0,435,436,3,9,4,0,436,437,3,1,
0,0,437,438,3,39,19,0,438,116,1,0,0,0,439,440,3,37,18,0,440,441,3,9,4,0,
441,442,3,39,19,0,442,118,1,0,0,0,443,444,3,39,19,0,444,445,3,15,7,0,445,
446,3,9,4,0,446,447,3,27,13,0,447,120,1,0,0,0,448,449,3,39,19,0,449,450,
3,29,14,0,450,122,1,0,0,0,451,452,3,39,19,0,452,453,3,49,24,0,453,454,3,
31,15,0,454,455,3,9,4,0,455,124,1,0,0,0,456,457,3,41,20,0,457,458,3,27,13,
0,458,459,3,39,19,0,459,460,3,17,8,0,460,461,3,23,11,0,461,126,1,0,0,0,462,
463,3,43,21,0,463,464,3,1,0,0,464,465,3,35,17,0,465,128,1,0,0,0,466,467,
3,45,22,0,467,468,3,15,7,0,468,469,3,17,8,0,469,470,3,23,11,0,470,471,3,
9,4,0,471,130,1,0,0,0,472,473,3,45,22,0,473,474,3,17,8,0,474,475,3,39,19,
0,475,476,3,15,7,0,476,132,1,0,0,0,477,478,5,43,0,0,478,134,1,0,0,0,479,
480,5,45,0,0,480,136,1,0,0,0,481,482,5,42,0,0,482,138,1,0,0,0,483,484,5,
47,0,0,484,140,1,0,0,0,485,486,5,58,0,0,486,487,5,61,0,0,487,142,1,0,0,0,
488,489,5,44,0,0,489,144,1,0,0,0,490,491,5,59,0,0,491,146,1,0,0,0,492,493,
5,58,0,0,493,148,1,0,0,0,494,495,5,61,0,0,495,150,1,0,0,0,496,497,5,60,0,
0,497,498,5,62,0,0,498,152,1,0,0,0,499,500,5,60,0,0,500,154,1,0,0,0,501,
502,5,60,0,0,502,503,5,61,0,0,503,156,1,0,0,0,504,505,5,62,0,0,505,506,5,
61,0,0,506,158,1,0,0,0,507,508,5,62,0,0,508,160,1,0,0,0,509,510,5,40,0,0,
510,162,1,0,0,0,511,512,5,41,0,0,512,164,1,0,0,0,513,514,5,91,0,0,514,166,
1,0,0,0,515,516,5,40,0,0,516,517,5,46,0,0,517,168,1,0,0,0,518,519,5,93,0,
0,519,170,1,0,0,0,520,521,5,46,0,0,521,522,5,41,0,0,522,172,1,0,0,0,523,
524,5,94,0,0,524,174,1,0,0,0,525,526,5,64,0,0,526,176,1,0,0,0,527,528,5,
46,0,0,528,178,1,0,0,0,529,530,5,46,0,0,530,531,5,46,0,0,531,180,1,0,0,0,
532,533,5,123,0,0,533,182,1,0,0,0,534,535,5,125,0,0,535,184,1,0,0,0,536,
537,3,41,20,0,537,538,3,27,13,0,538,539,3,17,8,0,539,540,3,39,19,0,540,186,
1,0,0,0,541,542,3,17,8,0,542,543,3,27,13,0,543,544,3,39,19,0,544,545,3,9,
4,0,545,546,3,35,17,0,546,547,3,11,5,0,547,548,3,1,0,0,548,549,3,5,2,0,549,
550,3,9,4,0,550,188,1,0,0,0,551,552,3,41,20,0,552,553,3,37,18,0,553,554,
3,9,4,0,554,555,3,37,18,0,555,190,1,0,0,0,556,557,3,37,18,0,557,558,3,39,
19,0,558,559,3,35,17,0,559,560,3,17,8,0,560,561,3,27,13,0,561,562,3,13,6,
0,562,192,1,0,0,0,563,564,3,17,8,0,564,565,3,25,12,0,565,566,3,31,15,0,566,
567,3,23,11,0,567,568,3,9,4,0,568,569,3,25,12,0,569,570,3,9,4,0,570,571,
3,27,13,0,571,572,3,39,19,0,572,573,3,1,0,0,573,574,3,39,19,0,574,575,3,
17,8,0,575,576,3,29,14,0,576,577,3,27,13,0,577,194,1,0,0,0,578,579,3,39,
19,0,579,580,3,35,17,0,580,581,3,41,20,0,581,582,3,9,4,0,582,196,1,0,0,0,
583,584,3,11,5,0,584,585,3,1,0,0,585,586,3,23,11,0,586,587,3,37,18,0,587,
588,3,9,4,0,588,198,1,0,0,0,589,590,7,26,0,0,590,591,1,0,0,0,591,592,6,99,
0,0,592,200,1,0,0,0,593,594,5,40,0,0,594,595,5,42,0,0,595,599,1,0,0,0,596,
598,9,0,0,0,597,596,1,0,0,0,598,601,1,0,0,0,599,600,1,0,0,0,599,597,1,0,
0,0,600,602,1,0,0,0,601,599,1,0,0,0,602,603,5,42,0,0,603,604,5,41,0,0,604,
605,1,0,0,0,605,606,6,100,0,0,606,202,1,0,0,0,607,611,5,123,0,0,608,610,
9,0,0,0,609,608,1,0,0,0,610,613,1,0,0,0,611,612,1,0,0,0,611,609,1,0,0,0,
612,614,1,0,0,0,613,611,1,0,0,0,614,615,5,125,0,0,615,616,1,0,0,0,616,617,
6,101,0,0,617,204,1,0,0,0,618,622,7,27,0,0,619,621,7,28,0,0,620,619,1,0,
0,0,621,624,1,0,0,0,622,620,1,0,0,0,622,623,1,0,0,0,623,206,1,0,0,0,624,
622,1,0,0,0,625,631,5,39,0,0,626,627,5,39,0,0,627,630,5,39,0,0,628,630,8,
29,0,0,629,626,1,0,0,0,629,628,1,0,0,0,630,633,1,0,0,0,631,629,1,0,0,0,631,
632,1,0,0,0,632,634,1,0,0,0,633,631,1,0,0,0,634,635,5,39,0,0,635,208,1,0,
0,0,636,638,2,48,57,0,637,636,1,0,0,0,638,639,1,0,0,0,639,637,1,0,0,0,639,
640,1,0,0,0,640,210,1,0,0,0,641,643,2,48,57,0,642,641,1,0,0,0,643,644,1,
0,0,0,644,642,1,0,0,0,644,645,1,0,0,0,645,658,1,0,0,0,646,648,5,46,0,0,647,
649,2,48,57,0,648,647,1,0,0,0,649,650,1,0,0,0,650,648,1,0,0,0,650,651,1,
0,0,0,651,653,1,0,0,0,652,654,3,213,106,0,653,652,1,0,0,0,653,654,1,0,0,
0,654,656,1,0,0,0,655,646,1,0,0,0,655,656,1,0,0,0,656,659,1,0,0,0,657,659,
3,213,106,0,658,655,1,0,0,0,658,657,1,0,0,0,659,212,1,0,0,0,660,662,5,101,
0,0,661,663,7,30,0,0,662,661,1,0,0,0,662,663,1,0,0,0,663,665,1,0,0,0,664,
666,2,48,57,0,665,664,1,0,0,0,666,667,1,0,0,0,667,665,1,0,0,0,667,668,1,
0,0,0,668,214,1,0,0,0,14,0,599,611,622,629,631,639,644,650,653,655,658,662,
667,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class pascalLexer extends antlr4.Lexer {

    static grammarFileName = "pascal.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, null, null, null, null, null, null, null, 
                         null, null, null, null, null, null, null, null, 
                         null, null, null, null, null, null, null, null, 
                         null, null, null, null, null, null, null, null, 
                         null, null, null, null, null, null, null, null, 
                         null, "'+'", "'-'", "'*'", "'/'", "':='", "','", 
                         "';'", "':'", "'='", "'<>'", "'<'", "'<='", "'>='", 
                         "'>'", "'('", "')'", "'['", "'(.'", "']'", "'.)'", 
                         "'^'", "'@'", "'.'", "'..'", "'{'", "'}'" ];
	static symbolicNames = [ null, "AND", "ARRAY", "BEGIN", "BOOLEAN", "CASE", 
                          "CHAR", "CHR", "CONST", "DIV", "DO", "DOWNTO", 
                          "ELSE", "END", "FILE", "FOR", "FUNCTION", "GOTO", 
                          "IF", "IN", "INTEGER", "LABEL", "MOD", "NIL", 
                          "NOT", "OF", "OR", "PACKED", "PROCEDURE", "PROGRAM", 
                          "REAL", "RECORD", "REPEAT", "SET", "THEN", "TO", 
                          "TYPE", "UNTIL", "VAR", "WHILE", "WITH", "PLUS", 
                          "MINUS", "STAR", "SLASH", "ASSIGN", "COMMA", "SEMI", 
                          "COLON", "EQUAL", "NOT_EQUAL", "LT", "LE", "GE", 
                          "GT", "LPAREN", "RPAREN", "LBRACK", "LBRACK2", 
                          "RBRACK", "RBRACK2", "POINTER", "AT", "DOT", "DOTDOT", 
                          "LCURLY", "RCURLY", "UNIT", "INTERFACE", "USES", 
                          "STRING", "IMPLEMENTATION", "TRUE", "FALSE", "WS", 
                          "COMMENT_1", "COMMENT_2", "IDENT", "STRING_LITERAL", 
                          "NUM_INT", "NUM_REAL" ];
	static ruleNames = [ "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", 
                      "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", 
                      "U", "V", "W", "X", "Y", "Z", "AND", "ARRAY", "BEGIN", 
                      "BOOLEAN", "CASE", "CHAR", "CHR", "CONST", "DIV", 
                      "DO", "DOWNTO", "ELSE", "END", "FILE", "FOR", "FUNCTION", 
                      "GOTO", "IF", "IN", "INTEGER", "LABEL", "MOD", "NIL", 
                      "NOT", "OF", "OR", "PACKED", "PROCEDURE", "PROGRAM", 
                      "REAL", "RECORD", "REPEAT", "SET", "THEN", "TO", "TYPE", 
                      "UNTIL", "VAR", "WHILE", "WITH", "PLUS", "MINUS", 
                      "STAR", "SLASH", "ASSIGN", "COMMA", "SEMI", "COLON", 
                      "EQUAL", "NOT_EQUAL", "LT", "LE", "GE", "GT", "LPAREN", 
                      "RPAREN", "LBRACK", "LBRACK2", "RBRACK", "RBRACK2", 
                      "POINTER", "AT", "DOT", "DOTDOT", "LCURLY", "RCURLY", 
                      "UNIT", "INTERFACE", "USES", "STRING", "IMPLEMENTATION", 
                      "TRUE", "FALSE", "WS", "COMMENT_1", "COMMENT_2", "IDENT", 
                      "STRING_LITERAL", "NUM_INT", "NUM_REAL", "EXPONENT" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

pascalLexer.EOF = antlr4.Token.EOF;
pascalLexer.AND = 1;
pascalLexer.ARRAY = 2;
pascalLexer.BEGIN = 3;
pascalLexer.BOOLEAN = 4;
pascalLexer.CASE = 5;
pascalLexer.CHAR = 6;
pascalLexer.CHR = 7;
pascalLexer.CONST = 8;
pascalLexer.DIV = 9;
pascalLexer.DO = 10;
pascalLexer.DOWNTO = 11;
pascalLexer.ELSE = 12;
pascalLexer.END = 13;
pascalLexer.FILE = 14;
pascalLexer.FOR = 15;
pascalLexer.FUNCTION = 16;
pascalLexer.GOTO = 17;
pascalLexer.IF = 18;
pascalLexer.IN = 19;
pascalLexer.INTEGER = 20;
pascalLexer.LABEL = 21;
pascalLexer.MOD = 22;
pascalLexer.NIL = 23;
pascalLexer.NOT = 24;
pascalLexer.OF = 25;
pascalLexer.OR = 26;
pascalLexer.PACKED = 27;
pascalLexer.PROCEDURE = 28;
pascalLexer.PROGRAM = 29;
pascalLexer.REAL = 30;
pascalLexer.RECORD = 31;
pascalLexer.REPEAT = 32;
pascalLexer.SET = 33;
pascalLexer.THEN = 34;
pascalLexer.TO = 35;
pascalLexer.TYPE = 36;
pascalLexer.UNTIL = 37;
pascalLexer.VAR = 38;
pascalLexer.WHILE = 39;
pascalLexer.WITH = 40;
pascalLexer.PLUS = 41;
pascalLexer.MINUS = 42;
pascalLexer.STAR = 43;
pascalLexer.SLASH = 44;
pascalLexer.ASSIGN = 45;
pascalLexer.COMMA = 46;
pascalLexer.SEMI = 47;
pascalLexer.COLON = 48;
pascalLexer.EQUAL = 49;
pascalLexer.NOT_EQUAL = 50;
pascalLexer.LT = 51;
pascalLexer.LE = 52;
pascalLexer.GE = 53;
pascalLexer.GT = 54;
pascalLexer.LPAREN = 55;
pascalLexer.RPAREN = 56;
pascalLexer.LBRACK = 57;
pascalLexer.LBRACK2 = 58;
pascalLexer.RBRACK = 59;
pascalLexer.RBRACK2 = 60;
pascalLexer.POINTER = 61;
pascalLexer.AT = 62;
pascalLexer.DOT = 63;
pascalLexer.DOTDOT = 64;
pascalLexer.LCURLY = 65;
pascalLexer.RCURLY = 66;
pascalLexer.UNIT = 67;
pascalLexer.INTERFACE = 68;
pascalLexer.USES = 69;
pascalLexer.STRING = 70;
pascalLexer.IMPLEMENTATION = 71;
pascalLexer.TRUE = 72;
pascalLexer.FALSE = 73;
pascalLexer.WS = 74;
pascalLexer.COMMENT_1 = 75;
pascalLexer.COMMENT_2 = 76;
pascalLexer.IDENT = 77;
pascalLexer.STRING_LITERAL = 78;
pascalLexer.NUM_INT = 79;
pascalLexer.NUM_REAL = 80;



