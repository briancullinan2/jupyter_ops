// Generated from ./atl/ATL.g4 by ANTLR 4.10.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,87,771,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,
2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,
56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,
70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,
2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,84,2,
85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,7,91,2,92,
7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,98,7,98,2,99,7,
99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,1,0,1,0,1,0,1,0,1,0,1,
0,1,0,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,
4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,
7,1,7,1,7,1,7,1,7,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,
10,1,10,1,11,1,11,1,11,1,11,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,
1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,
17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,
1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,22,1,22,1,
22,1,22,1,22,1,22,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,
1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,
27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,
1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,
31,1,32,1,32,1,32,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,
1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,
39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,40,
1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,43,1,
43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,
1,46,1,46,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,
49,1,49,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,
1,50,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,
53,1,53,1,53,1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,
1,55,1,55,1,55,1,55,1,55,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,57,1,
57,1,57,1,57,1,57,1,57,1,57,1,58,1,58,1,59,1,59,1,59,1,60,1,60,1,60,1,60,
1,61,1,61,1,62,1,62,1,63,1,63,1,64,1,64,1,64,1,64,1,65,1,65,1,65,1,65,1,
66,1,66,1,67,1,67,1,68,1,68,1,69,1,69,1,69,1,70,1,70,1,70,1,71,1,71,1,71,
1,72,1,72,1,72,1,72,1,73,1,73,1,73,1,74,1,74,1,74,1,74,1,75,1,75,1,75,1,
75,1,75,1,75,1,75,1,75,1,76,1,76,1,76,1,76,1,76,1,76,1,76,1,76,1,76,1,76,
1,77,1,77,1,77,1,77,1,77,1,77,1,77,1,77,1,78,1,78,1,78,1,78,1,78,1,78,1,
78,1,79,1,79,1,79,1,79,1,79,1,79,1,79,1,79,1,79,1,79,1,79,1,80,1,80,3,80,
630,8,80,1,80,1,80,1,80,3,80,635,8,80,1,80,3,80,638,8,80,1,81,4,81,641,8,
81,11,81,12,81,642,1,82,1,82,1,82,3,82,648,8,82,1,83,4,83,651,8,83,11,83,
12,83,652,1,84,1,84,1,84,3,84,658,8,84,1,85,1,85,1,86,1,86,1,87,1,87,1,87,
3,87,667,8,87,3,87,669,8,87,1,88,1,88,5,88,673,8,88,10,88,12,88,676,9,88,
1,89,1,89,3,89,680,8,89,1,90,1,90,1,91,1,91,1,92,1,92,1,92,3,92,689,8,92,
1,92,3,92,692,8,92,1,92,3,92,695,8,92,1,92,1,92,1,92,3,92,700,8,92,1,92,
3,92,703,8,92,1,92,1,92,1,92,3,92,708,8,92,1,92,1,92,1,92,3,92,713,8,92,
1,93,1,93,1,93,1,94,1,94,1,95,3,95,721,8,95,1,95,1,95,1,96,1,96,1,97,1,97,
1,98,1,98,5,98,731,8,98,10,98,12,98,734,9,98,1,99,1,99,1,100,1,100,1,101,
4,101,741,8,101,11,101,12,101,742,1,101,1,101,1,102,1,102,1,102,1,102,5,
102,751,8,102,10,102,12,102,754,9,102,1,102,1,102,1,102,1,102,1,102,1,103,
1,103,1,103,1,103,5,103,765,8,103,10,103,12,103,768,9,103,1,103,1,103,1,
752,0,104,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,
27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,
51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,
75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,
99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,
60,121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,69,139,70,
141,71,143,72,145,73,147,74,149,75,151,76,153,77,155,78,157,79,159,80,161,
81,163,0,165,0,167,0,169,0,171,82,173,0,175,0,177,0,179,0,181,0,183,83,185,
0,187,0,189,0,191,0,193,0,195,0,197,84,199,0,201,0,203,85,205,86,207,87,
1,0,11,2,0,34,34,92,92,8,0,34,34,39,39,92,92,98,98,102,102,110,110,114,114,
116,116,2,0,39,39,92,92,1,0,49,57,2,0,69,69,101,101,2,0,43,43,45,45,4,0,
68,68,70,70,100,100,102,102,4,0,36,36,65,90,95,95,97,122,5,0,36,36,48,57,
65,90,95,95,97,122,3,0,9,10,12,13,32,32,2,0,10,10,13,13,778,0,1,1,0,0,0,
0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,
0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,
1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,
0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,
0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,
59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,
0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,
1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,
0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,
1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,
0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,
0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,
0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,
0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,
155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,171,1,0,0,0,0,183,
1,0,0,0,0,197,1,0,0,0,0,203,1,0,0,0,0,205,1,0,0,0,0,207,1,0,0,0,1,209,1,
0,0,0,3,216,1,0,0,0,5,218,1,0,0,0,7,225,1,0,0,0,9,227,1,0,0,0,11,236,1,0,
0,0,13,241,1,0,0,0,15,249,1,0,0,0,17,255,1,0,0,0,19,257,1,0,0,0,21,262,1,
0,0,0,23,269,1,0,0,0,25,273,1,0,0,0,27,275,1,0,0,0,29,283,1,0,0,0,31,285,
1,0,0,0,33,287,1,0,0,0,35,294,1,0,0,0,37,299,1,0,0,0,39,308,1,0,0,0,41,313,
1,0,0,0,43,321,1,0,0,0,45,323,1,0,0,0,47,329,1,0,0,0,49,331,1,0,0,0,51,342,
1,0,0,0,53,351,1,0,0,0,55,354,1,0,0,0,57,357,1,0,0,0,59,364,1,0,0,0,61,373,
1,0,0,0,63,381,1,0,0,0,65,384,1,0,0,0,67,387,1,0,0,0,69,390,1,0,0,0,71,395,
1,0,0,0,73,399,1,0,0,0,75,401,1,0,0,0,77,403,1,0,0,0,79,411,1,0,0,0,81,424,
1,0,0,0,83,429,1,0,0,0,85,435,1,0,0,0,87,440,1,0,0,0,89,446,1,0,0,0,91,452,
1,0,0,0,93,456,1,0,0,0,95,458,1,0,0,0,97,462,1,0,0,0,99,466,1,0,0,0,101,
477,1,0,0,0,103,486,1,0,0,0,105,490,1,0,0,0,107,496,1,0,0,0,109,506,1,0,
0,0,111,514,1,0,0,0,113,519,1,0,0,0,115,527,1,0,0,0,117,534,1,0,0,0,119,
536,1,0,0,0,121,539,1,0,0,0,123,543,1,0,0,0,125,545,1,0,0,0,127,547,1,0,
0,0,129,549,1,0,0,0,131,553,1,0,0,0,133,557,1,0,0,0,135,559,1,0,0,0,137,
561,1,0,0,0,139,563,1,0,0,0,141,566,1,0,0,0,143,569,1,0,0,0,145,572,1,0,
0,0,147,576,1,0,0,0,149,579,1,0,0,0,151,583,1,0,0,0,153,591,1,0,0,0,155,
601,1,0,0,0,157,609,1,0,0,0,159,616,1,0,0,0,161,637,1,0,0,0,163,640,1,0,
0,0,165,647,1,0,0,0,167,650,1,0,0,0,169,657,1,0,0,0,171,659,1,0,0,0,173,
661,1,0,0,0,175,668,1,0,0,0,177,670,1,0,0,0,179,679,1,0,0,0,181,681,1,0,
0,0,183,683,1,0,0,0,185,712,1,0,0,0,187,714,1,0,0,0,189,717,1,0,0,0,191,
720,1,0,0,0,193,724,1,0,0,0,195,726,1,0,0,0,197,728,1,0,0,0,199,735,1,0,
0,0,201,737,1,0,0,0,203,740,1,0,0,0,205,746,1,0,0,0,207,760,1,0,0,0,209,
210,5,109,0,0,210,211,5,111,0,0,211,212,5,100,0,0,212,213,5,117,0,0,213,
214,5,108,0,0,214,215,5,101,0,0,215,2,1,0,0,0,216,217,5,59,0,0,217,4,1,0,
0,0,218,219,5,99,0,0,219,220,5,114,0,0,220,221,5,101,0,0,221,222,5,97,0,
0,222,223,5,116,0,0,223,224,5,101,0,0,224,6,1,0,0,0,225,226,5,44,0,0,226,
8,1,0,0,0,227,228,5,114,0,0,228,229,5,101,0,0,229,230,5,102,0,0,230,231,
5,105,0,0,231,232,5,110,0,0,232,233,5,105,0,0,233,234,5,110,0,0,234,235,
5,103,0,0,235,10,1,0,0,0,236,237,5,102,0,0,237,238,5,114,0,0,238,239,5,111,
0,0,239,240,5,109,0,0,240,12,1,0,0,0,241,242,5,108,0,0,242,243,5,105,0,0,
243,244,5,98,0,0,244,245,5,114,0,0,245,246,5,97,0,0,246,247,5,114,0,0,247,
248,5,121,0,0,248,14,1,0,0,0,249,250,5,113,0,0,250,251,5,117,0,0,251,252,
5,101,0,0,252,253,5,114,0,0,253,254,5,121,0,0,254,16,1,0,0,0,255,256,5,61,
0,0,256,18,1,0,0,0,257,258,5,117,0,0,258,259,5,115,0,0,259,260,5,101,0,0,
260,261,5,115,0,0,261,20,1,0,0,0,262,263,5,104,0,0,263,264,5,101,0,0,264,
265,5,108,0,0,265,266,5,112,0,0,266,267,5,101,0,0,267,268,5,114,0,0,268,
22,1,0,0,0,269,270,5,100,0,0,270,271,5,101,0,0,271,272,5,102,0,0,272,24,
1,0,0,0,273,274,5,58,0,0,274,26,1,0,0,0,275,276,5,99,0,0,276,277,5,111,0,
0,277,278,5,110,0,0,278,279,5,116,0,0,279,280,5,101,0,0,280,281,5,120,0,
0,281,282,5,116,0,0,282,28,1,0,0,0,283,284,5,40,0,0,284,30,1,0,0,0,285,286,
5,41,0,0,286,32,1,0,0,0,287,288,5,117,0,0,288,289,5,110,0,0,289,290,5,105,
0,0,290,291,5,113,0,0,291,292,5,117,0,0,292,293,5,101,0,0,293,34,1,0,0,0,
294,295,5,108,0,0,295,296,5,97,0,0,296,297,5,122,0,0,297,298,5,121,0,0,298,
36,1,0,0,0,299,300,5,97,0,0,300,301,5,98,0,0,301,302,5,115,0,0,302,303,5,
116,0,0,303,304,5,114,0,0,304,305,5,97,0,0,305,306,5,99,0,0,306,307,5,116,
0,0,307,38,1,0,0,0,308,309,5,114,0,0,309,310,5,117,0,0,310,311,5,108,0,0,
311,312,5,101,0,0,312,40,1,0,0,0,313,314,5,101,0,0,314,315,5,120,0,0,315,
316,5,116,0,0,316,317,5,101,0,0,317,318,5,110,0,0,318,319,5,100,0,0,319,
320,5,115,0,0,320,42,1,0,0,0,321,322,5,123,0,0,322,44,1,0,0,0,323,324,5,
117,0,0,324,325,5,115,0,0,325,326,5,105,0,0,326,327,5,110,0,0,327,328,5,
103,0,0,328,46,1,0,0,0,329,330,5,125,0,0,330,48,1,0,0,0,331,332,5,101,0,
0,332,333,5,110,0,0,333,334,5,116,0,0,334,335,5,114,0,0,335,336,5,121,0,
0,336,337,5,112,0,0,337,338,5,111,0,0,338,339,5,105,0,0,339,340,5,110,0,
0,340,341,5,116,0,0,341,50,1,0,0,0,342,343,5,101,0,0,343,344,5,110,0,0,344,
345,5,100,0,0,345,346,5,112,0,0,346,347,5,111,0,0,347,348,5,105,0,0,348,
349,5,110,0,0,349,350,5,116,0,0,350,52,1,0,0,0,351,352,5,105,0,0,352,353,
5,110,0,0,353,54,1,0,0,0,354,355,5,116,0,0,355,356,5,111,0,0,356,56,1,0,
0,0,357,358,5,109,0,0,358,359,5,97,0,0,359,360,5,112,0,0,360,361,5,115,0,
0,361,362,5,84,0,0,362,363,5,111,0,0,363,58,1,0,0,0,364,365,5,100,0,0,365,
366,5,105,0,0,366,367,5,115,0,0,367,368,5,116,0,0,368,369,5,105,0,0,369,
370,5,110,0,0,370,371,5,99,0,0,371,372,5,116,0,0,372,60,1,0,0,0,373,374,
5,102,0,0,374,375,5,111,0,0,375,376,5,114,0,0,376,377,5,101,0,0,377,378,
5,97,0,0,378,379,5,99,0,0,379,380,5,104,0,0,380,62,1,0,0,0,381,382,5,60,
0,0,382,383,5,45,0,0,383,64,1,0,0,0,384,385,5,100,0,0,385,386,5,111,0,0,
386,66,1,0,0,0,387,388,5,105,0,0,388,389,5,102,0,0,389,68,1,0,0,0,390,391,
5,101,0,0,391,392,5,108,0,0,392,393,5,115,0,0,393,394,5,101,0,0,394,70,1,
0,0,0,395,396,5,102,0,0,396,397,5,111,0,0,397,398,5,114,0,0,398,72,1,0,0,
0,399,400,5,33,0,0,400,74,1,0,0,0,401,402,5,124,0,0,402,76,1,0,0,0,403,404,
5,105,0,0,404,405,5,116,0,0,405,406,5,101,0,0,406,407,5,114,0,0,407,408,
5,97,0,0,408,409,5,116,0,0,409,410,5,101,0,0,410,78,1,0,0,0,411,412,5,79,
0,0,412,413,5,99,0,0,413,414,5,108,0,0,414,415,5,85,0,0,415,416,5,110,0,
0,416,417,5,100,0,0,417,418,5,101,0,0,418,419,5,102,0,0,419,420,5,105,0,
0,420,421,5,110,0,0,421,422,5,101,0,0,422,423,5,100,0,0,423,80,1,0,0,0,424,
425,5,116,0,0,425,426,5,114,0,0,426,427,5,117,0,0,427,428,5,101,0,0,428,
82,1,0,0,0,429,430,5,102,0,0,430,431,5,97,0,0,431,432,5,108,0,0,432,433,
5,115,0,0,433,434,5,101,0,0,434,84,1,0,0,0,435,436,5,116,0,0,436,437,5,104,
0,0,437,438,5,101,0,0,438,439,5,110,0,0,439,86,1,0,0,0,440,441,5,101,0,0,
441,442,5,110,0,0,442,443,5,100,0,0,443,444,5,105,0,0,444,445,5,102,0,0,
445,88,1,0,0,0,446,447,5,115,0,0,447,448,5,117,0,0,448,449,5,112,0,0,449,
450,5,101,0,0,450,451,5,114,0,0,451,90,1,0,0,0,452,453,5,108,0,0,453,454,
5,101,0,0,454,455,5,116,0,0,455,92,1,0,0,0,456,457,5,35,0,0,457,94,1,0,0,
0,458,459,5,66,0,0,459,460,5,97,0,0,460,461,5,103,0,0,461,96,1,0,0,0,462,
463,5,83,0,0,463,464,5,101,0,0,464,465,5,116,0,0,465,98,1,0,0,0,466,467,
5,79,0,0,467,468,5,114,0,0,468,469,5,100,0,0,469,470,5,101,0,0,470,471,5,
114,0,0,471,472,5,101,0,0,472,473,5,100,0,0,473,474,5,83,0,0,474,475,5,101,
0,0,475,476,5,116,0,0,476,100,1,0,0,0,477,478,5,83,0,0,478,479,5,101,0,0,
479,480,5,113,0,0,480,481,5,117,0,0,481,482,5,101,0,0,482,483,5,110,0,0,
483,484,5,99,0,0,484,485,5,101,0,0,485,102,1,0,0,0,486,487,5,77,0,0,487,
488,5,97,0,0,488,489,5,112,0,0,489,104,1,0,0,0,490,491,5,84,0,0,491,492,
5,117,0,0,492,493,5,112,0,0,493,494,5,108,0,0,494,495,5,101,0,0,495,106,
1,0,0,0,496,497,5,84,0,0,497,498,5,117,0,0,498,499,5,112,0,0,499,500,5,108,
0,0,500,501,5,101,0,0,501,502,5,84,0,0,502,503,5,121,0,0,503,504,5,112,0,
0,504,505,5,101,0,0,505,108,1,0,0,0,506,507,5,73,0,0,507,508,5,110,0,0,508,
509,5,116,0,0,509,510,5,101,0,0,510,511,5,103,0,0,511,512,5,101,0,0,512,
513,5,114,0,0,513,110,1,0,0,0,514,515,5,82,0,0,515,516,5,101,0,0,516,517,
5,97,0,0,517,518,5,108,0,0,518,112,1,0,0,0,519,520,5,66,0,0,520,521,5,111,
0,0,521,522,5,111,0,0,522,523,5,108,0,0,523,524,5,101,0,0,524,525,5,97,0,
0,525,526,5,110,0,0,526,114,1,0,0,0,527,528,5,83,0,0,528,529,5,116,0,0,529,
530,5,114,0,0,530,531,5,105,0,0,531,532,5,110,0,0,532,533,5,103,0,0,533,
116,1,0,0,0,534,535,5,46,0,0,535,118,1,0,0,0,536,537,5,45,0,0,537,538,5,
62,0,0,538,120,1,0,0,0,539,540,5,110,0,0,540,541,5,111,0,0,541,542,5,116,
0,0,542,122,1,0,0,0,543,544,5,45,0,0,544,124,1,0,0,0,545,546,5,42,0,0,546,
126,1,0,0,0,547,548,5,47,0,0,548,128,1,0,0,0,549,550,5,100,0,0,550,551,5,
105,0,0,551,552,5,118,0,0,552,130,1,0,0,0,553,554,5,109,0,0,554,555,5,111,
0,0,555,556,5,100,0,0,556,132,1,0,0,0,557,558,5,43,0,0,558,134,1,0,0,0,559,
560,5,62,0,0,560,136,1,0,0,0,561,562,5,60,0,0,562,138,1,0,0,0,563,564,5,
62,0,0,564,565,5,61,0,0,565,140,1,0,0,0,566,567,5,60,0,0,567,568,5,61,0,
0,568,142,1,0,0,0,569,570,5,60,0,0,570,571,5,62,0,0,571,144,1,0,0,0,572,
573,5,97,0,0,573,574,5,110,0,0,574,575,5,100,0,0,575,146,1,0,0,0,576,577,
5,111,0,0,577,578,5,114,0,0,578,148,1,0,0,0,579,580,5,120,0,0,580,581,5,
111,0,0,581,582,5,114,0,0,582,150,1,0,0,0,583,584,5,105,0,0,584,585,5,109,
0,0,585,586,5,112,0,0,586,587,5,108,0,0,587,588,5,105,0,0,588,589,5,101,
0,0,589,590,5,115,0,0,590,152,1,0,0,0,591,592,5,110,0,0,592,593,5,111,0,
0,593,594,5,100,0,0,594,595,5,101,0,0,595,596,5,102,0,0,596,597,5,97,0,0,
597,598,5,117,0,0,598,599,5,108,0,0,599,600,5,116,0,0,600,154,1,0,0,0,601,
602,5,79,0,0,602,603,5,99,0,0,603,604,5,108,0,0,604,605,5,84,0,0,605,606,
5,121,0,0,606,607,5,112,0,0,607,608,5,101,0,0,608,156,1,0,0,0,609,610,5,
79,0,0,610,611,5,99,0,0,611,612,5,108,0,0,612,613,5,65,0,0,613,614,5,110,
0,0,614,615,5,121,0,0,615,158,1,0,0,0,616,617,5,67,0,0,617,618,5,111,0,0,
618,619,5,108,0,0,619,620,5,108,0,0,620,621,5,101,0,0,621,622,5,99,0,0,622,
623,5,116,0,0,623,624,5,105,0,0,624,625,5,111,0,0,625,626,5,110,0,0,626,
160,1,0,0,0,627,629,5,34,0,0,628,630,3,163,81,0,629,628,1,0,0,0,629,630,
1,0,0,0,630,631,1,0,0,0,631,638,5,34,0,0,632,634,5,39,0,0,633,635,3,167,
83,0,634,633,1,0,0,0,634,635,1,0,0,0,635,636,1,0,0,0,636,638,5,39,0,0,637,
627,1,0,0,0,637,632,1,0,0,0,638,162,1,0,0,0,639,641,3,165,82,0,640,639,1,
0,0,0,641,642,1,0,0,0,642,640,1,0,0,0,642,643,1,0,0,0,643,164,1,0,0,0,644,
648,8,0,0,0,645,646,5,92,0,0,646,648,7,1,0,0,647,644,1,0,0,0,647,645,1,0,
0,0,648,166,1,0,0,0,649,651,3,169,84,0,650,649,1,0,0,0,651,652,1,0,0,0,652,
650,1,0,0,0,652,653,1,0,0,0,653,168,1,0,0,0,654,658,8,2,0,0,655,656,5,92,
0,0,656,658,7,1,0,0,657,654,1,0,0,0,657,655,1,0,0,0,658,170,1,0,0,0,659,
660,3,173,86,0,660,172,1,0,0,0,661,662,3,175,87,0,662,174,1,0,0,0,663,669,
5,48,0,0,664,666,3,181,90,0,665,667,3,177,88,0,666,665,1,0,0,0,666,667,1,
0,0,0,667,669,1,0,0,0,668,663,1,0,0,0,668,664,1,0,0,0,669,176,1,0,0,0,670,
674,3,179,89,0,671,673,3,179,89,0,672,671,1,0,0,0,673,676,1,0,0,0,674,672,
1,0,0,0,674,675,1,0,0,0,675,178,1,0,0,0,676,674,1,0,0,0,677,680,5,48,0,0,
678,680,3,181,90,0,679,677,1,0,0,0,679,678,1,0,0,0,680,180,1,0,0,0,681,682,
7,3,0,0,682,182,1,0,0,0,683,684,3,185,92,0,684,184,1,0,0,0,685,686,3,177,
88,0,686,688,5,46,0,0,687,689,3,177,88,0,688,687,1,0,0,0,688,689,1,0,0,0,
689,691,1,0,0,0,690,692,3,187,93,0,691,690,1,0,0,0,691,692,1,0,0,0,692,694,
1,0,0,0,693,695,3,195,97,0,694,693,1,0,0,0,694,695,1,0,0,0,695,713,1,0,0,
0,696,697,5,46,0,0,697,699,3,177,88,0,698,700,3,187,93,0,699,698,1,0,0,0,
699,700,1,0,0,0,700,702,1,0,0,0,701,703,3,195,97,0,702,701,1,0,0,0,702,703,
1,0,0,0,703,713,1,0,0,0,704,705,3,177,88,0,705,707,3,187,93,0,706,708,3,
195,97,0,707,706,1,0,0,0,707,708,1,0,0,0,708,713,1,0,0,0,709,710,3,177,88,
0,710,711,3,195,97,0,711,713,1,0,0,0,712,685,1,0,0,0,712,696,1,0,0,0,712,
704,1,0,0,0,712,709,1,0,0,0,713,186,1,0,0,0,714,715,3,189,94,0,715,716,3,
191,95,0,716,188,1,0,0,0,717,718,7,4,0,0,718,190,1,0,0,0,719,721,3,193,96,
0,720,719,1,0,0,0,720,721,1,0,0,0,721,722,1,0,0,0,722,723,3,177,88,0,723,
192,1,0,0,0,724,725,7,5,0,0,725,194,1,0,0,0,726,727,7,6,0,0,727,196,1,0,
0,0,728,732,3,201,100,0,729,731,3,201,100,0,730,729,1,0,0,0,731,734,1,0,
0,0,732,730,1,0,0,0,732,733,1,0,0,0,733,198,1,0,0,0,734,732,1,0,0,0,735,
736,7,7,0,0,736,200,1,0,0,0,737,738,7,8,0,0,738,202,1,0,0,0,739,741,7,9,
0,0,740,739,1,0,0,0,741,742,1,0,0,0,742,740,1,0,0,0,742,743,1,0,0,0,743,
744,1,0,0,0,744,745,6,101,0,0,745,204,1,0,0,0,746,747,5,47,0,0,747,748,5,
42,0,0,748,752,1,0,0,0,749,751,9,0,0,0,750,749,1,0,0,0,751,754,1,0,0,0,752,
753,1,0,0,0,752,750,1,0,0,0,753,755,1,0,0,0,754,752,1,0,0,0,755,756,5,42,
0,0,756,757,5,47,0,0,757,758,1,0,0,0,758,759,6,102,0,0,759,206,1,0,0,0,760,
761,5,45,0,0,761,762,5,45,0,0,762,766,1,0,0,0,763,765,8,10,0,0,764,763,1,
0,0,0,765,768,1,0,0,0,766,764,1,0,0,0,766,767,1,0,0,0,767,769,1,0,0,0,768,
766,1,0,0,0,769,770,6,103,0,0,770,208,1,0,0,0,24,0,629,634,637,642,647,652,
657,666,668,674,679,688,691,694,699,702,707,712,720,732,742,752,766,1,6,
0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class ATLLexer extends antlr4.Lexer {

    static grammarFileName = "ATL.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'module'", "';'", "'create'", "','", "'refining'", 
                         "'from'", "'library'", "'query'", "'='", "'uses'", 
                         "'helper'", "'def'", "':'", "'context'", "'('", 
                         "')'", "'unique'", "'lazy'", "'abstract'", "'rule'", 
                         "'extends'", "'{'", "'using'", "'}'", "'entrypoint'", 
                         "'endpoint'", "'in'", "'to'", "'mapsTo'", "'distinct'", 
                         "'foreach'", "'<-'", "'do'", "'if'", "'else'", 
                         "'for'", "'!'", "'|'", "'iterate'", "'OclUndefined'", 
                         "'true'", "'false'", "'then'", "'endif'", "'super'", 
                         "'let'", "'#'", "'Bag'", "'Set'", "'OrderedSet'", 
                         "'Sequence'", "'Map'", "'Tuple'", "'TupleType'", 
                         "'Integer'", "'Real'", "'Boolean'", "'String'", 
                         "'.'", "'->'", "'not'", "'-'", "'*'", "'/'", "'div'", 
                         "'mod'", "'+'", "'>'", "'<'", "'>='", "'<='", "'<>'", 
                         "'and'", "'or'", "'xor'", "'implies'", "'nodefault'", 
                         "'OclType'", "'OclAny'", "'Collection'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, "STRING", "INTEGER", "FLOAT", "IDENTIFIER", 
                          "WS", "COMMENT", "LINE_COMMENT" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
                      "T__25", "T__26", "T__27", "T__28", "T__29", "T__30", 
                      "T__31", "T__32", "T__33", "T__34", "T__35", "T__36", 
                      "T__37", "T__38", "T__39", "T__40", "T__41", "T__42", 
                      "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
                      "T__49", "T__50", "T__51", "T__52", "T__53", "T__54", 
                      "T__55", "T__56", "T__57", "T__58", "T__59", "T__60", 
                      "T__61", "T__62", "T__63", "T__64", "T__65", "T__66", 
                      "T__67", "T__68", "T__69", "T__70", "T__71", "T__72", 
                      "T__73", "T__74", "T__75", "T__76", "T__77", "T__78", 
                      "T__79", "STRING", "DoubleStringCharacters", "DoubleStringCharacter", 
                      "SingleStringCharacters", "SingleStringCharacter", 
                      "INTEGER", "DecimalIntegerLiteral", "DecimalNumeral", 
                      "Digits", "Digit", "NonZeroDigit", "FLOAT", "DecimalFloatingPointLiteral", 
                      "ExponentPart", "ExponentIndicator", "SignedInteger", 
                      "Sign", "FloatTypeSuffix", "IDENTIFIER", "Letter", 
                      "LetterOrDigit", "WS", "COMMENT", "LINE_COMMENT" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

ATLLexer.EOF = antlr4.Token.EOF;
ATLLexer.T__0 = 1;
ATLLexer.T__1 = 2;
ATLLexer.T__2 = 3;
ATLLexer.T__3 = 4;
ATLLexer.T__4 = 5;
ATLLexer.T__5 = 6;
ATLLexer.T__6 = 7;
ATLLexer.T__7 = 8;
ATLLexer.T__8 = 9;
ATLLexer.T__9 = 10;
ATLLexer.T__10 = 11;
ATLLexer.T__11 = 12;
ATLLexer.T__12 = 13;
ATLLexer.T__13 = 14;
ATLLexer.T__14 = 15;
ATLLexer.T__15 = 16;
ATLLexer.T__16 = 17;
ATLLexer.T__17 = 18;
ATLLexer.T__18 = 19;
ATLLexer.T__19 = 20;
ATLLexer.T__20 = 21;
ATLLexer.T__21 = 22;
ATLLexer.T__22 = 23;
ATLLexer.T__23 = 24;
ATLLexer.T__24 = 25;
ATLLexer.T__25 = 26;
ATLLexer.T__26 = 27;
ATLLexer.T__27 = 28;
ATLLexer.T__28 = 29;
ATLLexer.T__29 = 30;
ATLLexer.T__30 = 31;
ATLLexer.T__31 = 32;
ATLLexer.T__32 = 33;
ATLLexer.T__33 = 34;
ATLLexer.T__34 = 35;
ATLLexer.T__35 = 36;
ATLLexer.T__36 = 37;
ATLLexer.T__37 = 38;
ATLLexer.T__38 = 39;
ATLLexer.T__39 = 40;
ATLLexer.T__40 = 41;
ATLLexer.T__41 = 42;
ATLLexer.T__42 = 43;
ATLLexer.T__43 = 44;
ATLLexer.T__44 = 45;
ATLLexer.T__45 = 46;
ATLLexer.T__46 = 47;
ATLLexer.T__47 = 48;
ATLLexer.T__48 = 49;
ATLLexer.T__49 = 50;
ATLLexer.T__50 = 51;
ATLLexer.T__51 = 52;
ATLLexer.T__52 = 53;
ATLLexer.T__53 = 54;
ATLLexer.T__54 = 55;
ATLLexer.T__55 = 56;
ATLLexer.T__56 = 57;
ATLLexer.T__57 = 58;
ATLLexer.T__58 = 59;
ATLLexer.T__59 = 60;
ATLLexer.T__60 = 61;
ATLLexer.T__61 = 62;
ATLLexer.T__62 = 63;
ATLLexer.T__63 = 64;
ATLLexer.T__64 = 65;
ATLLexer.T__65 = 66;
ATLLexer.T__66 = 67;
ATLLexer.T__67 = 68;
ATLLexer.T__68 = 69;
ATLLexer.T__69 = 70;
ATLLexer.T__70 = 71;
ATLLexer.T__71 = 72;
ATLLexer.T__72 = 73;
ATLLexer.T__73 = 74;
ATLLexer.T__74 = 75;
ATLLexer.T__75 = 76;
ATLLexer.T__76 = 77;
ATLLexer.T__77 = 78;
ATLLexer.T__78 = 79;
ATLLexer.T__79 = 80;
ATLLexer.STRING = 81;
ATLLexer.INTEGER = 82;
ATLLexer.FLOAT = 83;
ATLLexer.IDENTIFIER = 84;
ATLLexer.WS = 85;
ATLLexer.COMMENT = 86;
ATLLexer.LINE_COMMENT = 87;



