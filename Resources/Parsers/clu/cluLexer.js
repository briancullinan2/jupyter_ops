// Generated from Resources/Parsers/clu/clu.g4 by ANTLR 4.10.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,93,637,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,
2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,
56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,
70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,
2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,84,2,
85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,7,91,2,92,
7,92,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,4,
1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,8,1,8,
1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,
1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,
14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,17,1,17,1,18,
1,18,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,
21,1,21,1,21,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,
1,24,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,
27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,30,1,30,1,30,
1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,
32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,
1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,
36,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,
1,38,1,38,1,38,1,38,1,39,1,39,1,40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,
41,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,45,1,45,
1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,
47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,
1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,51,1,
51,1,51,1,52,1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,53,1,53,1,53,1,54,1,54,
1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,56,1,
56,1,56,1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,57,1,58,1,58,1,58,1,58,1,58,
1,59,1,59,1,60,1,60,1,61,1,61,1,62,1,62,1,62,1,63,1,63,1,63,1,64,1,64,1,
65,1,65,1,65,1,66,1,66,1,67,1,67,1,68,1,68,1,68,1,69,1,69,1,69,1,70,1,70,
1,71,1,71,1,71,1,72,1,72,1,72,1,72,1,73,1,73,1,73,1,74,1,74,1,74,1,74,1,
75,1,75,1,75,1,76,1,76,1,77,1,77,1,77,1,77,1,77,1,78,1,78,1,79,1,79,1,79,
1,79,1,80,1,80,1,80,1,80,1,81,1,81,1,81,1,81,1,81,1,82,1,82,1,82,1,82,1,
82,1,82,1,83,1,83,1,84,1,84,1,84,1,84,1,84,1,84,1,85,1,85,1,85,1,86,1,86,
1,86,1,86,1,86,1,87,1,87,5,87,591,8,87,10,87,12,87,594,9,87,1,87,1,87,1,
88,1,88,5,88,600,8,88,10,88,12,88,603,9,88,1,89,4,89,606,8,89,11,89,12,89,
607,1,90,4,90,611,8,90,11,90,12,90,612,1,90,1,90,5,90,617,8,90,10,90,12,
90,620,9,90,1,91,1,91,5,91,624,8,91,10,91,12,91,627,9,91,1,91,1,91,1,92,
4,92,632,8,92,11,92,12,92,633,1,92,1,92,0,0,93,1,1,3,2,5,3,7,4,9,5,11,6,
13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,
19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,
31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,
43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,
109,55,111,56,113,57,115,58,117,59,119,60,121,61,123,62,125,63,127,64,129,
65,131,66,133,67,135,68,137,69,139,70,141,71,143,72,145,73,147,74,149,75,
151,76,153,77,155,78,157,79,159,80,161,81,163,82,165,83,167,84,169,85,171,
86,173,87,175,88,177,89,179,90,181,91,183,92,185,93,1,0,6,1,0,34,34,2,0,
65,90,97,122,4,0,48,57,65,90,95,95,97,122,1,0,48,57,2,0,10,10,13,13,3,0,
9,10,13,13,32,32,643,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,
1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,
0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,
0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,
43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,
0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,
1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,
0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,
0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,
99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,
1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,
0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,
0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,
0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,
0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,0,
161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,1,0,0,0,0,171,
1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,0,0,177,1,0,0,0,0,179,1,0,0,0,0,181,1,
0,0,0,0,183,1,0,0,0,0,185,1,0,0,0,1,187,1,0,0,0,3,189,1,0,0,0,5,194,1,0,
0,0,7,198,1,0,0,0,9,203,1,0,0,0,11,211,1,0,0,0,13,214,1,0,0,0,15,216,1,0,
0,0,17,218,1,0,0,0,19,223,1,0,0,0,21,225,1,0,0,0,23,227,1,0,0,0,25,235,1,
0,0,0,27,242,1,0,0,0,29,250,1,0,0,0,31,256,1,0,0,0,33,260,1,0,0,0,35,263,
1,0,0,0,37,265,1,0,0,0,39,267,1,0,0,0,41,271,1,0,0,0,43,279,1,0,0,0,45,283,
1,0,0,0,47,286,1,0,0,0,49,291,1,0,0,0,51,296,1,0,0,0,53,300,1,0,0,0,55,305,
1,0,0,0,57,310,1,0,0,0,59,317,1,0,0,0,61,321,1,0,0,0,63,325,1,0,0,0,65,331,
1,0,0,0,67,340,1,0,0,0,69,347,1,0,0,0,71,354,1,0,0,0,73,360,1,0,0,0,75,368,
1,0,0,0,77,377,1,0,0,0,79,386,1,0,0,0,81,388,1,0,0,0,83,394,1,0,0,0,85,397,
1,0,0,0,87,401,1,0,0,0,89,404,1,0,0,0,91,409,1,0,0,0,93,416,1,0,0,0,95,421,
1,0,0,0,97,429,1,0,0,0,99,436,1,0,0,0,101,443,1,0,0,0,103,449,1,0,0,0,105,
456,1,0,0,0,107,461,1,0,0,0,109,467,1,0,0,0,111,473,1,0,0,0,113,482,1,0,
0,0,115,489,1,0,0,0,117,493,1,0,0,0,119,498,1,0,0,0,121,500,1,0,0,0,123,
502,1,0,0,0,125,504,1,0,0,0,127,507,1,0,0,0,129,510,1,0,0,0,131,512,1,0,
0,0,133,515,1,0,0,0,135,517,1,0,0,0,137,519,1,0,0,0,139,522,1,0,0,0,141,
525,1,0,0,0,143,527,1,0,0,0,145,530,1,0,0,0,147,534,1,0,0,0,149,537,1,0,
0,0,151,541,1,0,0,0,153,544,1,0,0,0,155,546,1,0,0,0,157,551,1,0,0,0,159,
553,1,0,0,0,161,557,1,0,0,0,163,561,1,0,0,0,165,566,1,0,0,0,167,572,1,0,
0,0,169,574,1,0,0,0,171,580,1,0,0,0,173,583,1,0,0,0,175,588,1,0,0,0,177,
597,1,0,0,0,179,605,1,0,0,0,181,610,1,0,0,0,183,621,1,0,0,0,185,631,1,0,
0,0,187,188,5,61,0,0,188,2,1,0,0,0,189,190,5,112,0,0,190,191,5,114,0,0,191,
192,5,111,0,0,192,193,5,99,0,0,193,4,1,0,0,0,194,195,5,101,0,0,195,196,5,
110,0,0,196,197,5,100,0,0,197,6,1,0,0,0,198,199,5,105,0,0,199,200,5,116,
0,0,200,201,5,101,0,0,201,202,5,114,0,0,202,8,1,0,0,0,203,204,5,99,0,0,204,
205,5,108,0,0,205,206,5,117,0,0,206,207,5,115,0,0,207,208,5,116,0,0,208,
209,5,101,0,0,209,210,5,114,0,0,210,10,1,0,0,0,211,212,5,105,0,0,212,213,
5,115,0,0,213,12,1,0,0,0,214,215,5,44,0,0,215,14,1,0,0,0,216,217,5,58,0,
0,217,16,1,0,0,0,218,219,5,116,0,0,219,220,5,121,0,0,220,221,5,112,0,0,221,
222,5,101,0,0,222,18,1,0,0,0,223,224,5,40,0,0,224,20,1,0,0,0,225,226,5,41,
0,0,226,22,1,0,0,0,227,228,5,114,0,0,228,229,5,101,0,0,229,230,5,116,0,0,
230,231,5,117,0,0,231,232,5,114,0,0,232,233,5,110,0,0,233,234,5,115,0,0,
234,24,1,0,0,0,235,236,5,121,0,0,236,237,5,105,0,0,237,238,5,101,0,0,238,
239,5,108,0,0,239,240,5,100,0,0,240,241,5,115,0,0,241,26,1,0,0,0,242,243,
5,115,0,0,243,244,5,105,0,0,244,245,5,103,0,0,245,246,5,110,0,0,246,247,
5,97,0,0,247,248,5,108,0,0,248,249,5,115,0,0,249,28,1,0,0,0,250,251,5,119,
0,0,251,252,5,104,0,0,252,253,5,101,0,0,253,254,5,114,0,0,254,255,5,101,
0,0,255,30,1,0,0,0,256,257,5,104,0,0,257,258,5,97,0,0,258,259,5,115,0,0,
259,32,1,0,0,0,260,261,5,105,0,0,261,262,5,110,0,0,262,34,1,0,0,0,263,264,
5,91,0,0,264,36,1,0,0,0,265,266,5,93,0,0,266,38,1,0,0,0,267,268,5,114,0,
0,268,269,5,101,0,0,269,270,5,112,0,0,270,40,1,0,0,0,271,272,5,114,0,0,272,
273,5,111,0,0,273,274,5,117,0,0,274,275,5,116,0,0,275,276,5,105,0,0,276,
277,5,110,0,0,277,278,5,101,0,0,278,42,1,0,0,0,279,280,5,111,0,0,280,281,
5,119,0,0,281,282,5,110,0,0,282,44,1,0,0,0,283,284,5,58,0,0,284,285,5,61,
0,0,285,46,1,0,0,0,286,287,5,110,0,0,287,288,5,117,0,0,288,289,5,108,0,0,
289,290,5,108,0,0,290,48,1,0,0,0,291,292,5,98,0,0,292,293,5,111,0,0,293,
294,5,111,0,0,294,295,5,108,0,0,295,50,1,0,0,0,296,297,5,105,0,0,297,298,
5,110,0,0,298,299,5,116,0,0,299,52,1,0,0,0,300,301,5,114,0,0,301,302,5,101,
0,0,302,303,5,97,0,0,303,304,5,108,0,0,304,54,1,0,0,0,305,306,5,99,0,0,306,
307,5,104,0,0,307,308,5,97,0,0,308,309,5,114,0,0,309,56,1,0,0,0,310,311,
5,115,0,0,311,312,5,116,0,0,312,313,5,114,0,0,313,314,5,105,0,0,314,315,
5,110,0,0,315,316,5,103,0,0,316,58,1,0,0,0,317,318,5,97,0,0,318,319,5,110,
0,0,319,320,5,121,0,0,320,60,1,0,0,0,321,322,5,99,0,0,322,323,5,118,0,0,
323,324,5,116,0,0,324,62,1,0,0,0,325,326,5,97,0,0,326,327,5,114,0,0,327,
328,5,114,0,0,328,329,5,97,0,0,329,330,5,121,0,0,330,64,1,0,0,0,331,332,
5,115,0,0,332,333,5,101,0,0,333,334,5,113,0,0,334,335,5,117,0,0,335,336,
5,101,0,0,336,337,5,110,0,0,337,338,5,99,0,0,338,339,5,101,0,0,339,66,1,
0,0,0,340,341,5,114,0,0,341,342,5,101,0,0,342,343,5,99,0,0,343,344,5,111,
0,0,344,345,5,114,0,0,345,346,5,100,0,0,346,68,1,0,0,0,347,348,5,115,0,0,
348,349,5,116,0,0,349,350,5,114,0,0,350,351,5,117,0,0,351,352,5,99,0,0,352,
353,5,116,0,0,353,70,1,0,0,0,354,355,5,111,0,0,355,356,5,110,0,0,356,357,
5,101,0,0,357,358,5,111,0,0,358,359,5,102,0,0,359,72,1,0,0,0,360,361,5,118,
0,0,361,362,5,97,0,0,362,363,5,114,0,0,363,364,5,105,0,0,364,365,5,97,0,
0,365,366,5,110,0,0,366,367,5,116,0,0,367,74,1,0,0,0,368,369,5,112,0,0,369,
370,5,114,0,0,370,371,5,111,0,0,371,372,5,99,0,0,372,373,5,116,0,0,373,374,
5,121,0,0,374,375,5,112,0,0,375,376,5,101,0,0,376,76,1,0,0,0,377,378,5,105,
0,0,378,379,5,116,0,0,379,380,5,101,0,0,380,381,5,114,0,0,381,382,5,116,
0,0,382,383,5,121,0,0,383,384,5,112,0,0,384,385,5,101,0,0,385,78,1,0,0,0,
386,387,5,46,0,0,387,80,1,0,0,0,388,389,5,119,0,0,389,390,5,104,0,0,390,
391,5,105,0,0,391,392,5,108,0,0,392,393,5,101,0,0,393,82,1,0,0,0,394,395,
5,100,0,0,395,396,5,111,0,0,396,84,1,0,0,0,397,398,5,102,0,0,398,399,5,111,
0,0,399,400,5,114,0,0,400,86,1,0,0,0,401,402,5,105,0,0,402,403,5,102,0,0,
403,88,1,0,0,0,404,405,5,116,0,0,405,406,5,104,0,0,406,407,5,101,0,0,407,
408,5,110,0,0,408,90,1,0,0,0,409,410,5,101,0,0,410,411,5,108,0,0,411,412,
5,115,0,0,412,413,5,101,0,0,413,414,5,105,0,0,414,415,5,102,0,0,415,92,1,
0,0,0,416,417,5,101,0,0,417,418,5,108,0,0,418,419,5,115,0,0,419,420,5,101,
0,0,420,94,1,0,0,0,421,422,5,116,0,0,422,423,5,97,0,0,423,424,5,103,0,0,
424,425,5,99,0,0,425,426,5,97,0,0,426,427,5,115,0,0,427,428,5,101,0,0,428,
96,1,0,0,0,429,430,5,111,0,0,430,431,5,116,0,0,431,432,5,104,0,0,432,433,
5,101,0,0,433,434,5,114,0,0,434,435,5,115,0,0,435,98,1,0,0,0,436,437,5,114,
0,0,437,438,5,101,0,0,438,439,5,116,0,0,439,440,5,117,0,0,440,441,5,114,
0,0,441,442,5,110,0,0,442,100,1,0,0,0,443,444,5,121,0,0,444,445,5,105,0,
0,445,446,5,101,0,0,446,447,5,108,0,0,447,448,5,100,0,0,448,102,1,0,0,0,
449,450,5,115,0,0,450,451,5,105,0,0,451,452,5,103,0,0,452,453,5,110,0,0,
453,454,5,97,0,0,454,455,5,108,0,0,455,104,1,0,0,0,456,457,5,101,0,0,457,
458,5,120,0,0,458,459,5,105,0,0,459,460,5,116,0,0,460,106,1,0,0,0,461,462,
5,98,0,0,462,463,5,114,0,0,463,464,5,101,0,0,464,465,5,97,0,0,465,466,5,
107,0,0,466,108,1,0,0,0,467,468,5,98,0,0,468,469,5,101,0,0,469,470,5,103,
0,0,470,471,5,105,0,0,471,472,5,110,0,0,472,110,1,0,0,0,473,474,5,114,0,
0,474,475,5,101,0,0,475,476,5,115,0,0,476,477,5,105,0,0,477,478,5,103,0,
0,478,479,5,110,0,0,479,480,5,97,0,0,480,481,5,108,0,0,481,112,1,0,0,0,482,
483,5,101,0,0,483,484,5,120,0,0,484,485,5,99,0,0,485,486,5,101,0,0,486,487,
5,112,0,0,487,488,5,116,0,0,488,114,1,0,0,0,489,490,5,116,0,0,490,491,5,
97,0,0,491,492,5,103,0,0,492,116,1,0,0,0,493,494,5,119,0,0,494,495,5,104,
0,0,495,496,5,101,0,0,496,497,5,110,0,0,497,118,1,0,0,0,498,499,5,42,0,0,
499,120,1,0,0,0,500,501,5,126,0,0,501,122,1,0,0,0,502,503,5,45,0,0,503,124,
1,0,0,0,504,505,5,42,0,0,505,506,5,42,0,0,506,126,1,0,0,0,507,508,5,47,0,
0,508,509,5,47,0,0,509,128,1,0,0,0,510,511,5,47,0,0,511,130,1,0,0,0,512,
513,5,124,0,0,513,514,5,124,0,0,514,132,1,0,0,0,515,516,5,43,0,0,516,134,
1,0,0,0,517,518,5,60,0,0,518,136,1,0,0,0,519,520,5,60,0,0,520,521,5,61,0,
0,521,138,1,0,0,0,522,523,5,62,0,0,523,524,5,61,0,0,524,140,1,0,0,0,525,
526,5,62,0,0,526,142,1,0,0,0,527,528,5,126,0,0,528,529,5,60,0,0,529,144,
1,0,0,0,530,531,5,126,0,0,531,532,5,60,0,0,532,533,5,61,0,0,533,146,1,0,
0,0,534,535,5,126,0,0,535,536,5,61,0,0,536,148,1,0,0,0,537,538,5,126,0,0,
538,539,5,62,0,0,539,540,5,61,0,0,540,150,1,0,0,0,541,542,5,126,0,0,542,
543,5,62,0,0,543,152,1,0,0,0,544,545,5,38,0,0,545,154,1,0,0,0,546,547,5,
99,0,0,547,548,5,97,0,0,548,549,5,110,0,0,549,550,5,100,0,0,550,156,1,0,
0,0,551,552,5,124,0,0,552,158,1,0,0,0,553,554,5,99,0,0,554,555,5,111,0,0,
555,556,5,114,0,0,556,160,1,0,0,0,557,558,5,110,0,0,558,559,5,105,0,0,559,
560,5,108,0,0,560,162,1,0,0,0,561,562,5,116,0,0,562,563,5,114,0,0,563,564,
5,117,0,0,564,565,5,101,0,0,565,164,1,0,0,0,566,567,5,102,0,0,567,568,5,
97,0,0,568,569,5,108,0,0,569,570,5,115,0,0,570,571,5,101,0,0,571,166,1,0,
0,0,572,573,5,36,0,0,573,168,1,0,0,0,574,575,5,102,0,0,575,576,5,111,0,0,
576,577,5,114,0,0,577,578,5,99,0,0,578,579,5,101,0,0,579,170,1,0,0,0,580,
581,5,117,0,0,581,582,5,112,0,0,582,172,1,0,0,0,583,584,5,100,0,0,584,585,
5,111,0,0,585,586,5,119,0,0,586,587,5,110,0,0,587,174,1,0,0,0,588,592,5,
34,0,0,589,591,8,0,0,0,590,589,1,0,0,0,591,594,1,0,0,0,592,590,1,0,0,0,592,
593,1,0,0,0,593,595,1,0,0,0,594,592,1,0,0,0,595,596,5,34,0,0,596,176,1,0,
0,0,597,601,7,1,0,0,598,600,7,2,0,0,599,598,1,0,0,0,600,603,1,0,0,0,601,
599,1,0,0,0,601,602,1,0,0,0,602,178,1,0,0,0,603,601,1,0,0,0,604,606,7,3,
0,0,605,604,1,0,0,0,606,607,1,0,0,0,607,605,1,0,0,0,607,608,1,0,0,0,608,
180,1,0,0,0,609,611,7,3,0,0,610,609,1,0,0,0,611,612,1,0,0,0,612,610,1,0,
0,0,612,613,1,0,0,0,613,614,1,0,0,0,614,618,5,46,0,0,615,617,7,3,0,0,616,
615,1,0,0,0,617,620,1,0,0,0,618,616,1,0,0,0,618,619,1,0,0,0,619,182,1,0,
0,0,620,618,1,0,0,0,621,625,5,37,0,0,622,624,8,4,0,0,623,622,1,0,0,0,624,
627,1,0,0,0,625,623,1,0,0,0,625,626,1,0,0,0,626,628,1,0,0,0,627,625,1,0,
0,0,628,629,6,91,0,0,629,184,1,0,0,0,630,632,7,5,0,0,631,630,1,0,0,0,632,
633,1,0,0,0,633,631,1,0,0,0,633,634,1,0,0,0,634,635,1,0,0,0,635,636,6,92,
0,0,636,186,1,0,0,0,8,0,592,601,607,612,618,625,633,1,0,1,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class cluLexer extends antlr4.Lexer {

    static grammarFileName = "clu.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'='", "'proc'", "'end'", "'iter'", "'cluster'", 
                         "'is'", "','", "':'", "'type'", "'('", "')'", "'returns'", 
                         "'yields'", "'signals'", "'where'", "'has'", "'in'", 
                         "'['", "']'", "'rep'", "'routine'", "'own'", "':='", 
                         "'null'", "'bool'", "'int'", "'real'", "'char'", 
                         "'string'", "'any'", "'cvt'", "'array'", "'sequence'", 
                         "'record'", "'struct'", "'oneof'", "'variant'", 
                         "'proctype'", "'itertype'", "'.'", "'while'", "'do'", 
                         "'for'", "'if'", "'then'", "'elseif'", "'else'", 
                         "'tagcase'", "'others'", "'return'", "'yield'", 
                         "'signal'", "'exit'", "'break'", "'begin'", "'resignal'", 
                         "'except'", "'tag'", "'when'", "'*'", "'~'", "'-'", 
                         "'**'", "'//'", "'/'", "'||'", "'+'", "'<'", "'<='", 
                         "'>='", "'>'", "'~<'", "'~<='", "'~='", "'~>='", 
                         "'~>'", "'&'", "'cand'", "'|'", "'cor'", "'nil'", 
                         "'true'", "'false'", "'$'", "'force'", "'up'", 
                         "'down'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          "STRINGLITERAL", "STRING", "INT", "FLOAT", "COMMENT", 
                          "WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
                      "T__25", "T__26", "T__27", "T__28", "T__29", "T__30", 
                      "T__31", "T__32", "T__33", "T__34", "T__35", "T__36", 
                      "T__37", "T__38", "T__39", "T__40", "T__41", "T__42", 
                      "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
                      "T__49", "T__50", "T__51", "T__52", "T__53", "T__54", 
                      "T__55", "T__56", "T__57", "T__58", "T__59", "T__60", 
                      "T__61", "T__62", "T__63", "T__64", "T__65", "T__66", 
                      "T__67", "T__68", "T__69", "T__70", "T__71", "T__72", 
                      "T__73", "T__74", "T__75", "T__76", "T__77", "T__78", 
                      "T__79", "T__80", "T__81", "T__82", "T__83", "T__84", 
                      "T__85", "T__86", "STRINGLITERAL", "STRING", "INT", 
                      "FLOAT", "COMMENT", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

cluLexer.EOF = antlr4.Token.EOF;
cluLexer.T__0 = 1;
cluLexer.T__1 = 2;
cluLexer.T__2 = 3;
cluLexer.T__3 = 4;
cluLexer.T__4 = 5;
cluLexer.T__5 = 6;
cluLexer.T__6 = 7;
cluLexer.T__7 = 8;
cluLexer.T__8 = 9;
cluLexer.T__9 = 10;
cluLexer.T__10 = 11;
cluLexer.T__11 = 12;
cluLexer.T__12 = 13;
cluLexer.T__13 = 14;
cluLexer.T__14 = 15;
cluLexer.T__15 = 16;
cluLexer.T__16 = 17;
cluLexer.T__17 = 18;
cluLexer.T__18 = 19;
cluLexer.T__19 = 20;
cluLexer.T__20 = 21;
cluLexer.T__21 = 22;
cluLexer.T__22 = 23;
cluLexer.T__23 = 24;
cluLexer.T__24 = 25;
cluLexer.T__25 = 26;
cluLexer.T__26 = 27;
cluLexer.T__27 = 28;
cluLexer.T__28 = 29;
cluLexer.T__29 = 30;
cluLexer.T__30 = 31;
cluLexer.T__31 = 32;
cluLexer.T__32 = 33;
cluLexer.T__33 = 34;
cluLexer.T__34 = 35;
cluLexer.T__35 = 36;
cluLexer.T__36 = 37;
cluLexer.T__37 = 38;
cluLexer.T__38 = 39;
cluLexer.T__39 = 40;
cluLexer.T__40 = 41;
cluLexer.T__41 = 42;
cluLexer.T__42 = 43;
cluLexer.T__43 = 44;
cluLexer.T__44 = 45;
cluLexer.T__45 = 46;
cluLexer.T__46 = 47;
cluLexer.T__47 = 48;
cluLexer.T__48 = 49;
cluLexer.T__49 = 50;
cluLexer.T__50 = 51;
cluLexer.T__51 = 52;
cluLexer.T__52 = 53;
cluLexer.T__53 = 54;
cluLexer.T__54 = 55;
cluLexer.T__55 = 56;
cluLexer.T__56 = 57;
cluLexer.T__57 = 58;
cluLexer.T__58 = 59;
cluLexer.T__59 = 60;
cluLexer.T__60 = 61;
cluLexer.T__61 = 62;
cluLexer.T__62 = 63;
cluLexer.T__63 = 64;
cluLexer.T__64 = 65;
cluLexer.T__65 = 66;
cluLexer.T__66 = 67;
cluLexer.T__67 = 68;
cluLexer.T__68 = 69;
cluLexer.T__69 = 70;
cluLexer.T__70 = 71;
cluLexer.T__71 = 72;
cluLexer.T__72 = 73;
cluLexer.T__73 = 74;
cluLexer.T__74 = 75;
cluLexer.T__75 = 76;
cluLexer.T__76 = 77;
cluLexer.T__77 = 78;
cluLexer.T__78 = 79;
cluLexer.T__79 = 80;
cluLexer.T__80 = 81;
cluLexer.T__81 = 82;
cluLexer.T__82 = 83;
cluLexer.T__83 = 84;
cluLexer.T__84 = 85;
cluLexer.T__85 = 86;
cluLexer.T__86 = 87;
cluLexer.STRINGLITERAL = 88;
cluLexer.STRING = 89;
cluLexer.INT = 90;
cluLexer.FLOAT = 91;
cluLexer.COMMENT = 92;
cluLexer.WS = 93;



