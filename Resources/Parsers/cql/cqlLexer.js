// Generated from Resources/Parsers/cql/cql.g4 by ANTLR 4.10.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,18,209,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,
5,1,6,1,6,1,6,1,7,1,7,1,7,1,8,1,8,1,8,1,9,1,9,1,10,1,10,1,10,1,10,1,11,1,
11,1,11,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,
1,14,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,
20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,
1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,1,
35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,39,1,40,1,40,1,41,4,41,190,
8,41,11,41,12,41,191,1,42,1,42,5,42,196,8,42,10,42,12,42,199,9,42,1,42,1,
42,1,43,4,43,204,8,43,11,43,12,43,205,1,43,1,43,1,197,0,44,1,1,3,2,5,3,7,
4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,0,33,0,
35,0,37,0,39,0,41,0,43,0,45,0,47,0,49,0,51,0,53,0,55,0,57,0,59,0,61,0,63,
0,65,0,67,0,69,0,71,0,73,0,75,0,77,0,79,0,81,0,83,16,85,17,87,18,1,0,28,
2,0,65,65,97,97,2,0,66,66,98,98,2,0,67,67,99,99,2,0,68,68,100,100,2,0,69,
69,101,101,2,0,70,70,102,102,2,0,71,71,103,103,2,0,72,72,104,104,2,0,73,
73,105,105,2,0,74,74,106,106,2,0,75,75,107,107,2,0,76,76,108,108,2,0,77,
77,109,109,2,0,78,78,110,110,2,0,79,79,111,111,2,0,80,80,112,112,2,0,81,
81,113,113,2,0,82,82,114,114,2,0,83,83,115,115,2,0,84,84,116,116,2,0,85,
85,117,117,2,0,86,86,118,118,2,0,87,87,119,119,2,0,88,88,120,120,2,0,89,
89,121,121,2,0,90,90,122,122,3,0,46,46,65,90,97,122,3,0,9,10,13,13,32,32,
185,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,
0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,
0,87,1,0,0,0,1,89,1,0,0,0,3,91,1,0,0,0,5,93,1,0,0,0,7,95,1,0,0,0,9,97,1,
0,0,0,11,99,1,0,0,0,13,102,1,0,0,0,15,105,1,0,0,0,17,108,1,0,0,0,19,111,
1,0,0,0,21,113,1,0,0,0,23,117,1,0,0,0,25,120,1,0,0,0,27,124,1,0,0,0,29,129,
1,0,0,0,31,136,1,0,0,0,33,138,1,0,0,0,35,140,1,0,0,0,37,142,1,0,0,0,39,144,
1,0,0,0,41,146,1,0,0,0,43,148,1,0,0,0,45,150,1,0,0,0,47,152,1,0,0,0,49,154,
1,0,0,0,51,156,1,0,0,0,53,158,1,0,0,0,55,160,1,0,0,0,57,162,1,0,0,0,59,164,
1,0,0,0,61,166,1,0,0,0,63,168,1,0,0,0,65,170,1,0,0,0,67,172,1,0,0,0,69,174,
1,0,0,0,71,176,1,0,0,0,73,178,1,0,0,0,75,180,1,0,0,0,77,182,1,0,0,0,79,184,
1,0,0,0,81,186,1,0,0,0,83,189,1,0,0,0,85,193,1,0,0,0,87,203,1,0,0,0,89,90,
5,62,0,0,90,2,1,0,0,0,91,92,5,61,0,0,92,4,1,0,0,0,93,94,5,40,0,0,94,6,1,
0,0,0,95,96,5,41,0,0,96,8,1,0,0,0,97,98,5,60,0,0,98,10,1,0,0,0,99,100,5,
62,0,0,100,101,5,61,0,0,101,12,1,0,0,0,102,103,5,60,0,0,103,104,5,61,0,0,
104,14,1,0,0,0,105,106,5,60,0,0,106,107,5,62,0,0,107,16,1,0,0,0,108,109,
5,61,0,0,109,110,5,61,0,0,110,18,1,0,0,0,111,112,5,47,0,0,112,20,1,0,0,0,
113,114,3,31,15,0,114,115,3,57,28,0,115,116,3,37,18,0,116,22,1,0,0,0,117,
118,3,59,29,0,118,119,3,65,32,0,119,24,1,0,0,0,120,121,3,57,28,0,121,122,
3,59,29,0,122,123,3,69,34,0,123,26,1,0,0,0,124,125,3,61,30,0,125,126,3,65,
32,0,126,127,3,59,29,0,127,128,3,77,38,0,128,28,1,0,0,0,129,130,3,67,33,
0,130,131,3,59,29,0,131,132,3,65,32,0,132,133,3,69,34,0,133,134,3,33,16,
0,134,135,3,79,39,0,135,30,1,0,0,0,136,137,7,0,0,0,137,32,1,0,0,0,138,139,
7,1,0,0,139,34,1,0,0,0,140,141,7,2,0,0,141,36,1,0,0,0,142,143,7,3,0,0,143,
38,1,0,0,0,144,145,7,4,0,0,145,40,1,0,0,0,146,147,7,5,0,0,147,42,1,0,0,0,
148,149,7,6,0,0,149,44,1,0,0,0,150,151,7,7,0,0,151,46,1,0,0,0,152,153,7,
8,0,0,153,48,1,0,0,0,154,155,7,9,0,0,155,50,1,0,0,0,156,157,7,10,0,0,157,
52,1,0,0,0,158,159,7,11,0,0,159,54,1,0,0,0,160,161,7,12,0,0,161,56,1,0,0,
0,162,163,7,13,0,0,163,58,1,0,0,0,164,165,7,14,0,0,165,60,1,0,0,0,166,167,
7,15,0,0,167,62,1,0,0,0,168,169,7,16,0,0,169,64,1,0,0,0,170,171,7,17,0,0,
171,66,1,0,0,0,172,173,7,18,0,0,173,68,1,0,0,0,174,175,7,19,0,0,175,70,1,
0,0,0,176,177,7,20,0,0,177,72,1,0,0,0,178,179,7,21,0,0,179,74,1,0,0,0,180,
181,7,22,0,0,181,76,1,0,0,0,182,183,7,23,0,0,183,78,1,0,0,0,184,185,7,24,
0,0,185,80,1,0,0,0,186,187,7,25,0,0,187,82,1,0,0,0,188,190,7,26,0,0,189,
188,1,0,0,0,190,191,1,0,0,0,191,189,1,0,0,0,191,192,1,0,0,0,192,84,1,0,0,
0,193,197,5,34,0,0,194,196,9,0,0,0,195,194,1,0,0,0,196,199,1,0,0,0,197,198,
1,0,0,0,197,195,1,0,0,0,198,200,1,0,0,0,199,197,1,0,0,0,200,201,5,34,0,0,
201,86,1,0,0,0,202,204,7,27,0,0,203,202,1,0,0,0,204,205,1,0,0,0,205,203,
1,0,0,0,205,206,1,0,0,0,206,207,1,0,0,0,207,208,6,43,0,0,208,88,1,0,0,0,
4,0,191,197,205,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class cqlLexer extends antlr4.Lexer {

    static grammarFileName = "cql.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'>'", "'='", "'('", "')'", "'<'", "'>='", 
                         "'<='", "'<>'", "'=='", "'/'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, "AND", "OR", "NOT", "PROX", 
                          "SORTBY", "CHARSTRING1", "CHARSTRING2", "WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "AND", "OR", "NOT", "PROX", 
                      "SORTBY", "A", "B", "C", "D", "E", "F", "G", "H", 
                      "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", 
                      "S", "T", "U", "V", "W", "X", "Y", "Z", "CHARSTRING1", 
                      "CHARSTRING2", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

cqlLexer.EOF = antlr4.Token.EOF;
cqlLexer.T__0 = 1;
cqlLexer.T__1 = 2;
cqlLexer.T__2 = 3;
cqlLexer.T__3 = 4;
cqlLexer.T__4 = 5;
cqlLexer.T__5 = 6;
cqlLexer.T__6 = 7;
cqlLexer.T__7 = 8;
cqlLexer.T__8 = 9;
cqlLexer.T__9 = 10;
cqlLexer.AND = 11;
cqlLexer.OR = 12;
cqlLexer.NOT = 13;
cqlLexer.PROX = 14;
cqlLexer.SORTBY = 15;
cqlLexer.CHARSTRING1 = 16;
cqlLexer.CHARSTRING2 = 17;
cqlLexer.WS = 18;



