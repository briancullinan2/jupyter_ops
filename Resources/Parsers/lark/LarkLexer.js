// Generated from ./lark/LarkLexer.g4 by ANTLR 4.10.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,26,243,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,1,0,1,0,1,1,1,1,1,2,1,2,
1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,9,1,10,1,10,1,
10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,
1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,
13,1,13,1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,16,1,16,1,17,3,17,130,8,17,
1,18,3,18,133,8,18,1,18,3,18,136,8,18,1,18,1,18,5,18,140,8,18,10,18,12,18,
143,9,18,1,19,3,19,146,8,19,1,19,1,19,5,19,150,8,19,10,19,12,19,153,9,19,
1,20,1,20,3,20,157,8,20,1,21,1,21,1,21,1,21,1,21,1,21,5,21,165,8,21,10,21,
12,21,168,9,21,1,21,1,21,5,21,172,8,21,10,21,12,21,175,9,21,1,22,3,22,178,
8,22,1,22,4,22,181,8,22,11,22,12,22,182,1,22,1,22,1,22,1,22,1,22,1,22,5,
22,191,8,22,10,22,12,22,194,9,22,1,22,1,22,1,23,5,23,199,8,23,10,23,12,23,
202,9,23,1,24,1,24,1,25,1,25,1,25,1,25,1,26,1,26,1,27,1,27,3,27,214,8,27,
1,28,4,28,217,8,28,11,28,12,28,218,1,29,3,29,222,8,29,1,29,1,29,1,30,4,30,
227,8,30,11,30,12,30,228,1,30,1,30,1,31,1,31,1,31,1,31,5,31,237,8,31,10,
31,12,31,240,9,31,1,31,1,31,2,166,200,0,32,1,1,3,2,5,3,7,4,9,5,11,6,13,7,
15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,
20,41,21,43,22,45,23,47,0,49,0,51,0,53,0,55,0,57,0,59,24,61,25,63,26,1,0,
14,2,0,42,43,63,63,2,0,63,63,95,95,1,0,97,122,3,0,48,57,95,95,97,122,1,0,
65,90,3,0,48,57,65,90,95,95,1,0,47,47,5,0,105,105,108,109,115,115,117,117,
120,120,3,0,9,10,12,13,32,32,1,0,34,34,2,0,65,70,97,102,2,0,43,43,45,45,
2,0,9,9,32,32,1,0,10,10,256,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,
0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,
1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,
0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,
0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,1,
65,1,0,0,0,3,67,1,0,0,0,5,69,1,0,0,0,7,71,1,0,0,0,9,73,1,0,0,0,11,75,1,0,
0,0,13,77,1,0,0,0,15,79,1,0,0,0,17,81,1,0,0,0,19,83,1,0,0,0,21,86,1,0,0,
0,23,94,1,0,0,0,25,102,1,0,0,0,27,112,1,0,0,0,29,121,1,0,0,0,31,124,1,0,
0,0,33,126,1,0,0,0,35,129,1,0,0,0,37,132,1,0,0,0,39,145,1,0,0,0,41,154,1,
0,0,0,43,158,1,0,0,0,45,180,1,0,0,0,47,200,1,0,0,0,49,203,1,0,0,0,51,205,
1,0,0,0,53,209,1,0,0,0,55,213,1,0,0,0,57,216,1,0,0,0,59,221,1,0,0,0,61,226,
1,0,0,0,63,232,1,0,0,0,65,66,5,58,0,0,66,2,1,0,0,0,67,68,5,123,0,0,68,4,
1,0,0,0,69,70,5,125,0,0,70,6,1,0,0,0,71,72,5,40,0,0,72,8,1,0,0,0,73,74,5,
41,0,0,74,10,1,0,0,0,75,76,5,91,0,0,76,12,1,0,0,0,77,78,5,93,0,0,78,14,1,
0,0,0,79,80,5,44,0,0,80,16,1,0,0,0,81,82,5,46,0,0,82,18,1,0,0,0,83,84,5,
45,0,0,84,85,5,62,0,0,85,20,1,0,0,0,86,87,5,37,0,0,87,88,5,105,0,0,88,89,
5,103,0,0,89,90,5,110,0,0,90,91,5,111,0,0,91,92,5,114,0,0,92,93,5,101,0,
0,93,22,1,0,0,0,94,95,5,37,0,0,95,96,5,105,0,0,96,97,5,109,0,0,97,98,5,112,
0,0,98,99,5,111,0,0,99,100,5,114,0,0,100,101,5,116,0,0,101,24,1,0,0,0,102,
103,5,37,0,0,103,104,5,111,0,0,104,105,5,118,0,0,105,106,5,101,0,0,106,107,
5,114,0,0,107,108,5,114,0,0,108,109,5,105,0,0,109,110,5,100,0,0,110,111,
5,101,0,0,111,26,1,0,0,0,112,113,5,37,0,0,113,114,5,100,0,0,114,115,5,101,
0,0,115,116,5,99,0,0,116,117,5,108,0,0,117,118,5,97,0,0,118,119,5,114,0,
0,119,120,5,101,0,0,120,28,1,0,0,0,121,122,5,46,0,0,122,123,5,46,0,0,123,
30,1,0,0,0,124,125,5,126,0,0,125,32,1,0,0,0,126,127,5,124,0,0,127,34,1,0,
0,0,128,130,7,0,0,0,129,128,1,0,0,0,130,36,1,0,0,0,131,133,5,33,0,0,132,
131,1,0,0,0,132,133,1,0,0,0,133,135,1,0,0,0,134,136,7,1,0,0,135,134,1,0,
0,0,135,136,1,0,0,0,136,137,1,0,0,0,137,141,7,2,0,0,138,140,7,3,0,0,139,
138,1,0,0,0,140,143,1,0,0,0,141,139,1,0,0,0,141,142,1,0,0,0,142,38,1,0,0,
0,143,141,1,0,0,0,144,146,5,95,0,0,145,144,1,0,0,0,145,146,1,0,0,0,146,147,
1,0,0,0,147,151,7,4,0,0,148,150,7,5,0,0,149,148,1,0,0,0,150,153,1,0,0,0,
151,149,1,0,0,0,151,152,1,0,0,0,152,40,1,0,0,0,153,151,1,0,0,0,154,156,3,
51,25,0,155,157,5,105,0,0,156,155,1,0,0,0,156,157,1,0,0,0,157,42,1,0,0,0,
158,166,5,47,0,0,159,160,5,92,0,0,160,165,5,47,0,0,161,162,5,92,0,0,162,
165,5,92,0,0,163,165,8,6,0,0,164,159,1,0,0,0,164,161,1,0,0,0,164,163,1,0,
0,0,165,168,1,0,0,0,166,167,1,0,0,0,166,164,1,0,0,0,167,169,1,0,0,0,168,
166,1,0,0,0,169,173,5,47,0,0,170,172,7,7,0,0,171,170,1,0,0,0,172,175,1,0,
0,0,173,171,1,0,0,0,173,174,1,0,0,0,174,44,1,0,0,0,175,173,1,0,0,0,176,178,
5,13,0,0,177,176,1,0,0,0,177,178,1,0,0,0,178,179,1,0,0,0,179,181,5,10,0,
0,180,177,1,0,0,0,181,182,1,0,0,0,182,180,1,0,0,0,182,183,1,0,0,0,183,192,
1,0,0,0,184,191,7,8,0,0,185,186,5,117,0,0,186,187,5,50,0,0,187,188,5,66,
0,0,188,189,5,55,0,0,189,191,5,70,0,0,190,184,1,0,0,0,190,185,1,0,0,0,191,
194,1,0,0,0,192,190,1,0,0,0,192,193,1,0,0,0,193,195,1,0,0,0,194,192,1,0,
0,0,195,196,6,22,0,0,196,46,1,0,0,0,197,199,8,9,0,0,198,197,1,0,0,0,199,
202,1,0,0,0,200,201,1,0,0,0,200,198,1,0,0,0,201,48,1,0,0,0,202,200,1,0,0,
0,203,204,3,47,23,0,204,50,1,0,0,0,205,206,5,34,0,0,206,207,3,49,24,0,207,
208,5,34,0,0,208,52,1,0,0,0,209,210,2,48,57,0,210,54,1,0,0,0,211,214,7,10,
0,0,212,214,3,53,26,0,213,211,1,0,0,0,213,212,1,0,0,0,214,56,1,0,0,0,215,
217,3,53,26,0,216,215,1,0,0,0,217,218,1,0,0,0,218,216,1,0,0,0,218,219,1,
0,0,0,219,58,1,0,0,0,220,222,7,11,0,0,221,220,1,0,0,0,221,222,1,0,0,0,222,
223,1,0,0,0,223,224,3,57,28,0,224,60,1,0,0,0,225,227,7,12,0,0,226,225,1,
0,0,0,227,228,1,0,0,0,228,226,1,0,0,0,228,229,1,0,0,0,229,230,1,0,0,0,230,
231,6,30,0,0,231,62,1,0,0,0,232,233,5,47,0,0,233,234,5,47,0,0,234,238,1,
0,0,0,235,237,8,13,0,0,236,235,1,0,0,0,237,240,1,0,0,0,238,236,1,0,0,0,238,
239,1,0,0,0,239,241,1,0,0,0,240,238,1,0,0,0,241,242,6,31,0,0,242,64,1,0,
0,0,21,0,129,132,135,141,145,151,156,164,166,173,177,182,190,192,200,213,
218,221,228,238,1,0,2,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class LarkLexer extends antlr4.Lexer {

    static grammarFileName = "LarkLexer.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN", "OFF_CHANNEL" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "':'", "'{'", "'}'", "'('", "')'", "'['", 
                         "']'", "','", "'.'", "'->'", "'%ignore'", "'%import'", 
                         "'%override'", "'%declare'", "'..'", "'~'", "'|'" ];
	static symbolicNames = [ null, "COLON", "LC", "RC", "LP", "RP", "LB", "RB", 
                          "COMMA", "DOT", "ARROW", "IGNORE", "IMPORT", "OVERRIDE", 
                          "DECLARE", "DD", "SQ", "VBAR", "OP", "RULE", "TOKEN", 
                          "STRING", "REGEXP", "NL", "NUMBER", "WS_INLINE", 
                          "COMMENT" ];
	static ruleNames = [ "COLON", "LC", "RC", "LP", "RP", "LB", "RB", "COMMA", 
                      "DOT", "ARROW", "IGNORE", "IMPORT", "OVERRIDE", "DECLARE", 
                      "DD", "SQ", "VBAR", "OP", "RULE", "TOKEN", "STRING", 
                      "REGEXP", "NL", "STRING_INNER", "STRING_ESC_INNER", 
                      "FSTRING", "DIGIT", "HEXDIGIT", "INT", "NUMBER", "WS_INLINE", 
                      "COMMENT" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

LarkLexer.EOF = antlr4.Token.EOF;
LarkLexer.COLON = 1;
LarkLexer.LC = 2;
LarkLexer.RC = 3;
LarkLexer.LP = 4;
LarkLexer.RP = 5;
LarkLexer.LB = 6;
LarkLexer.RB = 7;
LarkLexer.COMMA = 8;
LarkLexer.DOT = 9;
LarkLexer.ARROW = 10;
LarkLexer.IGNORE = 11;
LarkLexer.IMPORT = 12;
LarkLexer.OVERRIDE = 13;
LarkLexer.DECLARE = 14;
LarkLexer.DD = 15;
LarkLexer.SQ = 16;
LarkLexer.VBAR = 17;
LarkLexer.OP = 18;
LarkLexer.RULE = 19;
LarkLexer.TOKEN = 20;
LarkLexer.STRING = 21;
LarkLexer.REGEXP = 22;
LarkLexer.NL = 23;
LarkLexer.NUMBER = 24;
LarkLexer.WS_INLINE = 25;
LarkLexer.COMMENT = 26;

LarkLexer.OFF_CHANNEL = 2;



