// Generated from ./graphstream-dgs/DGSLexer.g4 by ANTLR 4.10.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,31,255,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,
7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,
2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,
19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,
7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,
33,2,34,7,34,2,35,7,35,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,3,
0,87,8,0,1,1,1,1,1,1,1,2,1,2,1,2,1,3,1,3,1,3,1,4,1,4,1,4,1,5,1,5,1,5,1,6,
1,6,1,6,1,7,1,7,1,7,1,8,1,8,1,8,1,9,1,9,1,9,1,10,3,10,117,8,10,1,10,1,10,
1,10,5,10,122,8,10,10,10,12,10,125,9,10,3,10,127,8,10,1,11,1,11,1,11,5,11,
132,8,11,10,11,12,11,135,9,11,3,11,137,8,11,1,11,1,11,3,11,141,8,11,1,11,
5,11,144,8,11,10,11,12,11,147,9,11,1,11,3,11,150,8,11,1,12,1,12,1,13,1,13,
1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,
21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,24,3,24,179,8,24,1,25,1,25,5,25,
183,8,25,10,25,12,25,186,9,25,1,26,1,26,3,26,190,8,26,1,27,1,27,1,27,5,27,
195,8,27,10,27,12,27,198,9,27,1,27,1,27,1,28,1,28,1,28,1,28,3,28,206,8,28,
1,29,1,29,1,29,5,29,211,8,29,10,29,12,29,214,9,29,1,29,1,29,1,30,1,30,1,
30,1,30,3,30,222,8,30,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,3,32,232,8,
32,1,33,1,33,1,33,1,33,1,33,1,34,4,34,240,8,34,11,34,12,34,241,1,34,1,34,
1,35,5,35,247,8,35,10,35,12,35,250,9,35,1,35,1,35,1,35,1,35,3,196,212,248,
0,36,2,1,4,2,6,3,8,4,10,5,12,6,14,7,16,8,18,9,20,10,22,11,24,12,26,13,28,
14,30,15,32,16,34,17,36,18,38,19,40,20,42,21,44,22,46,23,48,24,50,25,52,
26,54,27,56,0,58,0,60,0,62,0,64,0,66,28,68,29,70,30,72,31,2,0,1,9,2,0,43,
43,45,45,1,0,49,57,1,0,48,57,2,0,69,69,101,101,2,0,10,10,13,13,2,0,65,90,
97,122,5,0,45,45,48,57,65,90,95,95,97,122,3,0,48,57,65,70,97,102,2,0,9,9,
32,32,269,0,2,1,0,0,0,0,4,1,0,0,0,0,6,1,0,0,0,0,8,1,0,0,0,0,10,1,0,0,0,0,
12,1,0,0,0,0,14,1,0,0,0,0,16,1,0,0,0,0,18,1,0,0,0,0,20,1,0,0,0,0,22,1,0,
0,0,0,24,1,0,0,0,0,26,1,0,0,0,0,28,1,0,0,0,0,30,1,0,0,0,0,32,1,0,0,0,0,34,
1,0,0,0,0,36,1,0,0,0,0,38,1,0,0,0,0,40,1,0,0,0,0,42,1,0,0,0,0,44,1,0,0,0,
0,46,1,0,0,0,0,48,1,0,0,0,0,50,1,0,0,0,0,52,1,0,0,0,0,54,1,0,0,0,0,66,1,
0,0,0,0,68,1,0,0,0,0,70,1,0,0,0,1,72,1,0,0,0,2,86,1,0,0,0,4,88,1,0,0,0,6,
91,1,0,0,0,8,94,1,0,0,0,10,97,1,0,0,0,12,100,1,0,0,0,14,103,1,0,0,0,16,106,
1,0,0,0,18,109,1,0,0,0,20,112,1,0,0,0,22,116,1,0,0,0,24,128,1,0,0,0,26,151,
1,0,0,0,28,153,1,0,0,0,30,155,1,0,0,0,32,157,1,0,0,0,34,159,1,0,0,0,36,161,
1,0,0,0,38,163,1,0,0,0,40,165,1,0,0,0,42,167,1,0,0,0,44,169,1,0,0,0,46,171,
1,0,0,0,48,173,1,0,0,0,50,178,1,0,0,0,52,180,1,0,0,0,54,189,1,0,0,0,56,191,
1,0,0,0,58,205,1,0,0,0,60,207,1,0,0,0,62,221,1,0,0,0,64,223,1,0,0,0,66,226,
1,0,0,0,68,233,1,0,0,0,70,239,1,0,0,0,72,248,1,0,0,0,74,75,5,68,0,0,75,76,
5,71,0,0,76,77,5,83,0,0,77,78,5,48,0,0,78,79,5,48,0,0,79,87,5,52,0,0,80,
81,5,68,0,0,81,82,5,71,0,0,82,83,5,83,0,0,83,84,5,48,0,0,84,85,5,48,0,0,
85,87,5,51,0,0,86,74,1,0,0,0,86,80,1,0,0,0,87,3,1,0,0,0,88,89,5,97,0,0,89,
90,5,110,0,0,90,5,1,0,0,0,91,92,5,99,0,0,92,93,5,110,0,0,93,7,1,0,0,0,94,
95,5,100,0,0,95,96,5,110,0,0,96,9,1,0,0,0,97,98,5,97,0,0,98,99,5,101,0,0,
99,11,1,0,0,0,100,101,5,99,0,0,101,102,5,101,0,0,102,13,1,0,0,0,103,104,
5,100,0,0,104,105,5,101,0,0,105,15,1,0,0,0,106,107,5,99,0,0,107,108,5,103,
0,0,108,17,1,0,0,0,109,110,5,115,0,0,110,111,5,116,0,0,111,19,1,0,0,0,112,
113,5,99,0,0,113,114,5,108,0,0,114,21,1,0,0,0,115,117,7,0,0,0,116,115,1,
0,0,0,116,117,1,0,0,0,117,126,1,0,0,0,118,127,5,48,0,0,119,123,7,1,0,0,120,
122,7,2,0,0,121,120,1,0,0,0,122,125,1,0,0,0,123,121,1,0,0,0,123,124,1,0,
0,0,124,127,1,0,0,0,125,123,1,0,0,0,126,118,1,0,0,0,126,119,1,0,0,0,127,
23,1,0,0,0,128,136,3,22,10,0,129,133,5,46,0,0,130,132,7,2,0,0,131,130,1,
0,0,0,132,135,1,0,0,0,133,131,1,0,0,0,133,134,1,0,0,0,134,137,1,0,0,0,135,
133,1,0,0,0,136,129,1,0,0,0,136,137,1,0,0,0,137,149,1,0,0,0,138,140,7,3,
0,0,139,141,7,0,0,0,140,139,1,0,0,0,140,141,1,0,0,0,141,145,1,0,0,0,142,
144,7,2,0,0,143,142,1,0,0,0,144,147,1,0,0,0,145,143,1,0,0,0,145,146,1,0,
0,0,146,148,1,0,0,0,147,145,1,0,0,0,148,150,7,1,0,0,149,138,1,0,0,0,149,
150,1,0,0,0,150,25,1,0,0,0,151,152,5,43,0,0,152,27,1,0,0,0,153,154,5,45,
0,0,154,29,1,0,0,0,155,156,5,44,0,0,156,31,1,0,0,0,157,158,5,123,0,0,158,
33,1,0,0,0,159,160,5,125,0,0,160,35,1,0,0,0,161,162,5,91,0,0,162,37,1,0,
0,0,163,164,5,93,0,0,164,39,1,0,0,0,165,166,5,46,0,0,166,41,1,0,0,0,167,
168,5,60,0,0,168,43,1,0,0,0,169,170,5,62,0,0,170,45,1,0,0,0,171,172,5,61,
0,0,172,47,1,0,0,0,173,174,5,58,0,0,174,49,1,0,0,0,175,179,7,4,0,0,176,177,
5,13,0,0,177,179,5,10,0,0,178,175,1,0,0,0,178,176,1,0,0,0,179,51,1,0,0,0,
180,184,7,5,0,0,181,183,7,6,0,0,182,181,1,0,0,0,183,186,1,0,0,0,184,182,
1,0,0,0,184,185,1,0,0,0,185,53,1,0,0,0,186,184,1,0,0,0,187,190,3,60,29,0,
188,190,3,56,27,0,189,187,1,0,0,0,189,188,1,0,0,0,190,55,1,0,0,0,191,196,
5,34,0,0,192,195,3,58,28,0,193,195,9,0,0,0,194,192,1,0,0,0,194,193,1,0,0,
0,195,198,1,0,0,0,196,197,1,0,0,0,196,194,1,0,0,0,197,199,1,0,0,0,198,196,
1,0,0,0,199,200,5,34,0,0,200,57,1,0,0,0,201,202,5,92,0,0,202,206,5,34,0,
0,203,204,5,92,0,0,204,206,5,92,0,0,205,201,1,0,0,0,205,203,1,0,0,0,206,
59,1,0,0,0,207,212,5,39,0,0,208,211,3,62,30,0,209,211,9,0,0,0,210,208,1,
0,0,0,210,209,1,0,0,0,211,214,1,0,0,0,212,213,1,0,0,0,212,210,1,0,0,0,213,
215,1,0,0,0,214,212,1,0,0,0,215,216,5,39,0,0,216,61,1,0,0,0,217,218,5,92,
0,0,218,222,5,39,0,0,219,220,5,92,0,0,220,222,5,92,0,0,221,217,1,0,0,0,221,
219,1,0,0,0,222,63,1,0,0,0,223,224,7,7,0,0,224,225,7,7,0,0,225,65,1,0,0,
0,226,227,5,35,0,0,227,228,3,64,31,0,228,229,3,64,31,0,229,231,3,64,31,0,
230,232,3,64,31,0,231,230,1,0,0,0,231,232,1,0,0,0,232,67,1,0,0,0,233,234,
5,35,0,0,234,235,1,0,0,0,235,236,6,33,0,0,236,237,6,33,1,0,237,69,1,0,0,
0,238,240,7,8,0,0,239,238,1,0,0,0,240,241,1,0,0,0,241,239,1,0,0,0,241,242,
1,0,0,0,242,243,1,0,0,0,243,244,6,34,1,0,244,71,1,0,0,0,245,247,9,0,0,0,
246,245,1,0,0,0,247,250,1,0,0,0,248,249,1,0,0,0,248,246,1,0,0,0,249,251,
1,0,0,0,250,248,1,0,0,0,251,252,3,50,24,0,252,253,1,0,0,0,253,254,6,35,2,
0,254,73,1,0,0,0,23,0,1,86,116,123,126,133,136,140,145,149,178,184,189,194,
196,205,210,212,221,231,241,248,3,5,1,0,6,0,0,4,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class DGSLexer extends antlr4.Lexer {

    static grammarFileName = "DGSLexer.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE", "CMT" ];
	static literalNames = [ null, null, "'an'", "'cn'", "'dn'", "'ae'", "'ce'", 
                         "'de'", "'cg'", "'st'", "'cl'", null, null, "'+'", 
                         "'-'", "','", "'{'", "'}'", "'['", "']'", "'.'", 
                         "'<'", "'>'", "'='", "':'", null, null, null, null, 
                         "'#'" ];
	static symbolicNames = [ null, "MAGIC", "AN", "CN", "DN", "AE", "CE", "DE", 
                          "CG", "ST", "CL", "INT", "REAL", "PLUS", "MINUS", 
                          "COMMA", "LBRACE", "RBRACE", "LBRACK", "RBRACK", 
                          "DOT", "LANGLE", "RANGLE", "EQUALS", "COLON", 
                          "EOL", "WORD", "STRING", "COLOR", "START_COMMENT", 
                          "WS", "COMMENT" ];
	static ruleNames = [ "MAGIC", "AN", "CN", "DN", "AE", "CE", "DE", "CG", 
                      "ST", "CL", "INT", "REAL", "PLUS", "MINUS", "COMMA", 
                      "LBRACE", "RBRACE", "LBRACK", "RBRACK", "DOT", "LANGLE", 
                      "RANGLE", "EQUALS", "COLON", "EOL", "WORD", "STRING", 
                      "DQSTRING", "DQESC", "SQSTRING", "SQESC", "HEXBYTE", 
                      "COLOR", "START_COMMENT", "WS", "COMMENT" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

DGSLexer.EOF = antlr4.Token.EOF;
DGSLexer.MAGIC = 1;
DGSLexer.AN = 2;
DGSLexer.CN = 3;
DGSLexer.DN = 4;
DGSLexer.AE = 5;
DGSLexer.CE = 6;
DGSLexer.DE = 7;
DGSLexer.CG = 8;
DGSLexer.ST = 9;
DGSLexer.CL = 10;
DGSLexer.INT = 11;
DGSLexer.REAL = 12;
DGSLexer.PLUS = 13;
DGSLexer.MINUS = 14;
DGSLexer.COMMA = 15;
DGSLexer.LBRACE = 16;
DGSLexer.RBRACE = 17;
DGSLexer.LBRACK = 18;
DGSLexer.RBRACK = 19;
DGSLexer.DOT = 20;
DGSLexer.LANGLE = 21;
DGSLexer.RANGLE = 22;
DGSLexer.EQUALS = 23;
DGSLexer.COLON = 24;
DGSLexer.EOL = 25;
DGSLexer.WORD = 26;
DGSLexer.STRING = 27;
DGSLexer.COLOR = 28;
DGSLexer.START_COMMENT = 29;
DGSLexer.WS = 30;
DGSLexer.COMMENT = 31;

DGSLexer.CMT = 1;




