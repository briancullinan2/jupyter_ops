{
    "nodes": [
        {
            "id": "image magik commands.ipynb[0]",
            "cell": "reduce noise from images after resizing",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llama vision.ipynb[0]",
            "cell": "llama vision",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llama vision.ipynb[1]",
            "cell": "analyze image with llm",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llama vision.ipynb[10]",
            "cell": "mask image",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llama vision.ipynb[11]",
            "cell": "inpaint mask",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llama vision.ipynb[12]",
            "cell": "image 2 image",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llama vision.ipynb[13]",
            "cell": "whisk images",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llama vision.ipynb[7]",
            "cell": "ollama vision request",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llm writing.ipynb[4]",
            "cell": "select llm",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llama vision.ipynb[9]",
            "cell": "stable diffusion request",
            "route": "ROUTE = /txt2img-images",
            "service": "Algorithms"
        },
        {
            "id": "llama vision.ipynb[14]",
            "cell": "local lumina",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llama vision.ipynb[15]",
            "cell": "stability 3.5",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llama vision.ipynb[16]",
            "cell": "login huggingface",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llama vision.ipynb[2]",
            "cell": "llm deceive",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llama vision.ipynb[5]",
            "cell": "llm voice",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llama vision.ipynb[8]",
            "cell": "start a bunch of llm rpc services",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llama.ipynb[0]",
            "cell": "search llama",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llama.ipynb[4]",
            "cell": "ask llm about functions",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llama.ipynb[1]",
            "cell": "ask llm about categories",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llama.ipynb[9]",
            "cell": "store all notebook llm functions",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llama.ipynb[10]",
            "cell": "create llm session",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llama.ipynb[2]",
            "cell": "ask llm to generalize categories",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llama.ipynb[8]",
            "cell": "store llama function",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llama.ipynb[3]",
            "cell": "ask llm for a shorter list of categories",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llama.ipynb[5]",
            "cell": "ask llm about code",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llama.ipynb[6]",
            "cell": "ask llm about notebooks",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "files.ipynb[5]",
            "cell": "list project files",
            "route": "",
            "service": "Core"
        },
        {
            "id": "llama.ipynb[7]",
            "cell": "ask llm to summerize",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "syntax.ipynb[7]",
            "cell": "get parameter names",
            "route": "",
            "service": "Core"
        },
        {
            "id": "dylib.ipynb[5]",
            "cell": "get c parameters",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "python.ipynb[2]",
            "cell": "python params in antrl",
            "route": "",
            "service": "Languages"
        },
        {
            "id": "llm blogging.ipynb[0]",
            "cell": "blog about code",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llm blogging.ipynb[1]",
            "cell": "parse patch file",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "data collection.ipynb[7]",
            "cell": "domain cache tools",
            "route": "",
            "service": "Analytics"
        },
        {
            "id": "llm blogging.ipynb[2]",
            "cell": "TODO: summerize file changesdownloads try to infer purposeuse file watcher install time machine  i version my entire disk",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llm chat.ipynb[0]",
            "cell": "store llm response",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llm tools.ipynb[1]",
            "cell": "ask llm about emotions",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llm chat.ipynb[1]",
            "cell": "general chit chat",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llm chat.ipynb[2]",
            "cell": "relevant llm history",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llm chat.ipynb[3]",
            "cell": "relevant chat keywords",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llm chat.ipynb[4]",
            "cell": "relevant history timestamps",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llm chat.ipynb[5]",
            "cell": "classify llm prompt",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "syntax.ipynb[5]",
            "cell": "get exports from source",
            "route": "",
            "service": "Core"
        },
        {
            "id": "llm chat.ipynb[6]",
            "cell": "handle conversation",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llm chat.ipynb[7]",
            "cell": "add conversation context",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "git index.ipynb[19]",
            "cell": "determine language",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "llm chat.ipynb[8]",
            "cell": "llm load memories",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "python.ipynb[1]",
            "cell": "list c functions with python",
            "route": "",
            "service": "Languages"
        },
        {
            "id": "llm chat.ipynb[9]",
            "cell": "llm save memories",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llm scaffold.ipynb[0]",
            "cell": "llm scaffold",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llm scaffold.ipynb[1]",
            "cell": "bash project files",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llm scaffold.ipynb[2]",
            "cell": "generate code",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llm scaffold.ipynb[3]",
            "cell": "make code file with llm",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llm scaffold.ipynb[4]",
            "cell": "edit code cell in notebook",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llm scaffold.ipynb[5]",
            "cell": "add llm code cell",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llm tools.ipynb[0]",
            "cell": "scan chat logs",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llm tools.ipynb[2]",
            "cell": "cache chat logs",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llm tools.ipynb[3]",
            "cell": "ask llm about chat conversations",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llm tools.ipynb[4]",
            "cell": "llm respond like a personality",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llm writing.ipynb[0]",
            "cell": "business plan llm",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llm writing.ipynb[1]",
            "cell": "write creatively llm",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llm writing.ipynb[5]",
            "cell": "ask llm to write chapter titles and descriptions",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llm writing.ipynb[2]",
            "cell": "argue with multiple llms",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llm writing.ipynb[3]",
            "cell": "research paper llm",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llm writing.ipynb[6]",
            "cell": "ask llm to brainstorm",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llm writing.ipynb[7]",
            "cell": "write a grant proposal with llm",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llm writing.ipynb[8]",
            "cell": "decode xlsx spreadsheet",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "llm writing.ipynb[9]",
            "cell": "elaborate list with llm",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "opencv.ipynb[0]",
            "cell": "detect people",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "opencv.ipynb[1]",
            "cell": "motion detection",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "opencv.ipynb[10]",
            "cell": "transition live stream",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "opencv.ipynb[9]",
            "cell": "bind youtube stream",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "opencv.ipynb[8]",
            "cell": "list live stream",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "opencv.ipynb[2]",
            "cell": "python write video",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "opencv.ipynb[3]",
            "cell": "python write images to ffmpeg stream",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "opencv.ipynb[4]",
            "cell": "create a live streaming request",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "opencv.ipynb[5]",
            "cell": "authorize youtube in python",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "opencv.ipynb[6]",
            "cell": "list broadcasts",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "opencv.ipynb[7]",
            "cell": "create live stream",
            "route": "",
            "service": "Algorithms"
        },
        {
            "id": "calculations for life.ipynb[0]",
            "cell": "This does not include vacation days since I was 14 and moved away from Ohio. Maybe 1 week every 3 years average",
            "route": "",
            "service": "Analytics"
        },
        {
            "id": "data collection.ipynb[0]",
            "cell": "Crime reports",
            "route": "",
            "service": "Analytics"
        },
        {
            "id": "data collection.ipynb[1]",
            "cell": "https://www.amazon.com/gp/yourstore/iyr/ref=pd_ys_iyr_nextie=UTF8&collection=watched&iyrGroup=&maxItem=616&minItem=600",
            "route": "",
            "service": "Analytics"
        },
        {
            "id": "data collection.ipynb[10]",
            "cell": "schedule crawl domain",
            "route": "",
            "service": "Analytics"
        },
        {
            "id": "dates.ipynb[1]",
            "cell": "Convert a date to ISO",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "google calendar.ipynb[8]",
            "cell": "create new calendar event",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google calendar.ipynb[0]",
            "cell": "use Google calendar API",
            "route": "",
            "service": "Google"
        },
        {
            "id": "data collection.ipynb[11]",
            "cell": "collect all bookmarks",
            "route": "",
            "service": "Analytics"
        },
        {
            "id": "google calendar data.ipynb[2]",
            "cell": "Parse bookmarks file",
            "route": "",
            "service": "Google"
        },
        {
            "id": "data collection.ipynb[6]",
            "cell": "crawl domain",
            "route": "",
            "service": "Analytics"
        },
        {
            "id": "data collection.ipynb[8]",
            "cell": "browser crawler tools",
            "route": "",
            "service": "Analytics"
        },
        {
            "id": "data collection.ipynb[12]",
            "cell": "search results as json",
            "route": "",
            "service": "Analytics"
        },
        {
            "id": "data collection.ipynb[2]",
            "cell": "meta search all",
            "route": "",
            "service": "Analytics"
        },
        {
            "id": "data collection.ipynb[5]",
            "cell": "multi crawl",
            "route": "",
            "service": "Analytics"
        },
        {
            "id": "data collection.ipynb[3]",
            "cell": "schedule search all",
            "route": "",
            "service": "Analytics"
        },
        {
            "id": "data collection.ipynb[4]",
            "cell": "tell joke",
            "route": "",
            "service": "Analytics"
        },
        {
            "id": "webdriver.ipynb[0]",
            "cell": "selenium client",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "syntax.ipynb[19]",
            "cell": "select ast",
            "route": "",
            "service": "Core"
        },
        {
            "id": "files.ipynb[3]",
            "cell": "glob files",
            "route": "",
            "service": "Core"
        },
        {
            "id": "patterns.ipynb[2]",
            "cell": "select tree",
            "route": "",
            "service": "Core"
        },
        {
            "id": "data collection.ipynb[9]",
            "cell": "analyze cache file",
            "route": "",
            "service": "Analytics"
        },
        {
            "id": "movie database.ipynb[0]",
            "cell": "install movie database",
            "route": "",
            "service": "Analytics"
        },
        {
            "id": "movie database.ipynb[4]",
            "cell": "create movie database tables",
            "route": "",
            "service": "Analytics"
        },
        {
            "id": "movie database.ipynb[1]",
            "cell": "Find cross section of actors and movies",
            "route": "",
            "service": "Analytics"
        },
        {
            "id": "levenshtein.ipynb[1]",
            "cell": "Sort by levenshtein distance",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "movie database.ipynb[3]",
            "cell": "use elastic search from node",
            "route": "",
            "service": "Analytics"
        },
        {
            "id": "movie database.ipynb[5]",
            "cell": "express handle movie search",
            "route": "ROUTE = /movies",
            "service": "Analytics"
        },
        {
            "id": "movie database.ipynb[8]",
            "cell": "movie tile",
            "route": "",
            "service": "Analytics"
        },
        {
            "id": "movie database.ipynb[6]",
            "cell": "express list movies database",
            "route": "ROUTE = /movies",
            "service": "Analytics"
        },
        {
            "id": "movie database.ipynb[7]",
            "cell": "movie page",
            "route": "",
            "service": "Analytics"
        },
        {
            "id": "parsing email addresses.ipynb[0]",
            "cell": "search google email format",
            "route": "",
            "service": "Analytics"
        },
        {
            "id": "google search api.ipynb[0]",
            "cell": "search the web",
            "route": "",
            "service": "Google"
        },
        {
            "id": "reconcile timeline data.ipynb[0]",
            "cell": "read Google calendar and timeline data",
            "route": "",
            "service": "Analytics"
        },
        {
            "id": "resume.ipynb[0]",
            "cell": "course list pie chart",
            "route": "",
            "service": "Analytics"
        },
        {
            "id": "google sheets.ipynb[3]",
            "cell": "get google data sheet",
            "route": "",
            "service": "Google"
        },
        {
            "id": "d3.ipynb[3]",
            "cell": "d3 pie chart",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "resume.ipynb[1]",
            "cell": "test course list pie chart",
            "route": "",
            "service": "Analytics"
        },
        {
            "id": "stable diffusion.ipynb[0]",
            "cell": "rename txt2img directories",
            "route": "",
            "service": "Art"
        },
        {
            "id": "aws.ipynb[0]",
            "cell": "aws rpc wrapper",
            "route": "",
            "service": "Cloud Services"
        },
        {
            "id": "rpc.ipynb[6]",
            "cell": "rpc result",
            "route": "",
            "service": "Core"
        },
        {
            "id": "bash.ipynb[6]",
            "cell": "copy credentials",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "aws.ipynb[1]",
            "cell": "latest s3 bucket",
            "route": "",
            "service": "Cloud Services"
        },
        {
            "id": "deploy host.ipynb[0]",
            "cell": "deploy aws",
            "route": "",
            "service": "Cloud Services"
        },
        {
            "id": "google cloud api.ipynb[0]",
            "cell": "list google bucket url map",
            "route": "",
            "service": "Cloud Services"
        },
        {
            "id": "google cloud api.ipynb[9]",
            "cell": "authorize google service",
            "route": "",
            "service": "Cloud Services"
        },
        {
            "id": "google cloud api.ipynb[1]",
            "cell": "test list url map",
            "route": "",
            "service": "Cloud Services"
        },
        {
            "id": "google cloud api.ipynb[10]",
            "cell": "setup sheet backend",
            "route": "",
            "service": "Cloud Services"
        },
        {
            "id": "convert spreadsheet.ipynb[1]",
            "cell": "get sheet purchases",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "google cloud api.ipynb[6]",
            "cell": "check dns",
            "route": "",
            "service": "Cloud Services"
        },
        {
            "id": "google cloud api.ipynb[3]",
            "cell": "add a google bucket web map",
            "route": "",
            "service": "Cloud Services"
        },
        {
            "id": "google cloud api.ipynb[2]",
            "cell": "wait for cloud operation",
            "route": "",
            "service": "Cloud Services"
        },
        {
            "id": "google storage api.ipynb[0]",
            "cell": "create a bucket",
            "route": "",
            "service": "Cloud Services"
        },
        {
            "id": "google cloud api.ipynb[4]",
            "cell": "test global forward",
            "route": "",
            "service": "Cloud Services"
        },
        {
            "id": "google cloud api.ipynb[5]",
            "cell": "test bucket web map",
            "route": "",
            "service": "Cloud Services"
        },
        {
            "id": "google cloud api.ipynb[7]",
            "cell": "test check dns",
            "route": "",
            "service": "Cloud Services"
        },
        {
            "id": "google cloud api.ipynb[8]",
            "cell": "invalidate cdn cache",
            "route": "",
            "service": "Cloud Services"
        },
        {
            "id": "google cloud commands.ipynb[0]",
            "cell": "upload output to google cloud storage",
            "route": "",
            "service": "Cloud Services"
        },
        {
            "id": "google cloud commands.ipynb[1]",
            "cell": "add public permissions to google cloud storage",
            "route": "",
            "service": "Cloud Services"
        },
        {
            "id": "google cloud commands.ipynb[2]",
            "cell": "copy html to google cloud storage",
            "route": "",
            "service": "Cloud Services"
        },
        {
            "id": "google cloud commands.ipynb[3]",
            "cell": "test command arguments",
            "route": "",
            "service": "Cloud Services"
        },
        {
            "id": "google cloud commands.ipynb[4]",
            "cell": "deploy a cloud function",
            "route": "",
            "service": "Cloud Services"
        },
        {
            "id": "google rpc.ipynb[0]",
            "cell": "firebase rpc wrapper",
            "route": "",
            "service": "Cloud Services"
        },
        {
            "id": "google rpc.ipynb[1]",
            "cell": "google cloud function rpc wrapper",
            "route": "",
            "service": "Cloud Services"
        },
        {
            "id": "rpc.ipynb[7]",
            "cell": "get environment",
            "route": "",
            "service": "Core"
        },
        {
            "id": "google rpc.ipynb[2]",
            "cell": "test google express rpc handler",
            "route": "",
            "service": "Cloud Services"
        },
        {
            "id": "google rpc.ipynb[3]",
            "cell": "generic gcloud function handler",
            "route": "",
            "service": "Cloud Services"
        },
        {
            "id": "notebook.ipynb[13]",
            "cell": "nice name",
            "route": "",
            "service": "Core"
        },
        {
            "id": "zuora to eloqua.ipynb[15]",
            "cell": "aws entry point",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "google storage api.ipynb[1]",
            "cell": "test create bucket",
            "route": "",
            "service": "Cloud Services"
        },
        {
            "id": "google storage api.ipynb[2]",
            "cell": "test stream to output",
            "route": "",
            "service": "Cloud Services"
        },
        {
            "id": "files.ipynb[14]",
            "cell": "mkdirp",
            "route": "",
            "service": "Core"
        },
        {
            "id": "google storage api.ipynb[3]",
            "cell": "fetch file or stream",
            "route": "",
            "service": "Cloud Services"
        },
        {
            "id": "google storage api.ipynb[4]",
            "cell": "upload files to google cloud",
            "route": "",
            "service": "Cloud Services"
        },
        {
            "id": "google storage api.ipynb[5]",
            "cell": "copy a file in storage bucket",
            "route": "",
            "service": "Cloud Services"
        },
        {
            "id": "google storage api.ipynb[6]",
            "cell": "test upload files to google storage",
            "route": "",
            "service": "Cloud Services"
        },
        {
            "id": "aspects.ipynb[0]",
            "cell": "inspect every statement",
            "route": "",
            "service": "Core"
        },
        {
            "id": "languages.ipynb[3]",
            "cell": "transpile code",
            "route": "",
            "service": "Core"
        },
        {
            "id": "syntax.ipynb[16]",
            "cell": "html to tree",
            "route": "",
            "service": "Core"
        },
        {
            "id": "files.ipynb[1]",
            "cell": "project word-cloud",
            "route": "",
            "service": "Core"
        },
        {
            "id": "d3.ipynb[0]",
            "cell": "Create a word-cloud",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "files.ipynb[11]",
            "cell": "(=\\{((:[^{}]++|\\{(1)\\})++)\\})",
            "route": "",
            "service": "Core"
        },
        {
            "id": "files.ipynb[13]",
            "cell": "file tools match filename",
            "route": "",
            "service": "Core"
        },
        {
            "id": "minimatch.ipynb[2]",
            "cell": "minimatch",
            "route": "",
            "service": "Languages"
        },
        {
            "id": "files.ipynb[15]",
            "cell": "changing file names",
            "route": "",
            "service": "Core"
        },
        {
            "id": "files.ipynb[16]",
            "cell": "use memory-fs and rewire to audit cli events",
            "route": "",
            "service": "Core"
        },
        {
            "id": "files.ipynb[17]",
            "cell": "TODO: combine with DOM minimizing service from recording app",
            "route": "",
            "service": "Core"
        },
        {
            "id": "files.ipynb[2]",
            "cell": "project imports d3 tree",
            "route": "",
            "service": "Core"
        },
        {
            "id": "files.ipynb[6]",
            "cell": "common ignore paths",
            "route": "",
            "service": "Core"
        },
        {
            "id": "files.ipynb[7]",
            "cell": "List all projects by names",
            "route": "",
            "service": "Core"
        },
        {
            "id": "files.ipynb[9]",
            "cell": "fix project paths",
            "route": "",
            "service": "Core"
        },
        {
            "id": "syntax.ipynb[2]",
            "cell": "builtin and local modules",
            "route": "",
            "service": "Core"
        },
        {
            "id": "import.ipynb[0]",
            "cell": "import notebook",
            "route": "",
            "service": "Core"
        },
        {
            "id": "notebook extensions.ipynb[0]",
            "cell": "notebook extension",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "import.ipynb[11]",
            "cell": "convert regexp matches to an array",
            "route": "",
            "service": "Core"
        },
        {
            "id": "import.ipynb[12]",
            "cell": "run all promises sequentially",
            "route": "",
            "service": "Core"
        },
        {
            "id": "import.ipynb[13]",
            "cell": "parse cells from a notebook",
            "route": "",
            "service": "Core"
        },
        {
            "id": "import.ipynb[2]",
            "cell": "how does node module require work",
            "route": "",
            "service": "Core"
        },
        {
            "id": "import.ipynb[4]",
            "cell": "compile an es module",
            "route": "",
            "service": "Core"
        },
        {
            "id": "quake3 server connector.ipynb[3]",
            "cell": "test specific channel",
            "route": "",
            "service": "Games"
        },
        {
            "id": "import.ipynb[5]",
            "cell": "compile a csharp file into a DLL",
            "route": "",
            "service": "Core"
        },
        {
            "id": "antlr.ipynb[1]",
            "cell": "select antlr tree",
            "route": "",
            "service": "Languages"
        },
        {
            "id": "csharp.ipynb[4]",
            "cell": "get csharp params",
            "route": "",
            "service": "Languages"
        },
        {
            "id": "csharp.ipynb[3]",
            "cell": "list csharp classes",
            "route": "",
            "service": "Languages"
        },
        {
            "id": "csharp.ipynb[2]",
            "cell": "list csharp namespaces",
            "route": "",
            "service": "Languages"
        },
        {
            "id": "import.ipynb[6]",
            "cell": "compile a dylib from source cell",
            "route": "",
            "service": "Core"
        },
        {
            "id": "dylib.ipynb[9]",
            "cell": "c type to data type",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "dylib.ipynb[10]",
            "cell": "build dylib",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "dylib.ipynb[8]",
            "cell": "get c types",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "import.ipynb[7]",
            "cell": "display interpreted results in markdown",
            "route": "",
            "service": "Core"
        },
        {
            "id": "import.ipynb[8]",
            "cell": "search jupter notebooks for questions and answers",
            "route": "",
            "service": "Core"
        },
        {
            "id": "gulp.ipynb[5]",
            "cell": "search notebooks gulp",
            "route": "ROUTE = /search",
            "service": "Frameworks"
        },
        {
            "id": "import.ipynb[9]",
            "cell": "search notebook questions",
            "route": "",
            "service": "Core"
        },
        {
            "id": "pyimport.ipynb[3]",
            "cell": "questions = [re.sub(r'|\\|+'''qflags=re.IGNORECASE).strip()",
            "route": "",
            "service": "Core"
        },
        {
            "id": "intent.ipynb[3]",
            "cell": "use intent",
            "route": "",
            "service": "Core"
        },
        {
            "id": "intent.ipynb[6]",
            "cell": "to exist right (i.e. monitor program state)",
            "route": "",
            "service": "Core"
        },
        {
            "id": "kernels.ipynb[0]",
            "cell": "get kernel json",
            "route": "",
            "service": "Core"
        },
        {
            "id": "patterns.ipynb[9]",
            "cell": "enforcing an interface",
            "route": "",
            "service": "Core"
        },
        {
            "id": "kernels.ipynb[1]",
            "cell": "test notebook kernel json",
            "route": "",
            "service": "Core"
        },
        {
            "id": "kernels.ipynb[10]",
            "cell": "test process meta kernel",
            "route": "",
            "service": "Core"
        },
        {
            "id": "kernels.ipynb[9]",
            "cell": "process meta kernel",
            "route": "",
            "service": "Core"
        },
        {
            "id": "kernels.ipynb[5]",
            "cell": "meta kernel interface",
            "route": "",
            "service": "Core"
        },
        {
            "id": "kernels.ipynb[18]",
            "cell": "node meta kernel",
            "route": "",
            "service": "Core"
        },
        {
            "id": "kernels.ipynb[11]",
            "cell": "TODO: repl process kernel",
            "route": "",
            "service": "Core"
        },
        {
            "id": "kernels.ipynb[12]",
            "cell": "test repl process using bash",
            "route": "",
            "service": "Core"
        },
        {
            "id": "kernels.ipynb[13]",
            "cell": "jupyter wire interface",
            "route": "",
            "service": "Core"
        },
        {
            "id": "kernels.ipynb[16]",
            "cell": "TODO jupyter wire kernel",
            "route": "",
            "service": "Core"
        },
        {
            "id": "patterns.ipynb[8]",
            "cell": "extend prototype class",
            "route": "",
            "service": "Core"
        },
        {
            "id": "kernels.ipynb[24]",
            "cell": "decode encode ipython zmq protocol",
            "route": "",
            "service": "Core"
        },
        {
            "id": "kernels.ipynb[3]",
            "cell": "jupyter meta kernel",
            "route": "",
            "service": "Core"
        },
        {
            "id": "kernels.ipynb[17]",
            "cell": "TODO: wire meta kernel",
            "route": "",
            "service": "Core"
        },
        {
            "id": "kernels.ipynb[6]",
            "cell": "native meta kernel",
            "route": "",
            "service": "Core"
        },
        {
            "id": "kernels.ipynb[7]",
            "cell": "native meta methods",
            "route": "",
            "service": "Core"
        },
        {
            "id": "kernels.ipynb[8]",
            "cell": "socket meta kernel",
            "route": "",
            "service": "Core"
        },
        {
            "id": "kernels.ipynb[19]",
            "cell": "test node meta kernel",
            "route": "",
            "service": "Core"
        },
        {
            "id": "kernels.ipynb[2]",
            "cell": "custom kernel json",
            "route": "",
            "service": "Core"
        },
        {
            "id": "kernels.ipynb[20]",
            "cell": "node wire kernel",
            "route": "",
            "service": "Core"
        },
        {
            "id": "kernels.ipynb[23]",
            "cell": "https://pypi.org/search/q=&o=&c=Framework+%3A%3A+IPython",
            "route": "",
            "service": "Core"
        },
        {
            "id": "kernels.ipynb[25]",
            "cell": "bind wire sockets",
            "route": "",
            "service": "Core"
        },
        {
            "id": "kernels.ipynb[4]",
            "cell": "kernel info interface",
            "route": "",
            "service": "Core"
        },
        {
            "id": "languages.ipynb[15]",
            "cell": "TODO: import falsey javascript in to this notebook",
            "route": "",
            "service": "Core"
        },
        {
            "id": "languages.ipynb[17]",
            "cell": "display safe object",
            "route": "",
            "service": "Core"
        },
        {
            "id": "languages.ipynb[8]",
            "cell": "babel transpiler",
            "route": "",
            "service": "Core"
        },
        {
            "id": "syntax.ipynb[21]",
            "cell": "select acorn tree",
            "route": "",
            "service": "Core"
        },
        {
            "id": "notebook.ipynb[7]",
            "cell": "add missing imports",
            "route": "",
            "service": "Core"
        },
        {
            "id": "notebook.ipynb[4]",
            "cell": "replace core requirement",
            "route": "",
            "service": "Core"
        },
        {
            "id": "notebook.ipynb[5]",
            "cell": "replace notebook import",
            "route": "",
            "service": "Core"
        },
        {
            "id": "notebook.ipynb[0]",
            "cell": "readme.md",
            "route": "",
            "service": "Core"
        },
        {
            "id": "notebook.ipynb[1]",
            "cell": "import notebook import all cell modules",
            "route": "",
            "service": "Core"
        },
        {
            "id": "notebook.ipynb[10]",
            "cell": "export notebook",
            "route": "",
            "service": "Core"
        },
        {
            "id": "notebook.ipynb[14]",
            "cell": "authoring header template",
            "route": "",
            "service": "Core"
        },
        {
            "id": "syntax.ipynb[9]",
            "cell": "get imports from source",
            "route": "",
            "service": "Core"
        },
        {
            "id": "de-linting.ipynb[0]",
            "cell": "delint notebooks",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "notebook.ipynb[11]",
            "cell": "inject cells in to notebooks when built with webpack",
            "route": "",
            "service": "Core"
        },
        {
            "id": "notebook.ipynb[12]",
            "cell": "get cell extension",
            "route": "",
            "service": "Core"
        },
        {
            "id": "json.ipynb[0]",
            "cell": "select json",
            "route": "",
            "service": "Languages"
        },
        {
            "id": "notebook.ipynb[8]",
            "cell": "test add missing imports",
            "route": "",
            "service": "Core"
        },
        {
            "id": "patterns.ipynb[0]",
            "cell": "walk tree",
            "route": "",
            "service": "Core"
        },
        {
            "id": "patterns.ipynb[10]",
            "cell": "test enforcing an interface with prototype",
            "route": "",
            "service": "Core"
        },
        {
            "id": "patterns.ipynb[6]",
            "cell": "resolve a promise properly",
            "route": "",
            "service": "Core"
        },
        {
            "id": "patterns.ipynb[7]",
            "cell": "making a class the normal way",
            "route": "",
            "service": "Core"
        },
        {
            "id": "pyimport.ipynb[0]",
            "cell": "get python params",
            "route": "",
            "service": "Core"
        },
        {
            "id": "pyimport.ipynb[6]",
            "cell": "run python cells",
            "route": "",
            "service": "Core"
        },
        {
            "id": "rpc.ipynb[0]",
            "cell": "rpc groups",
            "route": "",
            "service": "Core"
        },
        {
            "id": "rpc.ipynb[1]",
            "cell": "get cell rpc groups",
            "route": "",
            "service": "Core"
        },
        {
            "id": "rpc.ipynb[2]",
            "cell": "rpc permissions",
            "route": "ROUTE = /permissions",
            "service": "Core"
        },
        {
            "id": "rpc.ipynb[3]",
            "cell": "test get permissions",
            "route": "",
            "service": "Core"
        },
        {
            "id": "rpc.ipynb[4]",
            "cell": "filter command permission",
            "route": "",
            "service": "Core"
        },
        {
            "id": "google calendar.ipynb[6]",
            "cell": "days events",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google contacts.ipynb[1]",
            "cell": "google contact settings",
            "route": "",
            "service": "Google"
        },
        {
            "id": "rpc.ipynb[5]",
            "cell": "store rpc result",
            "route": "",
            "service": "Core"
        },
        {
            "id": "rpc.ipynb[8]",
            "cell": "get rpc from spec",
            "route": "",
            "service": "Core"
        },
        {
            "id": "polyfills.ipynb[0]",
            "cell": "https request",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "rpc.ipynb[9]",
            "cell": "test rpc from spec",
            "route": "",
            "service": "Core"
        },
        {
            "id": "syntax.ipynb[0]",
            "cell": "get requires",
            "route": "",
            "service": "Core"
        },
        {
            "id": "syntax.ipynb[10]",
            "cell": "test get imports",
            "route": "",
            "service": "Core"
        },
        {
            "id": "syntax.ipynb[14]",
            "cell": "tree to html",
            "route": "",
            "service": "Core"
        },
        {
            "id": "syntax.ipynb[22]",
            "cell": "make xpaths",
            "route": "",
            "service": "Core"
        },
        {
            "id": "syntax.ipynb[23]",
            "cell": "generate css selectors from code",
            "route": "",
            "service": "Core"
        },
        {
            "id": "syntax.ipynb[24]",
            "cell": "minimize xpath",
            "route": "",
            "service": "Core"
        },
        {
            "id": "syntax.ipynb[26]",
            "cell": "select from code",
            "route": "",
            "service": "Core"
        },
        {
            "id": "syntax.ipynb[28]",
            "cell": "test expression on notebook code",
            "route": "",
            "service": "Core"
        },
        {
            "id": "syntax.ipynb[3]",
            "cell": "core dependencies",
            "route": "",
            "service": "Core"
        },
        {
            "id": "syntax.ipynb[30]",
            "cell": "Generate unit test from logic branching",
            "route": "",
            "service": "Core"
        },
        {
            "id": "syntax.ipynb[33]",
            "cell": "generate unit test",
            "route": "",
            "service": "Core"
        },
        {
            "id": "syntax.ipynb[4]",
            "cell": "test core dependencies",
            "route": "",
            "service": "Core"
        },
        {
            "id": "syntax.ipynb[8]",
            "cell": "test parameter names",
            "route": "",
            "service": "Core"
        },
        {
            "id": "voidzero.ipynb[1]",
            "cell": "attribute code",
            "route": "",
            "service": "Core"
        },
        {
            "id": "voidzero.ipynb[3]",
            "cell": "attribute notebook",
            "route": "",
            "service": "Core"
        },
        {
            "id": "filesystem.ipynb[0]",
            "cell": "organize downloads",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "filesystem.ipynb[1]",
            "cell": "categorize home directory",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "filesystem.ipynb[2]",
            "cell": "categories downloads",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "filesystem.ipynb[3]",
            "cell": "download reorganize bash",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "filesystem.ipynb[4]",
            "cell": "bash make categories",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "filesystem.ipynb[5]",
            "cell": "run bash on downloads",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "filesystem.ipynb[6]",
            "cell": "macos time added",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "git commands.ipynb[0]",
            "cell": "git discard whitespace",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "git commands.ipynb[1]",
            "cell": "compare git branches",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "git commands.ipynb[2]",
            "cell": "interesting git commands",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "git commands.ipynb[3]",
            "cell": "cache git credentials",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "git commands.ipynb[4]",
            "cell": "git auto commit",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "git commands.ipynb[5]",
            "cell": "git auto rebase",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "git commands.ipynb[6]",
            "cell": "git add submodule",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "git index.ipynb[0]",
            "cell": "git stylesheet",
            "route": "ROUTE = /github-styles.css",
            "service": "Databases"
        },
        {
            "id": "git index.ipynb[1]",
            "cell": "git service index",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "git index.ipynb[10]",
            "cell": "git tag fragment",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "git index.ipynb[11]",
            "cell": "html code view",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "git index.ipynb[12]",
            "cell": "github service config",
            "route": "ROUTE = /mergehtml.js",
            "service": "Databases"
        },
        {
            "id": "git index.ipynb[13]",
            "cell": "git service branches",
            "route": "ROUTE = /:profile/:primary/branches",
            "service": "Databases"
        },
        {
            "id": "git index.ipynb[14]",
            "cell": "git branches",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "git index.ipynb[4]",
            "cell": "branch list fragment",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "git index.ipynb[8]",
            "cell": "branch fragment",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "git index.ipynb[15]",
            "cell": "git serve bare",
            "route": "ROUTE[] = /:profile/:primary/:branch/**",
            "service": "Databases"
        },
        {
            "id": "git index.ipynb[16]",
            "cell": "git serve repo list",
            "route": "ROUTE[] = /github",
            "service": "Databases"
        },
        {
            "id": "git index.ipynb[7]",
            "cell": "repo fragment",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "git index.ipynb[2]",
            "cell": "repositories fragment",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "git index.ipynb[17]",
            "cell": "git serve tree",
            "route": "ROUTE[] = /:profile/:primary/tree/:branch/**",
            "service": "Databases"
        },
        {
            "id": "node express.ipynb[15]",
            "cell": "directory to html",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "git index.ipynb[3]",
            "cell": "file list fragment",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "git index.ipynb[18]",
            "cell": "git serve blob",
            "route": "ROUTE[] = /:profile/:primary/tree/:branch/**",
            "service": "Databases"
        },
        {
            "id": "node express.ipynb[14]",
            "cell": "zuora eloqua express mock",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "documentation.ipynb[5]",
            "cell": "",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "git index.ipynb[20]",
            "cell": "git serve commits",
            "route": "ROUTE[] = /:profile/:primary/commits/:branch",
            "service": "Databases"
        },
        {
            "id": "git index.ipynb[5]",
            "cell": "commit list fragment",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "git index.ipynb[9]",
            "cell": "commit fragment",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "git index.ipynb[6]",
            "cell": "git tag list",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "git.ipynb[0]",
            "cell": "Rename a bunch of files using Git and renamer",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "git.ipynb[1]",
            "cell": "test github renamer",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "git.ipynb[2]",
            "cell": "json git tree",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "child process.ipynb[0]",
            "cell": "spawn child process",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "git.ipynb[3]",
            "cell": "source tree",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "d3.ipynb[4]",
            "cell": "Format d3 tree",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "d3.ipynb[5]",
            "cell": "Display d3 tree",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "git.ipynb[7]",
            "cell": "git project directory",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "git.ipynb[4]",
            "cell": "Display graphs of different commands and scenarios using dry-run",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "gulp.ipynb[1]",
            "cell": "gulp tasks to promise",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "gulp.ipynb[0]",
            "cell": "use gulp",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "git.ipynb[5]",
            "cell": "update git",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "git.ipynb[6]",
            "cell": "github updates",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "google calendar.ipynb[7]",
            "cell": "Update create merge delete event",
            "route": "",
            "service": "Google"
        },
        {
            "id": "git.ipynb[8]",
            "cell": "glob git branch",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "git.ipynb[9]",
            "cell": "convert git history to google calendar events",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "google calendar.ipynb[5]",
            "cell": "lookup calendar name",
            "route": "",
            "service": "Google"
        },
        {
            "id": "npm.ipynb[0]",
            "cell": "Replace package.json latest with actual latest version numbers",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "npm.ipynb[1]",
            "cell": "Check if there is a local-npm server running on Brian's machine",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "npm.ipynb[2]",
            "cell": "Run NPM in javscript with in-memory file-system",
            "route": "",
            "service": "Databases"
        },
        {
            "id": "demo.ipynb[14]",
            "cell": "Install build stack on colab",
            "route": "",
            "service": "demo.ipynb"
        },
        {
            "id": "demo.ipynb[15]",
            "cell": "update notebook repo on colab",
            "route": "",
            "service": "demo.ipynb"
        },
        {
            "id": "demo.ipynb[8]",
            "cell": "use Docker",
            "route": "",
            "service": "demo.ipynb"
        },
        {
            "id": "node simple-imap.ipynb[0]",
            "cell": "node imap client",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "docker commands.ipynb[0]",
            "cell": "use Docker",
            "route": "",
            "service": "Docker"
        },
        {
            "id": "docker commands.ipynb[1]",
            "cell": "Restart the docker service",
            "route": "",
            "service": "Docker"
        },
        {
            "id": "docker commands.ipynb[2]",
            "cell": "Actually delete everything",
            "route": "",
            "service": "Docker"
        },
        {
            "id": "docker commands.ipynb[3]",
            "cell": "Delete all containers",
            "route": "",
            "service": "Docker"
        },
        {
            "id": "docker commands.ipynb[4]",
            "cell": "Delete all images",
            "route": "",
            "service": "Docker"
        },
        {
            "id": "docker commands.ipynb[5]",
            "cell": "Delete all images in Powershell",
            "route": "",
            "service": "Docker"
        },
        {
            "id": "docker commands.ipynb[6]",
            "cell": "Delete containers in cmd",
            "route": "",
            "service": "Docker"
        },
        {
            "id": "docker commands.ipynb[7]",
            "cell": "Delete images in cmd",
            "route": "",
            "service": "Docker"
        },
        {
            "id": "docker commands.ipynb[8]",
            "cell": "Delete danglings images in cmd",
            "route": "",
            "service": "Docker"
        },
        {
            "id": "docker demo.ipynb[0]",
            "cell": "What is Docker",
            "route": "",
            "service": "Docker"
        },
        {
            "id": "docker demo.ipynb[1]",
            "cell": "selenium docker",
            "route": "",
            "service": "Docker"
        },
        {
            "id": "selenium commands.ipynb[3]",
            "cell": "Run selenium inside of docker",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "node install.ipynb[1]",
            "cell": "Install dev tools on Linux",
            "route": "",
            "service": "Docker"
        },
        {
            "id": "vnc.ipynb[2]",
            "cell": "VNC HTML client",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "vnc.ipynb[4]",
            "cell": "VNC in Docker",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "install Docker on Mac.ipynb[0]",
            "cell": "install Docker on Mac",
            "route": "",
            "service": "Docker"
        },
        {
            "id": "install Docker on Mac.ipynb[1]",
            "cell": "Where do I download dockerWhat other tools do I need",
            "route": "",
            "service": "Docker"
        },
        {
            "id": "install Docker on Windows.ipynb[0]",
            "cell": "install Docker on Windows",
            "route": "",
            "service": "Docker"
        },
        {
            "id": "install Docker on Windows.ipynb[1]",
            "cell": "How do I installed elevated from the command line",
            "route": "",
            "service": "Docker"
        },
        {
            "id": "install Docker on Windows.ipynb[2]",
            "cell": "Where do I download the Windows Docker installer",
            "route": "",
            "service": "Docker"
        },
        {
            "id": "install Docker on Windows.ipynb[3]",
            "cell": "How do I fix the firewall for Docker",
            "route": "",
            "service": "Docker"
        },
        {
            "id": "install Docker on Windows.ipynb[4]",
            "cell": "install build tools on Windows",
            "route": "",
            "service": "Docker"
        },
        {
            "id": "node install.ipynb[0]",
            "cell": "use nodejs",
            "route": "",
            "service": "Docker"
        },
        {
            "id": "fizz buzz.ipynb[0]",
            "cell": "http://wiki.c2.com/FizzBuzzTest",
            "route": "",
            "service": "Exercises"
        },
        {
            "id": "Angular 2.ipynb[0]",
            "cell": "What is Angular 2",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "Angular components.ipynb[0]",
            "cell": "Display search notebook component",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "Angular components.ipynb[1]",
            "cell": "Search notebook service",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "Angular components.ipynb[2]",
            "cell": "Display code results",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "Angular components.ipynb[3]",
            "cell": "Sockify search notebook provider",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "Angular components.ipynb[5]",
            "cell": "Display login form",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "Angular components.ipynb[6]",
            "cell": "Authentication service",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "angular core modules.ipynb[0]",
            "cell": "Useful list of material and core modules",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "angular render service.ipynb[0]",
            "cell": "render Angular modules instead of using express",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "build Angular components.ipynb[0]",
            "cell": "Run angular-cli commands from nodejs",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "build Angular components.ipynb[1]",
            "cell": "Compile the project using webpack",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "build Angular components.ipynb[3]",
            "cell": "Set angular theme colors",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "display angular.ipynb[0]",
            "cell": "Include the script in the response",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "display angular.ipynb[1]",
            "cell": "Display angular modules in jupyter",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "autorewire.ipynb[0]",
            "cell": "install autorewire",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "autorewire.ipynb[1]",
            "cell": "mock all properties and functions using rewire",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "d3 dates.ipynb[0]",
            "cell": "d3 swimlane",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "d3 dates.ipynb[1]",
            "cell": "d3 calendar",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "d3.ipynb[1]",
            "cell": "d3 tiered pie chart",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "de-linting.ipynb[1]",
            "cell": "lint notebook",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "de-linting.ipynb[2]",
            "cell": "delint specific cells",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "de-linting.ipynb[3]",
            "cell": "notebook lint watcher",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "de-linting.ipynb[4]",
            "cell": "test de-linting service",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "diff.ipynb[0]",
            "cell": "diff",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "de-linting.ipynb[5]",
            "cell": "delint using webstorm",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "git repos.ipynb[0]",
            "cell": "test repository",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "git repos.ipynb[1]",
            "cell": "selenium repository",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "git repos.ipynb[2]",
            "cell": "project repository",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "git repos.ipynb[3]",
            "cell": "Setup git credentials in docker",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "git repos.ipynb[4]",
            "cell": "use in Docker",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "git repos.ipynb[5]",
            "cell": "use npm cache inside of docker",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "git repos.ipynb[6]",
            "cell": "run the Docker image",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "git repos.ipynb[7]",
            "cell": "Selenium test scripts",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "gulp.ipynb[3]",
            "cell": "Apply universal to angular project",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "gulp.ipynb[4]",
            "cell": "Fix project relatives as a service for updating files when they change",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "How code should look.ipynb[0]",
            "cell": "How code should look",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "node simple-imap.ipynb[5]",
            "cell": "get attachments using simple-imap",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "identity server.ipynb[2]",
            "cell": "set up identity server",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "jupyter interaction.ipynb[0]",
            "cell": "Interactive cells in juypter",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "Jupyter language kernels.ipynb[0]",
            "cell": "install bash kernel",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "Jupyter language kernels.ipynb[1]",
            "cell": "install ipython kernel",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "Jupyter language kernels.ipynb[2]",
            "cell": "install ICSharp (C) kernel",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "Jupyter language kernels.ipynb[5]",
            "cell": "install ruby",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "Jupyter language kernels.ipynb[6]",
            "cell": "install Powershell",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "jwt in csharp.ipynb[0]",
            "cell": "use JSON web tokens in C",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "karma template.ipynb[0]",
            "cell": "Generate a bunch of spec files",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "ngx-translate.ipynb[1]",
            "cell": "Find unused/misplaced translation strings",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "node express.ipynb[0]",
            "cell": "express service",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "node express.ipynb[1]",
            "cell": "import new service",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "node express.ipynb[2]",
            "cell": "websocket subscription service",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "node express.ipynb[3]",
            "cell": "express rpc service",
            "route": "ROUTE[] = /rpc",
            "service": "Frameworks"
        },
        {
            "id": "node express.ipynb[10]",
            "cell": "run a DOM query on a remote HTML page",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "node express.ipynb[11]",
            "cell": "save a list of image elements",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "node express.ipynb[12]",
            "cell": "stop express server",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "node express.ipynb[16]",
            "cell": "node express directory handler",
            "route": "ROUTE[] = /home",
            "service": "Frameworks"
        },
        {
            "id": "node express.ipynb[17]",
            "cell": "html music player",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "node express.ipynb[18]",
            "cell": "html image viewer",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "node express.ipynb[19]",
            "cell": "rpc index",
            "route": "ROUTE = /list",
            "service": "Frameworks"
        },
        {
            "id": "node express.ipynb[4]",
            "cell": "browser socket service",
            "route": "ROUTE = /socket-service.js",
            "service": "Frameworks"
        },
        {
            "id": "node express.ipynb[20]",
            "cell": "rpc list fragement",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "node express.ipynb[21]",
            "cell": "rpc fragement",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "node express.ipynb[22]",
            "cell": "rpc service index",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "node express.ipynb[23]",
            "cell": "node express styles",
            "route": "ROUTE = /express-styles.css",
            "service": "Frameworks"
        },
        {
            "id": "node express.ipynb[5]",
            "cell": "reliable-websocket.js",
            "route": "ROUTE = /reliable-websocket.js",
            "service": "Frameworks"
        },
        {
            "id": "node express.ipynb[6]",
            "cell": "express router",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "node express.ipynb[7]",
            "cell": "parse environment",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "node express.ipynb[8]",
            "cell": "start a proxy on {port}",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "node express.ipynb[9]",
            "cell": "display the output from express",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "service auth.ipynb[0]",
            "cell": "Decrypt passwords.json",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "node simple-imap.ipynb[1]",
            "cell": "search for messages using simple-imap",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "node simple-imap.ipynb[2]",
            "cell": "test search messages imap",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "node simple-imap.ipynb[3]",
            "cell": "scan commands email",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "node simple-imap.ipynb[6]",
            "cell": "send email",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "node simple-imap.ipynb[4]",
            "cell": "list the subjects from simple-imap messages",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "promisify automock socketio.ipynb[0]",
            "cell": "mock and pass through",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "promisify automock socketio.ipynb[1]",
            "cell": "Create an RPC socker.io server for any module using promisify",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "promisify automock socketio.ipynb[2]",
            "cell": "Mock any module with promisify and socket.io-client",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "promisify automock socketio.ipynb[3]",
            "cell": "Check if sockify server is running",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "register jupter kernels.ipynb[0]",
            "cell": "install a kernel from just the spec",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "test runner.ipynb[0]",
            "cell": "test cells",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "test runner.ipynb[1]",
            "cell": "mocha test the test cell runner",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "test runner.ipynb[10]",
            "cell": "color-fader.js",
            "route": "ROUTE = /color-fader.js",
            "service": "Frameworks"
        },
        {
            "id": "test runner.ipynb[11]",
            "cell": "update-view.js",
            "route": "ROUTE = /update-view.js",
            "service": "Frameworks"
        },
        {
            "id": "test runner.ipynb[12]",
            "cell": "render-remote.js",
            "route": "ROUTE = /render-remote.js",
            "service": "Frameworks"
        },
        {
            "id": "test runner.ipynb[13]",
            "cell": "animate-nodes.js",
            "route": "ROUTE = /animate-nodes.js",
            "service": "Frameworks"
        },
        {
            "id": "test runner.ipynb[14]",
            "cell": "cell nodes",
            "route": "ROUTE = /node-graph.json",
            "service": "Frameworks"
        },
        {
            "id": "test runner.ipynb[15]",
            "cell": "git repo nodes",
            "route": "ROUTE = /:project/node-graph.json",
            "service": "Frameworks"
        },
        {
            "id": "test runner.ipynb[16]",
            "cell": "match language to grammar",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "antlr.ipynb[3]",
            "cell": "test select jison on some quake 3 C code",
            "route": "",
            "service": "Languages"
        },
        {
            "id": "test runner.ipynb[17]",
            "cell": "git service list",
            "route": "ROUTE = /:project/service-list.json",
            "service": "Frameworks"
        },
        {
            "id": "test runner.ipynb[2]",
            "cell": "test runner",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "test runner.ipynb[3]",
            "cell": "test sigma index",
            "route": "ROUTE[] = /sigma",
            "service": "Frameworks"
        },
        {
            "id": "test runner.ipynb[5]",
            "cell": "notebook-colors.js",
            "route": "ROUTE = /notebook-colors.js",
            "service": "Frameworks"
        },
        {
            "id": "test runner.ipynb[9]",
            "cell": "highlight-nodes.js",
            "route": "ROUTE = /highlight-nodes.js",
            "service": "Frameworks"
        },
        {
            "id": "test runner.ipynb[4]",
            "cell": "test sigma template",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "test runner.ipynb[6]",
            "cell": "sigma-style.css",
            "route": "ROUTE = /sigma-style.css",
            "service": "Frameworks"
        },
        {
            "id": "test runner.ipynb[7]",
            "cell": "sigma-script.js",
            "route": "ROUTE = /sigma-script.js",
            "service": "Frameworks"
        },
        {
            "id": "test runner.ipynb[8]",
            "cell": "trace nodes",
            "route": "ROUTE = /trace-nodes.js",
            "service": "Frameworks"
        },
        {
            "id": "twilio.ipynb[0]",
            "cell": "accept incoming twilio message",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "twilio.ipynb[1]",
            "cell": "twilio reminder",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "twilio.ipynb[2]",
            "cell": "send a twilio message",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "twilio.ipynb[3]",
            "cell": "make a twilio call",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "zuora to eloqua.ipynb[0]",
            "cell": "zuora export service",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "zuora to eloqua.ipynb[1]",
            "cell": "zuora export catalog",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "zuora to eloqua.ipynb[10]",
            "cell": "eloqua import create template",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "zuora to eloqua.ipynb[11]",
            "cell": "test eloqua import create template",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "zuora to eloqua.ipynb[12]",
            "cell": "eloqua import blueprints",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "zuora to eloqua.ipynb[13]",
            "cell": "eloqua existing import",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "zuora to eloqua.ipynb[5]",
            "cell": "eloqua import service",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "zuora to eloqua.ipynb[14]",
            "cell": "test eloqua existing import",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "zuora to eloqua.ipynb[23]",
            "cell": "bulk upload eloqua",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "zuora to eloqua.ipynb[19]",
            "cell": "zuora export month",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "zuora to eloqua.ipynb[7]",
            "cell": "zuora eloqua mapper",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "zuora to eloqua.ipynb[16]",
            "cell": "test aws entry point",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "zuora to eloqua.ipynb[17]",
            "cell": "notify entry point",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "zuora to eloqua.ipynb[21]",
            "cell": "zuora account service",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "zuora to eloqua.ipynb[18]",
            "cell": "test notify entry point",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "zuora to eloqua.ipynb[3]",
            "cell": "zuora renewals query",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "zuora to eloqua.ipynb[2]",
            "cell": "zuora export service test",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "zuora to eloqua.ipynb[20]",
            "cell": "test zuora export month",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "zuora to eloqua.ipynb[22]",
            "cell": "test zuora account service",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "zuora to eloqua.ipynb[24]",
            "cell": "test bulk upload eloqua",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "zuora to eloqua.ipynb[25]",
            "cell": "sync zuora eloqua end to end",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "zuora to eloqua.ipynb[26]",
            "cell": "calculate price",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "zuora to eloqua.ipynb[27]",
            "cell": "calculate price test",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "zuora to eloqua.ipynb[28]",
            "cell": "readme",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "zuora to eloqua.ipynb[4]",
            "cell": "test zuora renewals query",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "zuora to eloqua.ipynb[6]",
            "cell": "test eloqua import service",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "zuora to eloqua.ipynb[8]",
            "cell": "zuora eloqua mapper test",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "zuora to eloqua.ipynb[9]",
            "cell": "zuora account blueprints",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "brians resume.ipynb[0]",
            "cell": "get a list of folder topics from bookmarks",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "brians resume.ipynb[1]",
            "cell": "update insterests resume sheet",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "google sheets.ipynb[8]",
            "cell": "update a row in google sheets",
            "route": "",
            "service": "Google"
        },
        {
            "id": "brians resume.ipynb[10]",
            "cell": "resume chat program",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "brians resume.ipynb[11]",
            "cell": "chat page",
            "route": "ROUTE = /chat",
            "service": "Frontends"
        },
        {
            "id": "brians resume.ipynb[12]",
            "cell": "brians resume in html",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "brians resume.ipynb[2]",
            "cell": "load message history",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "brians resume.ipynb[3]",
            "cell": "brians resume",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "brians resume.ipynb[4]",
            "cell": "file system access",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "brians resume.ipynb[5]",
            "cell": "access web information",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "scraping.ipynb[0]",
            "cell": "extract llm article",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "scraping.ipynb[2]",
            "cell": "summarize llm article",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "brians resume.ipynb[6]",
            "cell": "ask another llm for help",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "brians resume.ipynb[7]",
            "cell": "render message history",
            "route": "ROUTE = /embed",
            "service": "Frontends"
        },
        {
            "id": "brians resume.ipynb[8]",
            "cell": "resume express chat service",
            "route": "ROUTE = /chat",
            "service": "Frontends"
        },
        {
            "id": "brians resume.ipynb[9]",
            "cell": "render history navigation",
            "route": "ROUTE = /history",
            "service": "Frontends"
        },
        {
            "id": "calendar.ipynb[0]",
            "cell": "frequency calendar index",
            "route": "ROUTE = /frequency",
            "service": "Frontends"
        },
        {
            "id": "calendar.ipynb[1]",
            "cell": "calendar frequency timeline",
            "route": "ROUTE = /frequency-client.js",
            "service": "Frontends"
        },
        {
            "id": "convert spreadsheet.ipynb[0]",
            "cell": "readme.md",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "google sheets.ipynb[2]",
            "cell": "get google sheet info",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google sheets.ipynb[6]",
            "cell": "add row data google sheet",
            "route": "",
            "service": "Google"
        },
        {
            "id": "convert spreadsheet.ipynb[10]",
            "cell": "sheet to web",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "convert spreadsheet.ipynb[2]",
            "cell": "sheet marketing import",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "convert spreadsheet.ipynb[11]",
            "cell": "convert sheet helper functions",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "convert spreadsheet.ipynb[12]",
            "cell": "package.json",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "google sheets.ipynb[0]",
            "cell": "templates google doc",
            "route": "",
            "service": "Google"
        },
        {
            "id": "convert spreadsheet.ipynb[6]",
            "cell": "output google sheet template",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "convert spreadsheet.ipynb[4]",
            "cell": "google sheet template properties",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "convert spreadsheet.ipynb[9]",
            "cell": "collect google sheets resources",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "convert spreadsheet.ipynb[3]",
            "cell": "filter data sheet based on url",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "convert spreadsheet.ipynb[5]",
            "cell": "google sheet layout template",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "google sheets.ipynb[4]",
            "cell": "get worksheet rows",
            "route": "",
            "service": "Google"
        },
        {
            "id": "convert spreadsheet.ipynb[7]",
            "cell": "find known routes to sheets",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "convert spreadsheet.ipynb[8]",
            "cell": "collect external content and resources",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord activities.ipynb[0]",
            "cell": "discord client code",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord activities.ipynb[1]",
            "cell": "discord client auth code",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord activities.ipynb[2]",
            "cell": "start a bunch of discord services",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord activities.ipynb[3]",
            "cell": "discord authenticate instances",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord.ipynb[1]",
            "cell": "discord gateway",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord activities.ipynb[4]",
            "cell": "discord express token endpoint",
            "route": "ROUTE = /api/token",
            "service": "Frontends"
        },
        {
            "id": "discord.ipynb[2]",
            "cell": "discord bot configuration",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord games.ipynb[1]",
            "cell": "discord game commands",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord.ipynb[3]",
            "cell": "discord api",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord imagine.ipynb[0]",
            "cell": "update discord interaction with attachments",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord.ipynb[0]",
            "cell": "discord request",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord imagine.ipynb[1]",
            "cell": "discord stability proxy",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord imagine.ipynb[2]",
            "cell": "discord mid journey commands",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord imagine.ipynb[3]",
            "cell": "discord ollama vision",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord tools.ipynb[5]",
            "cell": "discord llm interactions",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord player.ipynb[0]",
            "cell": "discord music player",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord player.ipynb[1]",
            "cell": "discord music player server",
            "route": "ROUTE = /player",
            "service": "Frontends"
        },
        {
            "id": "node express.ipynb[13]",
            "cell": "",
            "route": "",
            "service": "Frameworks"
        },
        {
            "id": "discord remote.ipynb[0]",
            "cell": "discord remote control",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord remote.ipynb[1]",
            "cell": "discord remote proxy server",
            "route": "ROUTE = /remote",
            "service": "Frontends"
        },
        {
            "id": "discord remote.ipynb[3]",
            "cell": "remote desktop client",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord remote.ipynb[4]",
            "cell": "client input remote code",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord remote.ipynb[2]",
            "cell": "express automation routes",
            "route": "ROUTE = /monitors/*",
            "service": "Frontends"
        },
        {
            "id": "robot.ipynb[0]",
            "cell": "node screenshots",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "google scheduling.ipynb[3]",
            "cell": "remove overlaps",
            "route": "",
            "service": "Google"
        },
        {
            "id": "robot.ipynb[4]",
            "cell": "mouse click",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "robot.ipynb[5]",
            "cell": "send keys",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "discord tools.ipynb[0]",
            "cell": "discord pdf converter",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord tools.ipynb[1]",
            "cell": "discord notebook connector",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "usage.ipynb[2]",
            "cell": "system usage png buffer",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "scraping.ipynb[3]",
            "cell": "test article summarizer",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "discord tools.ipynb[2]",
            "cell": "discord llm connector",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord tools.ipynb[9]",
            "cell": "create discord message with attachments",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord tools.ipynb[3]",
            "cell": "discord writing llms",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord tools.ipynb[4]",
            "cell": "discord mesh generator",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord tools.ipynb[6]",
            "cell": "sync discord llm tools",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord tools.ipynb[7]",
            "cell": "sync deceptive chat",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord tools.ipynb[8]",
            "cell": "discord handy tools",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord voice.ipynb[0]",
            "cell": "send voice on discord",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord.ipynb[10]",
            "cell": "discord utilities",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "usage.ipynb[0]",
            "cell": "system usage report",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "discord.ipynb[11]",
            "cell": "delete all commands",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord.ipynb[5]",
            "cell": "discord channels",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord.ipynb[7]",
            "cell": "discord guilds",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord.ipynb[4]",
            "cell": "discord messages",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord.ipynb[6]",
            "cell": "discord commands",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord.ipynb[8]",
            "cell": "discord threads",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "discord.ipynb[9]",
            "cell": "discord users",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "documentation.ipynb[0]",
            "cell": "convert notebook to open api",
            "route": "ROUTE[] = /swagger",
            "service": "Frontends"
        },
        {
            "id": "documentation.ipynb[1]",
            "cell": "test convert notebook api",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "documentation.ipynb[2]",
            "cell": "convert google discovery to documentation",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "documentation.ipynb[3]",
            "cell": "discover well-known apis",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "documentation.ipynb[4]",
            "cell": "export documentation",
            "route": "ROUTE[] = /docs",
            "service": "Frontends"
        },
        {
            "id": "documentation.ipynb[6]",
            "cell": "highlight js",
            "route": "ROUTE[] = /mergehtml.js",
            "service": "Frontends"
        },
        {
            "id": "documentation.ipynb[7]",
            "cell": "javadoc template",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "documentation.ipynb[8]",
            "cell": "documentation stylesheet",
            "route": "ROUTE = /docs-style.css",
            "service": "Frontends"
        },
        {
            "id": "edit anywhere.ipynb[1]",
            "cell": "read gist files",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "edit anywhere.ipynb[10]",
            "cell": "read crawl files",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "edit anywhere.ipynb[8]",
            "cell": "scope css",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "edit anywhere.ipynb[11]",
            "cell": "ckeditor configuration",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "edit anywhere.ipynb[3]",
            "cell": "write gist files",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "edit anywhere.ipynb[4]",
            "cell": "save git",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "edit anywhere.ipynb[5]",
            "cell": "git file tree",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "edit anywhere.ipynb[6]",
            "cell": "apply acl to html",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "edit anywhere.ipynb[7]",
            "cell": "load ckeditor",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "frontends.ipynb[0]",
            "cell": "start a bunch of front end services",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "grafana.ipynb[0]",
            "cell": "grafana llm service",
            "route": "ROUTE = /v1/chat/completions",
            "service": "Frontends"
        },
        {
            "id": "grafana.ipynb[1]",
            "cell": "show grafana metrics",
            "route": "ROUTE = /metrics",
            "service": "Frontends"
        },
        {
            "id": "grafana.ipynb[2]",
            "cell": "start a bunch of grafana services",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "linkedin.ipynb[0]",
            "cell": "linkedin stylesheet",
            "route": "ROUTE = /linkedin-styles.css",
            "service": "Frontends"
        },
        {
            "id": "linkedin.ipynb[1]",
            "cell": "linkedin network stylesheet",
            "route": "ROUTE = /linkedin-network.css",
            "service": "Frontends"
        },
        {
            "id": "linkedin.ipynb[10]",
            "cell": "linkedin edit jobs template",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "linkedin.ipynb[11]",
            "cell": "linkedin job list item",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "linkedin.ipynb[12]",
            "cell": "linkedin job edit item",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "linkedin.ipynb[13]",
            "cell": "linkedin profile",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "linkedin.ipynb[14]",
            "cell": "linkedin education view row",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "linkedin.ipynb[15]",
            "cell": "linkedin education edit row",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "linkedin.ipynb[16]",
            "cell": "linkedin experience edit row",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "linkedin.ipynb[17]",
            "cell": "linkedin experience view row",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "linkedin.ipynb[18]",
            "cell": "linkedin edit",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "linkedin.ipynb[19]",
            "cell": "linkedin load profile",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "linkedin.ipynb[22]",
            "cell": "serve linkedin login",
            "route": "ROUTE = /login",
            "service": "Frontends"
        },
        {
            "id": "linkedin.ipynb[2]",
            "cell": "linkedin profile stylesheet",
            "route": "ROUTE = /linkedin-profile.css",
            "service": "Frontends"
        },
        {
            "id": "linkedin.ipynb[20]",
            "cell": "serve linkedin homepage",
            "route": "ROUTE = /linkedin",
            "service": "Frontends"
        },
        {
            "id": "linkedin.ipynb[5]",
            "cell": "linkedin login page",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "linkedin.ipynb[6]",
            "cell": "linkedin homepage",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "linkedin.ipynb[4]",
            "cell": "linkedin index",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "linkedin.ipynb[21]",
            "cell": "serve linkedin profile",
            "route": "ROUTE[] = /edit/:profile",
            "service": "Frontends"
        },
        {
            "id": "linkedin.ipynb[23]",
            "cell": "verify linkedin email",
            "route": "ROUTE = /verify",
            "service": "Frontends"
        },
        {
            "id": "linkedin.ipynb[24]",
            "cell": "save linkedin profile",
            "route": "ROUTE = /profile",
            "service": "Frontends"
        },
        {
            "id": "linkedin.ipynb[25]",
            "cell": "save linkedin pic",
            "route": "ROUTE = /upload",
            "service": "Frontends"
        },
        {
            "id": "linkedin.ipynb[26]",
            "cell": "linkedin profile blob",
            "route": "ROUTE[] = /in/:profile/profile.jpg",
            "service": "Frontends"
        },
        {
            "id": "linkedin.ipynb[27]",
            "cell": "linkedin network",
            "route": "ROUTE = /network",
            "service": "Frontends"
        },
        {
            "id": "linkedin.ipynb[8]",
            "cell": "linkedin network profile list",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "linkedin.ipynb[7]",
            "cell": "linkedin network html",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "linkedin.ipynb[28]",
            "cell": "linkedin jobs",
            "route": "ROUTE[] = /create",
            "service": "Frontends"
        },
        {
            "id": "linkedin.ipynb[9]",
            "cell": "linkedin jobs template",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "linkedin.ipynb[29]",
            "cell": "linkedin create",
            "route": "ROUTE = /create",
            "service": "Frontends"
        },
        {
            "id": "linkedin.ipynb[3]",
            "cell": "linkedin home stylesheet",
            "route": "ROUTE = /linkedin-home.css",
            "service": "Frontends"
        },
        {
            "id": "marketing scripts.ipynb[0]",
            "cell": "make a purchase with stripe",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "marketing scripts.ipynb[1]",
            "cell": "contact us handler",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "marketing scripts.ipynb[2]",
            "cell": "package.json",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "opengl.ipynb[0]",
            "cell": "opengl context",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "opengl.ipynb[1]",
            "cell": "test opengl renderer",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "opengl.ipynb[3]",
            "cell": "opengl frame",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "opengl.ipynb[4]",
            "cell": "shader toy",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "opengl.ipynb[2]",
            "cell": "test shader toy",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "opengl.ipynb[5]",
            "cell": "fragment shader",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "qt.ipynb[0]",
            "cell": "qt application",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "qt.ipynb[1]",
            "cell": "test qt application",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "qt.ipynb[2]",
            "cell": "qt qml widget",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "scheduler.ipynb[0]",
            "cell": "scheduler index",
            "route": "ROUTE = /schedule",
            "service": "Frontends"
        },
        {
            "id": "scheduler.ipynb[1]",
            "cell": "schedule stylesheet",
            "route": "ROUTE = /schedule-style.css",
            "service": "Frontends"
        },
        {
            "id": "scheduler.ipynb[2]",
            "cell": "schedule client script",
            "route": "ROUTE = /schedule-script.js",
            "service": "Frontends"
        },
        {
            "id": "scheduler.ipynb[3]",
            "cell": "schedule service",
            "route": "ROUTE = /schedule",
            "service": "Frontends"
        },
        {
            "id": "scheduler.ipynb[4]",
            "cell": "list google calendars",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "study sauce.ipynb[0]",
            "cell": "convert anki package to study sauce",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "study sauce.ipynb[1]",
            "cell": "render study sauce cards page",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "study sauce.ipynb[2]",
            "cell": "authorize app to read profile info",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "study sauce.ipynb[3]",
            "cell": "receive an authentication code from google",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "study sauce.ipynb[4]",
            "cell": "create a study sauce user directory",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "study sauce.ipynb[5]",
            "cell": "package.json",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "study sauce.ipynb[6]",
            "cell": "study-demo.js",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "study sauce.ipynb[7]",
            "cell": "study sauce express service",
            "route": "",
            "service": "Frontends"
        },
        {
            "id": "quake 3 commands.ipynb[3]",
            "cell": "Try streaming the game over VNCis it awful Kind ofand inputs don't work as expected.",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake 3 commands.ipynb[6]",
            "cell": "https://quake.games/set%20name%20player_name",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake 3 model conv.ipynb[0]",
            "cell": "convert a model using python and blender",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake 3.ipynb[1]",
            "cell": "find pk3 files in zips",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake 3.ipynb[10]",
            "cell": "scan map graphs",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake 3.ipynb[11]",
            "cell": "convert nonalpha",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake 3.ipynb[14]",
            "cell": "quake 3 file whitelist",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake 3.ipynb[12]",
            "cell": "convert quake 3 audio",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake 3.ipynb[13]",
            "cell": "copy quake 3 script files",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake 3.ipynb[15]",
            "cell": "quake 3 menu image list",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake 3.ipynb[16]",
            "cell": "Does TrenchBroom really require everything be in 1 folder",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake 3.ipynb[17]",
            "cell": "convert quake 2 map to quake 3",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake 3.ipynb[21]",
            "cell": "replace known classes in map",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake 3.ipynb[22]",
            "cell": "replace entities in map",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake 3.ipynb[20]",
            "cell": "replace common textures in map",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake 3.ipynb[18]",
            "cell": "scale quake map",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake 3.ipynb[23]",
            "cell": "add skybox to map",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake 3.ipynb[24]",
            "cell": "draw hints in map",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake 3.ipynb[19]",
            "cell": "translate quake map",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake 3.ipynb[2]",
            "cell": "find only bsps in map paks",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake 3.ipynb[26]",
            "cell": "brush to vertex",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake 3.ipynb[25]",
            "cell": "split map hints",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake 3.ipynb[28]",
            "cell": "list noises in a quake 3 map",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake 3.ipynb[29]",
            "cell": "list textures in quake 3 map",
            "route": "",
            "service": "Games"
        },
        {
            "id": "bitbuffer.ipynb[0]",
            "cell": "bit buffer",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "quake 3.ipynb[3]",
            "cell": "list bsps in a pak",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake 3.ipynb[30]",
            "cell": "list shaders in quake 3 shader",
            "route": "",
            "service": "Games"
        },
        {
            "id": "balanced.ipynb[0]",
            "cell": "balanced",
            "route": "",
            "service": "Languages"
        },
        {
            "id": "quake 3.ipynb[31]",
            "cell": "find all shaders",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake 3.ipynb[32]",
            "cell": "search textures directory for paths",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake 3.ipynb[33]",
            "cell": "disassemble all QVMs",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake 3.ipynb[4]",
            "cell": "unpack pk3s",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake 3.ipynb[6]",
            "cell": "make pk3 indexes",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake 3.ipynb[7]",
            "cell": "md4 checksum",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake 3.ipynb[8]",
            "cell": "crc checksum file",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake 3.ipynb[9]",
            "cell": "test crc file",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake3 server connector.ipynb[0]",
            "cell": "test sending a discord message",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake3 server connector.ipynb[10]",
            "cell": "decode client messages",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake3 server connector.ipynb[11]",
            "cell": "huffman decode",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake3 server connector.ipynb[8]",
            "cell": "quake 3 server responses",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake3 server connector.ipynb[12]",
            "cell": "monitor q3 servers",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake3 server connector.ipynb[6]",
            "cell": "quake 3 server commands",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake3 server connector.ipynb[16]",
            "cell": "remove ctrl characters",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake3 server connector.ipynb[13]",
            "cell": "index",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake3 server connector.ipynb[2]",
            "cell": "respond discord commands",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake3 server connector.ipynb[18]",
            "cell": "spectate q3 server",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake3 server connector.ipynb[14]",
            "cell": "ssh remote wget",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake3 server connector.ipynb[15]",
            "cell": "dns lookup",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake3 server connector.ipynb[17]",
            "cell": "quake3 server status",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake3 server connector.ipynb[4]",
            "cell": "challenge discord command",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake3 server connector.ipynb[5]",
            "cell": "discord bot",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake3 server connector.ipynb[9]",
            "cell": "format quake 3 response",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quake3 server connector.ipynb[7]",
            "cell": "test quake 3 rcon commands",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quakejs.ipynb[0]",
            "cell": "quakejs web master",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quakejs.ipynb[1]",
            "cell": "quakejs connection",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quakejs.ipynb[3]",
            "cell": "quakejs utilities",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quakejs.ipynb[2]",
            "cell": "quakejs parsing",
            "route": "",
            "service": "Games"
        },
        {
            "id": "quakejs.ipynb[4]",
            "cell": "test quakejs master",
            "route": "",
            "service": "Games"
        },
        {
            "id": "google calendar data.ipynb[0]",
            "cell": "test calendar sum all hours worked on study sauce since september 2016",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google calendar.ipynb[1]",
            "cell": "list events",
            "route": "",
            "service": "Google"
        },
        {
            "id": "dates.ipynb[2]",
            "cell": "sum a list of events",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "google calendar data.ipynb[1]",
            "cell": "convert chrome date to calendar date",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google calendar data.ipynb[3]",
            "cell": "get bookmarks from local chrome database",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google calendar data.ipynb[4]",
            "cell": "test parse bookmarks",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google calendar data.ipynb[5]",
            "cell": "sync chrome bookmarks",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google calendar data.ipynb[6]",
            "cell": "sync chrome history",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google calendar data.ipynb[7]",
            "cell": "sync chrome data",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google takeout.ipynb[1]",
            "cell": "order google takeout",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "google calendar data.ipynb[8]",
            "cell": "test syn chrome data",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google calendar graphs.ipynb[0]",
            "cell": "test calendar api graph Iga's cycle for as long as there are valid dates",
            "route": "",
            "service": "Google"
        },
        {
            "id": "dates.ipynb[3]",
            "cell": "Number of days between events",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "dates.ipynb[4]",
            "cell": "display recurrence line graph",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "google calendar graphs.ipynb[1]",
            "cell": "test google calendar search heatmap",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google calendar graphs.ipynb[2]",
            "cell": "test google calendar search swimlane",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google calendar graphs.ipynb[3]",
            "cell": "test google calendar search pie chart",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google authorize.ipynb[0]",
            "cell": "google oauth token client",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "google calendar.ipynb[4]",
            "cell": "correct dates time",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google calendar.ipynb[2]",
            "cell": "Run todays calendar events",
            "route": "",
            "service": "Google"
        },
        {
            "id": "heartbeat.ipynb[0]",
            "cell": "heartbeat thump",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "facebook data.ipynb[4]",
            "cell": "Scrape facebook events",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "google contacts.ipynb[0]",
            "cell": "list google contact",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google drive.ipynb[0]",
            "cell": "authorize google drive",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google drive.ipynb[1]",
            "cell": "test list google drive",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google drive.ipynb[2]",
            "cell": "list google drive files",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google drive.ipynb[3]",
            "cell": "insert google drive permissions",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google drive.ipynb[10]",
            "cell": "create a copy of study sauce template",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google drive.ipynb[6]",
            "cell": "copy a file on google drive",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google drive.ipynb[11]",
            "cell": "create a sheet handler",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google drive.ipynb[4]",
            "cell": "create a sheet in google drive",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google sheets.ipynb[10]",
            "cell": "authorize sheets api",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google drive.ipynb[5]",
            "cell": "test google sheet create",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google drive.ipynb[7]",
            "cell": "merge google drive",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google drive.ipynb[8]",
            "cell": "download all docs as actual data files",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google drive.ipynb[9]",
            "cell": "sign a file url for uploading to google storage",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google maps.ipynb[0]",
            "cell": "use places nearby API",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google maps.ipynb[1]",
            "cell": "place details google maps",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google maps.ipynb[2]",
            "cell": "use Google Geocaching",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google maps.ipynb[3]",
            "cell": "cache locations nearby",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google maps.ipynb[4]",
            "cell": "extract depth maps",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google maps.ipynb[5]",
            "cell": "load google panorama",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google maps.ipynb[6]",
            "cell": "test google depth maps",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google scheduling.ipynb[0]",
            "cell": "space out purple event",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google scheduling.ipynb[1]",
            "cell": "schedule study time",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google scheduling.ipynb[2]",
            "cell": "schedule inside outside of time bounds",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google scheduling.ipynb[4]",
            "cell": "prioritize events based on glob summary",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google scheduling.ipynb[5]",
            "cell": "calendar search heatmap",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google scheduling.ipynb[6]",
            "cell": "search calendar",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google search api.ipynb[2]",
            "cell": "authorize custom search",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google search api.ipynb[1]",
            "cell": "test custom search",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google sheets.ipynb[1]",
            "cell": "test templates google sheet",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google sheets.ipynb[7]",
            "cell": "get worksheet by name",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google sheets.ipynb[5]",
            "cell": "test google data sheet",
            "route": "",
            "service": "Google"
        },
        {
            "id": "google sheets.ipynb[9]",
            "cell": "test google sheet add row",
            "route": "",
            "service": "Google"
        },
        {
            "id": "antlr.ipynb[11]",
            "cell": "",
            "route": "",
            "service": "Languages"
        },
        {
            "id": "antlr.ipynb[4]",
            "cell": "get antlr tool",
            "route": "",
            "service": "Languages"
        },
        {
            "id": "antlr.ipynb[12]",
            "cell": "ext to lang",
            "route": "",
            "service": "Languages"
        },
        {
            "id": "antlr.ipynb[13]",
            "cell": "generate antlr parsers",
            "route": "",
            "service": "Languages"
        },
        {
            "id": "antlr.ipynb[8]",
            "cell": "",
            "route": "",
            "service": "Languages"
        },
        {
            "id": "ciede2000.ipynb[1]",
            "cell": "rgb 2 lab",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "antlr.ipynb[5]",
            "cell": "antlr to html",
            "route": "",
            "service": "Languages"
        },
        {
            "id": "antlr.ipynb[6]",
            "cell": "antlr tree visitor",
            "route": "",
            "service": "Languages"
        },
        {
            "id": "antlr.ipynb[9]",
            "cell": "antlr tree to es",
            "route": "",
            "service": "Languages"
        },
        {
            "id": "bison.ipynb[1]",
            "cell": "select jison tree",
            "route": "",
            "service": "Languages"
        },
        {
            "id": "google timeline.ipynb[5]",
            "cell": "reconcile timeline",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "csharp.ipynb[0]",
            "cell": "rosetta euler csharp 005",
            "route": "",
            "service": "Languages"
        },
        {
            "id": "csharp.ipynb[1]",
            "cell": "test edge.js",
            "route": "",
            "service": "Languages"
        },
        {
            "id": "json.ipynb[1]",
            "cell": "test stream by creating a slow stream",
            "route": "",
            "service": "Languages"
        },
        {
            "id": "minimatch.ipynb[0]",
            "cell": "expand",
            "route": "",
            "service": "Languages"
        },
        {
            "id": "minimatch.ipynb[1]",
            "cell": "mini parser",
            "route": "",
            "service": "Languages"
        },
        {
            "id": "python.ipynb[0]",
            "cell": "rosetta euler python 005",
            "route": "",
            "service": "Languages"
        },
        {
            "id": "regexp.ipynb[0]",
            "cell": "Why parse it when it is built in to javascript",
            "route": "",
            "service": "Languages"
        },
        {
            "id": "Good UX Intro.ipynb[0]",
            "cell": "Pretty simple right",
            "route": "",
            "service": "Marketing"
        },
        {
            "id": "Good UX Intro.ipynb[4]",
            "cell": "2. Product owner: Begin.  Good on regressions",
            "route": "",
            "service": "Marketing"
        },
        {
            "id": "avidbrain.ipynb[0]",
            "cell": "Test avidbrain",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "facebook connections.ipynb[0]",
            "cell": "collect facebook profiles",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "utilities.ipynb[1]",
            "cell": "all elements until",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "facebook connections.ipynb[3]",
            "cell": "connect on facebook",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "facebook connections.ipynb[4]",
            "cell": "connect add friends facebook",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "What is Selenium.ipynb[2]",
            "cell": "run a selenium cell on the Docker machine",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "facebook data.ipynb[0]",
            "cell": "Log in to facebook",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "facebook data.ipynb[1]",
            "cell": "Scrape facebook profile",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "facebook data.ipynb[2]",
            "cell": "Like all facebook posts",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "facebook data.ipynb[3]",
            "cell": "Scrape facebook event",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "facebook data.ipynb[6]",
            "cell": "Scrape facebook friends",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "facebook data.ipynb[7]",
            "cell": "Automatically diff facebook friends",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "facebook data.ipynb[9]",
            "cell": "Unfollow everyone on facebook",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "facebook messaging.ipynb[0]",
            "cell": "get unread threads facebook",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "facebook messaging.ipynb[3]",
            "cell": "List Facebook threads",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "facebook messaging.ipynb[4]",
            "cell": "Get messages from facebook",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "facebook messaging.ipynb[1]",
            "cell": "scan commands facebook",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "facebook messaging.ipynb[2]",
            "cell": "sync facebook threads",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "facebook messaging.ipynb[6]",
            "cell": "send facebook message",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "facebook webdriver.ipynb[0]",
            "cell": "facebook login",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "facebook webdriver.ipynb[1]",
            "cell": "list friends",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "facebook webdriver.ipynb[2]",
            "cell": "add friend",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "forms.ipynb[0]",
            "cell": "form utilities",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "forms.ipynb[1]",
            "cell": "fill select dropdown",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "forms.ipynb[2]",
            "cell": "map object to form",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "forms.ipynb[3]",
            "cell": "log in to multiple sites",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "forms.ipynb[4]",
            "cell": "test sites logins",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "forms.ipynb[5]",
            "cell": "get all links html",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "github.ipynb[0]",
            "cell": "download github",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "google authorize.ipynb[1]",
            "cell": "use selenium to authorize Google access",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "google takeout.ipynb[0]",
            "cell": "download google takeout",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "google takeout.ipynb[3]",
            "cell": "d3 stream my chrome history by category and site sub-divided",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "google timeline.ipynb[0]",
            "cell": "Scrape google timeline",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "google timeline.ipynb[1]",
            "cell": "Read single google timeline page",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "google timeline.ipynb[2]",
            "cell": "Find the average latitute and longitude at each destination",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "google timeline.ipynb[3]",
            "cell": "Reconcile timeline data with calendar",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "google timeline.ipynb[4]",
            "cell": "Load location export data",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "google timeline.ipynb[6]",
            "cell": "search timeline events",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "linkedin connections.ipynb[0]",
            "cell": "sync linkedin contacts with google contacts",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "linkedin connections.ipynb[1]",
            "cell": "scrape entire linkedin profile",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "linkedin connections.ipynb[2]",
            "cell": "scrape linkedin contacts",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "linkedin connections.ipynb[4]",
            "cell": "connect on linkedin",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "linkedin connections.ipynb[5]",
            "cell": "connect add friends linkedin",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "linkedin messages.ipynb[0]",
            "cell": "Log in to LinkedIn",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "linkedin messages.ipynb[1]",
            "cell": "Scrape LinkedIn profile",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "linkedin messages.ipynb[2]",
            "cell": "List LinkedIn threads",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "linkedin messages.ipynb[3]",
            "cell": "Read messages LinkedIn thread",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "linkedin messages.ipynb[4]",
            "cell": "scrape linkedin threads",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "linkedin messages.ipynb[6]",
            "cell": "scan for commands linkedin",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "linkedin webdriver.ipynb[0]",
            "cell": "login linkedin",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "orchestration.ipynb[0]",
            "cell": "resize selenium window",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "orchestration.ipynb[1]",
            "cell": "only one window",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "orchestration.ipynb[2]",
            "cell": "tile selenium chrome windows",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "orchestration.ipynb[3]",
            "cell": "get all session and window urls",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "orchestration.ipynb[4]",
            "cell": "send a joke",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "orchestration.ipynb[5]",
            "cell": "send facebook thanks",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "orchestration.ipynb[7]",
            "cell": "clean up old selenium sessions",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "What is Selenium.ipynb[0]",
            "cell": "What is Selenium",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "orchestration.ipynb[8]",
            "cell": "screenshot all sessions",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "reddit.ipynb[0]",
            "cell": "reddit login",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "reddit.ipynb[1]",
            "cell": "reddit post",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "webdriver.ipynb[7]",
            "cell": "selenium query",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "reddit.ipynb[2]",
            "cell": "test reddit post",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "reddit.ipynb[3]",
            "cell": "reddit weekly",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "reddit.ipynb[5]",
            "cell": "reddit scraper",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "reddit.ipynb[4]",
            "cell": "reddit month of links",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "scraping.ipynb[5]",
            "cell": "convert summaries",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "scraping.ipynb[6]",
            "cell": "default link collector",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "webdriver.ipynb[6]",
            "cell": "selenium select",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "reddit.ipynb[6]",
            "cell": "test reddit scraper",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "scraping.ipynb[1]",
            "cell": "test article extract",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "scraping.ipynb[4]",
            "cell": "summarize all articles",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "selenium commands.ipynb[0]",
            "cell": "What is Selenium",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "selenium demo.ipynb[0]",
            "cell": "Start the selenium server and crawl 16 search results at once",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "selenium server.ipynb[0]",
            "cell": "Start a selenium http express server",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "service auth.ipynb[1]",
            "cell": "Add encrypted to passwords.json",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "service auth.ipynb[4]",
            "cell": "download passwords from google",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "service auth.ipynb[6]",
            "cell": "log in to Google using webdriver",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "service auth.ipynb[7]",
            "cell": "Automatically fill any type of login form using various algorithms",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "utilities.ipynb[0]",
            "cell": "Scroll a specific element",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "utilities.ipynb[2]",
            "cell": "click spa link",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "utilities.ipynb[3]",
            "cell": "https://www.mathworks.com/help/vision/examples/automatically-detect-and-recognize-text-in-natural-images.htmls_tid=gn_loc_drop",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "utilities.ipynb[4]",
            "cell": "verify human",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "utilities.ipynb[5]",
            "cell": "test verify human",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "webdriver.ipynb[1]",
            "cell": "selenium session",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "webdriver.ipynb[2]",
            "cell": "webdriver test",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "webdriver.ipynb[3]",
            "cell": "close all windows",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "webdriver.ipynb[4]",
            "cell": "selenium executor",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "webdriver.ipynb[5]",
            "cell": "list sessions",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "What is Selenium.ipynb[1]",
            "cell": "connect to VNC through the web browser",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "What is Selenium.ipynb[3]",
            "cell": "Test docker selenium",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "What is Selenium.ipynb[4]",
            "cell": "Transfer login state to current browser",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "you earned it.ipynb[0]",
            "cell": "high five people in YouEarnedIt",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "you earned it.ipynb[1]",
            "cell": "automate YouEarnedIt",
            "route": "",
            "service": "Selenium"
        },
        {
            "id": "bash.ipynb[1]",
            "cell": "node webdriver support",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "bash.ipynb[2]",
            "cell": "install node",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "bash.ipynb[3]",
            "cell": "install notebooks",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "bash.ipynb[4]",
            "cell": "install systemd",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "bash.ipynb[5]",
            "cell": "install launchd",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "bash.ipynb[7]",
            "cell": "run the same command",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "bash.ipynb[9]",
            "cell": "better jupyter organization",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "child process.ipynb[1]",
            "cell": "test child process",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "child process.ipynb[2]",
            "cell": "convert bash to one liner",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "ciede2000.ipynb[0]",
            "cell": "ciede2000",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "ciede2000.ipynb[2]",
            "cell": "try ciede2000",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "compress.ipynb[0]",
            "cell": "Minified lzw compression",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "compress.ipynb[2]",
            "cell": "encode files with brotli",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "dates.ipynb[0]",
            "cell": "find Tuesdays late in the month",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "dylib.ipynb[0]",
            "cell": "include a dynamic lib",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "shell-parse.ipynb[0]",
            "cell": "shell parse",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "dylib.ipynb[3]",
            "cell": "test a csharp dylib",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "dylib.ipynb[4]",
            "cell": "set mouse position",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "robot.ipynb[6]",
            "cell": "mouse control cocoa",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "dylib.ipynb[6]",
            "cell": "get c exports",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "heartbeat.ipynb[1]",
            "cell": "run todays heartbeat items",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "levenshtein.ipynb[0]",
            "cell": "Find the levenshtein distance",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "levenshtein.ipynb[2]",
            "cell": "search levenshtein distance",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "mono.ipynb[0]",
            "cell": "run Mono with docker",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "openssl.ipynb[0]",
            "cell": "create a trusted root CA",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "openssl.ipynb[2]",
            "cell": "generate a self-signed cert",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "parse.ipynb[0]",
            "cell": "//  escape a string for regex",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "qr codes.ipynb[0]",
            "cell": "generate a qr code using google APIs",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "robot.ipynb[1]",
            "cell": "node window screenshot",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "robot.ipynb[2]",
            "cell": "get screen size",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "robot.ipynb[3]",
            "cell": "move mouse",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "usage.ipynb[1]",
            "cell": "system usage graph",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "uuid.ipynb[0]",
            "cell": "Generate a universally unique identifier",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "vnc.ipynb[0]",
            "cell": "What is VNC",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "vnc.ipynb[3]",
            "cell": "Use vnc with live-server",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "vnc.ipynb[5]",
            "cell": "selenium vnc server",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "vnc.ipynb[6]",
            "cell": "vnc entry point",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "vnc.ipynb[7]",
            "cell": "install vnc entry",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "vnc.ipynb[8]",
            "cell": "install aws vnc selenium",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "window enum.ipynb[0]",
            "cell": "enum windows with cocoa",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "window enum.ipynb[1]",
            "cell": "lookup window by",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "windows.ipynb[0]",
            "cell": "list window handles",
            "route": "",
            "service": "Utilities"
        },
        {
            "id": "windows.ipynb[1]",
            "cell": "monitor active windows",
            "route": "",
            "service": "Utilities"
        }
    ],
    "edges": [
        {
            "source": "llama vision.ipynb[1]",
            "target": "llama vision.ipynb[0]"
        },
        {
            "source": "llama vision.ipynb[13]",
            "target": "llama vision.ipynb[7]"
        },
        {
            "source": "llama vision.ipynb[13]",
            "target": "llm writing.ipynb[4]"
        },
        {
            "source": "llama vision.ipynb[13]",
            "target": "llama vision.ipynb[9]"
        },
        {
            "source": "llama vision.ipynb[13]",
            "target": "llama vision.ipynb[12]"
        },
        {
            "source": "llama vision.ipynb[13]",
            "target": "llama vision.ipynb[10]"
        },
        {
            "source": "llama vision.ipynb[13]",
            "target": "llama vision.ipynb[11]"
        },
        {
            "source": "llama vision.ipynb[2]",
            "target": "llama vision.ipynb[0]"
        },
        {
            "source": "llama.ipynb[0]",
            "target": "llama.ipynb[4]"
        },
        {
            "source": "llama.ipynb[0]",
            "target": "llama.ipynb[1]"
        },
        {
            "source": "llama.ipynb[0]",
            "target": "llama.ipynb[9]"
        },
        {
            "source": "llama.ipynb[1]",
            "target": "llama.ipynb[4]"
        },
        {
            "source": "llama.ipynb[2]",
            "target": "llama.ipynb[4]"
        },
        {
            "source": "llama.ipynb[2]",
            "target": "llama.ipynb[8]"
        },
        {
            "source": "llama.ipynb[2]",
            "target": "llama.ipynb[3]"
        },
        {
            "source": "llama.ipynb[3]",
            "target": "llama.ipynb[10]"
        },
        {
            "source": "llama.ipynb[4]",
            "target": "llama.ipynb[10]"
        },
        {
            "source": "llama.ipynb[5]",
            "target": "llama.ipynb[10]"
        },
        {
            "source": "llama.ipynb[6]",
            "target": "files.ipynb[5]"
        },
        {
            "source": "llama.ipynb[6]",
            "target": "llama.ipynb[4]"
        },
        {
            "source": "llama.ipynb[7]",
            "target": "llama.ipynb[10]"
        },
        {
            "source": "llama.ipynb[9]",
            "target": "llama.ipynb[5]"
        },
        {
            "source": "llama.ipynb[9]",
            "target": "llama.ipynb[7]"
        },
        {
            "source": "llama.ipynb[9]",
            "target": "syntax.ipynb[7]"
        },
        {
            "source": "llama.ipynb[9]",
            "target": "llama.ipynb[8]"
        },
        {
            "source": "llama.ipynb[9]",
            "target": "dylib.ipynb[5]"
        },
        {
            "source": "llama.ipynb[9]",
            "target": "python.ipynb[2]"
        },
        {
            "source": "llm blogging.ipynb[0]",
            "target": "llm writing.ipynb[4]"
        },
        {
            "source": "llm blogging.ipynb[0]",
            "target": "llm blogging.ipynb[1]"
        },
        {
            "source": "llm blogging.ipynb[0]",
            "target": "data collection.ipynb[7]"
        },
        {
            "source": "llm chat.ipynb[0]",
            "target": "llm writing.ipynb[4]"
        },
        {
            "source": "llm chat.ipynb[0]",
            "target": "llm tools.ipynb[1]"
        },
        {
            "source": "llm chat.ipynb[0]",
            "target": "llm chat.ipynb[1]"
        },
        {
            "source": "llm chat.ipynb[2]",
            "target": "llm chat.ipynb[1]"
        },
        {
            "source": "llm chat.ipynb[3]",
            "target": "llm chat.ipynb[1]"
        },
        {
            "source": "llm chat.ipynb[4]",
            "target": "llm chat.ipynb[1]"
        },
        {
            "source": "llm chat.ipynb[5]",
            "target": "syntax.ipynb[5]"
        },
        {
            "source": "llm chat.ipynb[5]",
            "target": "syntax.ipynb[7]"
        },
        {
            "source": "llm chat.ipynb[6]",
            "target": "llm chat.ipynb[7]"
        },
        {
            "source": "llm chat.ipynb[6]",
            "target": "llm chat.ipynb[0]"
        },
        {
            "source": "llm chat.ipynb[7]",
            "target": "llm chat.ipynb[1]"
        },
        {
            "source": "llm chat.ipynb[7]",
            "target": "llama vision.ipynb[9]"
        },
        {
            "source": "llm chat.ipynb[7]",
            "target": "git index.ipynb[19]"
        },
        {
            "source": "llm chat.ipynb[7]",
            "target": "llm chat.ipynb[5]"
        },
        {
            "source": "llm chat.ipynb[7]",
            "target": "syntax.ipynb[7]"
        },
        {
            "source": "llm chat.ipynb[7]",
            "target": "llm chat.ipynb[8]"
        },
        {
            "source": "llm chat.ipynb[7]",
            "target": "python.ipynb[1]"
        },
        {
            "source": "llm chat.ipynb[8]",
            "target": "llm chat.ipynb[1]"
        },
        {
            "source": "llm chat.ipynb[9]",
            "target": "llm chat.ipynb[1]"
        },
        {
            "source": "llm chat.ipynb[9]",
            "target": "llm chat.ipynb[8]"
        },
        {
            "source": "llm scaffold.ipynb[1]",
            "target": "data collection.ipynb[7]"
        },
        {
            "source": "llm scaffold.ipynb[1]",
            "target": "llama vision.ipynb[2]"
        },
        {
            "source": "llm scaffold.ipynb[2]",
            "target": "data collection.ipynb[7]"
        },
        {
            "source": "llm scaffold.ipynb[2]",
            "target": "llama vision.ipynb[2]"
        },
        {
            "source": "llm scaffold.ipynb[3]",
            "target": "data collection.ipynb[7]"
        },
        {
            "source": "llm scaffold.ipynb[3]",
            "target": "llama vision.ipynb[2]"
        },
        {
            "source": "llm scaffold.ipynb[4]",
            "target": "llama vision.ipynb[2]"
        },
        {
            "source": "llm scaffold.ipynb[5]",
            "target": "llama vision.ipynb[2]"
        },
        {
            "source": "llm tools.ipynb[0]",
            "target": "llm tools.ipynb[1]"
        },
        {
            "source": "llm tools.ipynb[0]",
            "target": "llm tools.ipynb[2]"
        },
        {
            "source": "llm tools.ipynb[0]",
            "target": "llm tools.ipynb[3]"
        },
        {
            "source": "llm tools.ipynb[1]",
            "target": "llm writing.ipynb[4]"
        },
        {
            "source": "llm tools.ipynb[3]",
            "target": "llama.ipynb[10]"
        },
        {
            "source": "llm tools.ipynb[4]",
            "target": "llm tools.ipynb[1]"
        },
        {
            "source": "llm tools.ipynb[4]",
            "target": "llm tools.ipynb[3]"
        },
        {
            "source": "llm tools.ipynb[4]",
            "target": "llama.ipynb[4]"
        },
        {
            "source": "llm tools.ipynb[4]",
            "target": "llm tools.ipynb[0]"
        },
        {
            "source": "llm tools.ipynb[4]",
            "target": "llama.ipynb[10]"
        },
        {
            "source": "llm writing.ipynb[0]",
            "target": "data collection.ipynb[7]"
        },
        {
            "source": "llm writing.ipynb[0]",
            "target": "llm writing.ipynb[4]"
        },
        {
            "source": "llm writing.ipynb[1]",
            "target": "llm writing.ipynb[4]"
        },
        {
            "source": "llm writing.ipynb[1]",
            "target": "llm writing.ipynb[5]"
        },
        {
            "source": "llm writing.ipynb[1]",
            "target": "data collection.ipynb[7]"
        },
        {
            "source": "llm writing.ipynb[2]",
            "target": "llama.ipynb[10]"
        },
        {
            "source": "llm writing.ipynb[2]",
            "target": "llama vision.ipynb[2]"
        },
        {
            "source": "llm writing.ipynb[3]",
            "target": "data collection.ipynb[7]"
        },
        {
            "source": "llm writing.ipynb[3]",
            "target": "llm writing.ipynb[4]"
        },
        {
            "source": "llm writing.ipynb[3]",
            "target": "llm writing.ipynb[5]"
        },
        {
            "source": "llm writing.ipynb[4]",
            "target": "llama vision.ipynb[0]"
        },
        {
            "source": "llm writing.ipynb[5]",
            "target": "llama.ipynb[10]"
        },
        {
            "source": "llm writing.ipynb[9]",
            "target": "llm writing.ipynb[8]"
        },
        {
            "source": "llm writing.ipynb[9]",
            "target": "llama.ipynb[10]"
        },
        {
            "source": "opencv.ipynb[0]",
            "target": "opencv.ipynb[1]"
        },
        {
            "source": "opencv.ipynb[0]",
            "target": "llama vision.ipynb[14]"
        },
        {
            "source": "opencv.ipynb[10]",
            "target": "opencv.ipynb[9]"
        },
        {
            "source": "opencv.ipynb[10]",
            "target": "llama vision.ipynb[14]"
        },
        {
            "source": "opencv.ipynb[10]",
            "target": "opencv.ipynb[8]"
        },
        {
            "source": "opencv.ipynb[6]",
            "target": "opencv.ipynb[8]"
        },
        {
            "source": "opencv.ipynb[6]",
            "target": "llama vision.ipynb[14]"
        },
        {
            "source": "opencv.ipynb[7]",
            "target": "opencv.ipynb[8]"
        },
        {
            "source": "opencv.ipynb[7]",
            "target": "llama vision.ipynb[14]"
        },
        {
            "source": "opencv.ipynb[8]",
            "target": "opencv.ipynb[5]"
        },
        {
            "source": "opencv.ipynb[8]",
            "target": "llama vision.ipynb[14]"
        },
        {
            "source": "opencv.ipynb[9]",
            "target": "opencv.ipynb[6]"
        },
        {
            "source": "opencv.ipynb[9]",
            "target": "llama vision.ipynb[14]"
        },
        {
            "source": "opencv.ipynb[9]",
            "target": "opencv.ipynb[8]"
        },
        {
            "source": "data collection.ipynb[10]",
            "target": "dates.ipynb[1]"
        },
        {
            "source": "data collection.ipynb[10]",
            "target": "google calendar.ipynb[8]"
        },
        {
            "source": "data collection.ipynb[10]",
            "target": "google calendar.ipynb[0]"
        },
        {
            "source": "data collection.ipynb[11]",
            "target": "google calendar data.ipynb[2]"
        },
        {
            "source": "data collection.ipynb[11]",
            "target": "dates.ipynb[1]"
        },
        {
            "source": "data collection.ipynb[11]",
            "target": "data collection.ipynb[6]"
        },
        {
            "source": "data collection.ipynb[11]",
            "target": "data collection.ipynb[8]"
        },
        {
            "source": "data collection.ipynb[11]",
            "target": "data collection.ipynb[7]"
        },
        {
            "source": "data collection.ipynb[2]",
            "target": "data collection.ipynb[5]"
        },
        {
            "source": "data collection.ipynb[3]",
            "target": "dates.ipynb[1]"
        },
        {
            "source": "data collection.ipynb[3]",
            "target": "google calendar.ipynb[8]"
        },
        {
            "source": "data collection.ipynb[3]",
            "target": "google calendar.ipynb[0]"
        },
        {
            "source": "data collection.ipynb[5]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "data collection.ipynb[5]",
            "target": "llama.ipynb[0]"
        },
        {
            "source": "data collection.ipynb[5]",
            "target": "syntax.ipynb[19]"
        },
        {
            "source": "data collection.ipynb[6]",
            "target": "data collection.ipynb[8]"
        },
        {
            "source": "data collection.ipynb[6]",
            "target": "data collection.ipynb[7]"
        },
        {
            "source": "data collection.ipynb[6]",
            "target": "data collection.ipynb[6]"
        },
        {
            "source": "data collection.ipynb[7]",
            "target": "files.ipynb[3]"
        },
        {
            "source": "data collection.ipynb[7]",
            "target": "data collection.ipynb[8]"
        },
        {
            "source": "data collection.ipynb[8]",
            "target": "patterns.ipynb[2]"
        },
        {
            "source": "data collection.ipynb[9]",
            "target": "data collection.ipynb[7]"
        },
        {
            "source": "movie database.ipynb[0]",
            "target": "movie database.ipynb[4]"
        },
        {
            "source": "movie database.ipynb[1]",
            "target": "levenshtein.ipynb[1]"
        },
        {
            "source": "movie database.ipynb[5]",
            "target": "data collection.ipynb[7]"
        },
        {
            "source": "movie database.ipynb[5]",
            "target": "levenshtein.ipynb[1]"
        },
        {
            "source": "movie database.ipynb[5]",
            "target": "llm writing.ipynb[4]"
        },
        {
            "source": "movie database.ipynb[5]",
            "target": "movie database.ipynb[8]"
        },
        {
            "source": "movie database.ipynb[6]",
            "target": "data collection.ipynb[7]"
        },
        {
            "source": "movie database.ipynb[6]",
            "target": "movie database.ipynb[7]"
        },
        {
            "source": "movie database.ipynb[6]",
            "target": "movie database.ipynb[8]"
        },
        {
            "source": "parsing email addresses.ipynb[0]",
            "target": "google search api.ipynb[0]"
        },
        {
            "source": "resume.ipynb[0]",
            "target": "google sheets.ipynb[3]"
        },
        {
            "source": "resume.ipynb[0]",
            "target": "d3.ipynb[3]"
        },
        {
            "source": "resume.ipynb[1]",
            "target": "resume.ipynb[0]"
        },
        {
            "source": "aws.ipynb[0]",
            "target": "rpc.ipynb[6]"
        },
        {
            "source": "aws.ipynb[0]",
            "target": "python.ipynb[1]"
        },
        {
            "source": "aws.ipynb[0]",
            "target": "bash.ipynb[6]"
        },
        {
            "source": "google cloud api.ipynb[0]",
            "target": "google cloud api.ipynb[9]"
        },
        {
            "source": "google cloud api.ipynb[1]",
            "target": "google cloud api.ipynb[0]"
        },
        {
            "source": "google cloud api.ipynb[10]",
            "target": "convert spreadsheet.ipynb[1]"
        },
        {
            "source": "google cloud api.ipynb[10]",
            "target": "google cloud api.ipynb[6]"
        },
        {
            "source": "google cloud api.ipynb[10]",
            "target": "google cloud api.ipynb[3]"
        },
        {
            "source": "google cloud api.ipynb[2]",
            "target": "google cloud api.ipynb[9]"
        },
        {
            "source": "google cloud api.ipynb[3]",
            "target": "google cloud api.ipynb[9]"
        },
        {
            "source": "google cloud api.ipynb[3]",
            "target": "google cloud api.ipynb[2]"
        },
        {
            "source": "google cloud api.ipynb[3]",
            "target": "google cloud api.ipynb[0]"
        },
        {
            "source": "google cloud api.ipynb[3]",
            "target": "google storage api.ipynb[0]"
        },
        {
            "source": "google cloud api.ipynb[4]",
            "target": "google cloud api.ipynb[0]"
        },
        {
            "source": "google cloud api.ipynb[5]",
            "target": "google cloud api.ipynb[3]"
        },
        {
            "source": "google cloud api.ipynb[5]",
            "target": "google cloud api.ipynb[6]"
        },
        {
            "source": "google cloud api.ipynb[6]",
            "target": "google cloud api.ipynb[9]"
        },
        {
            "source": "google cloud api.ipynb[6]",
            "target": "google cloud api.ipynb[0]"
        },
        {
            "source": "google cloud api.ipynb[6]",
            "target": "google cloud api.ipynb[2]"
        },
        {
            "source": "google cloud api.ipynb[7]",
            "target": "google cloud api.ipynb[6]"
        },
        {
            "source": "google rpc.ipynb[0]",
            "target": "rpc.ipynb[6]"
        },
        {
            "source": "google rpc.ipynb[1]",
            "target": "rpc.ipynb[6]"
        },
        {
            "source": "google rpc.ipynb[1]",
            "target": "rpc.ipynb[7]"
        },
        {
            "source": "google rpc.ipynb[2]",
            "target": "google rpc.ipynb[1]"
        },
        {
            "source": "google rpc.ipynb[3]",
            "target": "syntax.ipynb[19]"
        },
        {
            "source": "google rpc.ipynb[3]",
            "target": "notebook.ipynb[13]"
        },
        {
            "source": "google rpc.ipynb[3]",
            "target": "syntax.ipynb[5]"
        },
        {
            "source": "google rpc.ipynb[3]",
            "target": "syntax.ipynb[7]"
        },
        {
            "source": "google rpc.ipynb[3]",
            "target": "google rpc.ipynb[3]"
        },
        {
            "source": "google rpc.ipynb[3]",
            "target": "zuora to eloqua.ipynb[15]"
        },
        {
            "source": "google storage api.ipynb[0]",
            "target": "google cloud api.ipynb[9]"
        },
        {
            "source": "google storage api.ipynb[1]",
            "target": "google storage api.ipynb[0]"
        },
        {
            "source": "google storage api.ipynb[2]",
            "target": "files.ipynb[14]"
        },
        {
            "source": "google storage api.ipynb[2]",
            "target": "google storage api.ipynb[3]"
        },
        {
            "source": "google storage api.ipynb[4]",
            "target": "google storage api.ipynb[0]"
        },
        {
            "source": "google storage api.ipynb[4]",
            "target": "google storage api.ipynb[2]"
        },
        {
            "source": "google storage api.ipynb[4]",
            "target": "google storage api.ipynb[3]"
        },
        {
            "source": "google storage api.ipynb[5]",
            "target": "google cloud api.ipynb[9]"
        },
        {
            "source": "google storage api.ipynb[6]",
            "target": "google storage api.ipynb[4]"
        },
        {
            "source": "aspects.ipynb[0]",
            "target": "languages.ipynb[3]"
        },
        {
            "source": "aspects.ipynb[0]",
            "target": "syntax.ipynb[19]"
        },
        {
            "source": "aspects.ipynb[0]",
            "target": "syntax.ipynb[16]"
        },
        {
            "source": "files.ipynb[1]",
            "target": "d3.ipynb[0]"
        },
        {
            "source": "files.ipynb[1]",
            "target": "files.ipynb[1]"
        },
        {
            "source": "files.ipynb[11]",
            "target": "files.ipynb[5]"
        },
        {
            "source": "files.ipynb[13]",
            "target": "minimatch.ipynb[2]"
        },
        {
            "source": "files.ipynb[17]",
            "target": "files.ipynb[3]"
        },
        {
            "source": "files.ipynb[2]",
            "target": "d3.ipynb[0]"
        },
        {
            "source": "files.ipynb[2]",
            "target": "files.ipynb[1]"
        },
        {
            "source": "files.ipynb[3]",
            "target": "minimatch.ipynb[2]"
        },
        {
            "source": "files.ipynb[3]",
            "target": "files.ipynb[6]"
        },
        {
            "source": "files.ipynb[5]",
            "target": "files.ipynb[6]"
        },
        {
            "source": "files.ipynb[5]",
            "target": "files.ipynb[3]"
        },
        {
            "source": "files.ipynb[7]",
            "target": "files.ipynb[5]"
        },
        {
            "source": "files.ipynb[9]",
            "target": "syntax.ipynb[2]"
        },
        {
            "source": "files.ipynb[9]",
            "target": "files.ipynb[3]"
        },
        {
            "source": "import.ipynb[0]",
            "target": "notebook extensions.ipynb[0]"
        },
        {
            "source": "import.ipynb[4]",
            "target": "notebook.ipynb[13]"
        },
        {
            "source": "import.ipynb[4]",
            "target": "quake3 server connector.ipynb[3]"
        },
        {
            "source": "import.ipynb[5]",
            "target": "data collection.ipynb[7]"
        },
        {
            "source": "import.ipynb[5]",
            "target": "antlr.ipynb[1]"
        },
        {
            "source": "import.ipynb[5]",
            "target": "csharp.ipynb[4]"
        },
        {
            "source": "import.ipynb[5]",
            "target": "csharp.ipynb[3]"
        },
        {
            "source": "import.ipynb[5]",
            "target": "csharp.ipynb[2]"
        },
        {
            "source": "import.ipynb[6]",
            "target": "dylib.ipynb[9]"
        },
        {
            "source": "import.ipynb[6]",
            "target": "dylib.ipynb[10]"
        },
        {
            "source": "import.ipynb[6]",
            "target": "data collection.ipynb[7]"
        },
        {
            "source": "import.ipynb[6]",
            "target": "antlr.ipynb[1]"
        },
        {
            "source": "import.ipynb[6]",
            "target": "dylib.ipynb[8]"
        },
        {
            "source": "import.ipynb[8]",
            "target": "gulp.ipynb[5]"
        },
        {
            "source": "import.ipynb[9]",
            "target": "pyimport.ipynb[3]"
        },
        {
            "source": "kernels.ipynb[0]",
            "target": "patterns.ipynb[9]"
        },
        {
            "source": "kernels.ipynb[1]",
            "target": "patterns.ipynb[9]"
        },
        {
            "source": "kernels.ipynb[1]",
            "target": "kernels.ipynb[0]"
        },
        {
            "source": "kernels.ipynb[10]",
            "target": "kernels.ipynb[9]"
        },
        {
            "source": "kernels.ipynb[10]",
            "target": "kernels.ipynb[5]"
        },
        {
            "source": "kernels.ipynb[10]",
            "target": "patterns.ipynb[9]"
        },
        {
            "source": "kernels.ipynb[10]",
            "target": "kernels.ipynb[18]"
        },
        {
            "source": "kernels.ipynb[11]",
            "target": "kernels.ipynb[9]"
        },
        {
            "source": "kernels.ipynb[12]",
            "target": "kernels.ipynb[9]"
        },
        {
            "source": "kernels.ipynb[12]",
            "target": "kernels.ipynb[5]"
        },
        {
            "source": "kernels.ipynb[12]",
            "target": "patterns.ipynb[9]"
        },
        {
            "source": "kernels.ipynb[13]",
            "target": "kernels.ipynb[5]"
        },
        {
            "source": "kernels.ipynb[16]",
            "target": "patterns.ipynb[8]"
        },
        {
            "source": "kernels.ipynb[16]",
            "target": "kernels.ipynb[24]"
        },
        {
            "source": "kernels.ipynb[16]",
            "target": "kernels.ipynb[3]"
        },
        {
            "source": "kernels.ipynb[16]",
            "target": "kernels.ipynb[9]"
        },
        {
            "source": "kernels.ipynb[16]",
            "target": "kernels.ipynb[18]"
        },
        {
            "source": "kernels.ipynb[17]",
            "target": "patterns.ipynb[8]"
        },
        {
            "source": "kernels.ipynb[18]",
            "target": "patterns.ipynb[8]"
        },
        {
            "source": "kernels.ipynb[18]",
            "target": "kernels.ipynb[9]"
        },
        {
            "source": "kernels.ipynb[18]",
            "target": "kernels.ipynb[6]"
        },
        {
            "source": "kernels.ipynb[18]",
            "target": "kernels.ipynb[7]"
        },
        {
            "source": "kernels.ipynb[18]",
            "target": "kernels.ipynb[8]"
        },
        {
            "source": "kernels.ipynb[19]",
            "target": "kernels.ipynb[18]"
        },
        {
            "source": "kernels.ipynb[19]",
            "target": "kernels.ipynb[5]"
        },
        {
            "source": "kernels.ipynb[19]",
            "target": "patterns.ipynb[9]"
        },
        {
            "source": "kernels.ipynb[2]",
            "target": "kernels.ipynb[0]"
        },
        {
            "source": "kernels.ipynb[20]",
            "target": "kernels.ipynb[0]"
        },
        {
            "source": "kernels.ipynb[20]",
            "target": "kernels.ipynb[3]"
        },
        {
            "source": "kernels.ipynb[20]",
            "target": "kernels.ipynb[9]"
        },
        {
            "source": "kernels.ipynb[20]",
            "target": "git index.ipynb[19]"
        },
        {
            "source": "kernels.ipynb[4]",
            "target": "patterns.ipynb[9]"
        },
        {
            "source": "kernels.ipynb[4]",
            "target": "kernels.ipynb[3]"
        },
        {
            "source": "kernels.ipynb[5]",
            "target": "kernels.ipynb[3]"
        },
        {
            "source": "kernels.ipynb[5]",
            "target": "kernels.ipynb[4]"
        },
        {
            "source": "kernels.ipynb[6]",
            "target": "patterns.ipynb[8]"
        },
        {
            "source": "kernels.ipynb[6]",
            "target": "patterns.ipynb[9]"
        },
        {
            "source": "kernels.ipynb[6]",
            "target": "kernels.ipynb[5]"
        },
        {
            "source": "kernels.ipynb[6]",
            "target": "kernels.ipynb[7]"
        },
        {
            "source": "kernels.ipynb[6]",
            "target": "kernels.ipynb[4]"
        },
        {
            "source": "kernels.ipynb[7]",
            "target": "files.ipynb[14]"
        },
        {
            "source": "kernels.ipynb[8]",
            "target": "patterns.ipynb[9]"
        },
        {
            "source": "kernels.ipynb[8]",
            "target": "kernels.ipynb[5]"
        },
        {
            "source": "kernels.ipynb[8]",
            "target": "kernels.ipynb[6]"
        },
        {
            "source": "kernels.ipynb[8]",
            "target": "kernels.ipynb[7]"
        },
        {
            "source": "kernels.ipynb[8]",
            "target": "patterns.ipynb[8]"
        },
        {
            "source": "kernels.ipynb[9]",
            "target": "patterns.ipynb[9]"
        },
        {
            "source": "kernels.ipynb[9]",
            "target": "kernels.ipynb[5]"
        },
        {
            "source": "kernels.ipynb[9]",
            "target": "patterns.ipynb[8]"
        },
        {
            "source": "kernels.ipynb[9]",
            "target": "kernels.ipynb[8]"
        },
        {
            "source": "kernels.ipynb[9]",
            "target": "kernels.ipynb[7]"
        },
        {
            "source": "languages.ipynb[3]",
            "target": "syntax.ipynb[16]"
        },
        {
            "source": "languages.ipynb[3]",
            "target": "syntax.ipynb[19]"
        },
        {
            "source": "languages.ipynb[8]",
            "target": "syntax.ipynb[19]"
        },
        {
            "source": "languages.ipynb[8]",
            "target": "syntax.ipynb[21]"
        },
        {
            "source": "languages.ipynb[8]",
            "target": "syntax.ipynb[16]"
        },
        {
            "source": "languages.ipynb[8]",
            "target": "notebook.ipynb[7]"
        },
        {
            "source": "languages.ipynb[8]",
            "target": "notebook.ipynb[4]"
        },
        {
            "source": "languages.ipynb[8]",
            "target": "notebook.ipynb[5]"
        },
        {
            "source": "notebook.ipynb[10]",
            "target": "files.ipynb[14]"
        },
        {
            "source": "notebook.ipynb[10]",
            "target": "notebook.ipynb[14]"
        },
        {
            "source": "notebook.ipynb[10]",
            "target": "notebook.ipynb[5]"
        },
        {
            "source": "notebook.ipynb[10]",
            "target": "notebook.ipynb[4]"
        },
        {
            "source": "notebook.ipynb[10]",
            "target": "syntax.ipynb[9]"
        },
        {
            "source": "notebook.ipynb[10]",
            "target": "files.ipynb[9]"
        },
        {
            "source": "notebook.ipynb[10]",
            "target": "de-linting.ipynb[0]"
        },
        {
            "source": "notebook.ipynb[10]",
            "target": "notebook.ipynb[13]"
        },
        {
            "source": "notebook.ipynb[10]",
            "target": "google storage api.ipynb[3]"
        },
        {
            "source": "notebook.ipynb[10]",
            "target": "google rpc.ipynb[3]"
        },
        {
            "source": "notebook.ipynb[10]",
            "target": "llama.ipynb[0]"
        },
        {
            "source": "notebook.ipynb[11]",
            "target": "csharp.ipynb[4]"
        },
        {
            "source": "notebook.ipynb[13]",
            "target": "notebook.ipynb[12]"
        },
        {
            "source": "notebook.ipynb[4]",
            "target": "syntax.ipynb[19]"
        },
        {
            "source": "notebook.ipynb[4]",
            "target": "languages.ipynb[3]"
        },
        {
            "source": "notebook.ipynb[5]",
            "target": "syntax.ipynb[19]"
        },
        {
            "source": "notebook.ipynb[5]",
            "target": "languages.ipynb[3]"
        },
        {
            "source": "notebook.ipynb[5]",
            "target": "notebook.ipynb[13]"
        },
        {
            "source": "notebook.ipynb[5]",
            "target": "syntax.ipynb[16]"
        },
        {
            "source": "notebook.ipynb[5]",
            "target": "json.ipynb[0]"
        },
        {
            "source": "notebook.ipynb[7]",
            "target": "languages.ipynb[3]"
        },
        {
            "source": "notebook.ipynb[7]",
            "target": "syntax.ipynb[19]"
        },
        {
            "source": "notebook.ipynb[7]",
            "target": "notebook.ipynb[13]"
        },
        {
            "source": "notebook.ipynb[8]",
            "target": "notebook.ipynb[7]"
        },
        {
            "source": "patterns.ipynb[2]",
            "target": "patterns.ipynb[0]"
        },
        {
            "source": "pyimport.ipynb[6]",
            "target": "notebook extensions.ipynb[0]"
        },
        {
            "source": "pyimport.ipynb[6]",
            "target": "llama vision.ipynb[14]"
        },
        {
            "source": "rpc.ipynb[1]",
            "target": "syntax.ipynb[19]"
        },
        {
            "source": "rpc.ipynb[1]",
            "target": "syntax.ipynb[5]"
        },
        {
            "source": "rpc.ipynb[1]",
            "target": "rpc.ipynb[0]"
        },
        {
            "source": "rpc.ipynb[1]",
            "target": "pyimport.ipynb[3]"
        },
        {
            "source": "rpc.ipynb[2]",
            "target": "rpc.ipynb[1]"
        },
        {
            "source": "rpc.ipynb[2]",
            "target": "rpc.ipynb[0]"
        },
        {
            "source": "rpc.ipynb[2]",
            "target": "syntax.ipynb[19]"
        },
        {
            "source": "rpc.ipynb[2]",
            "target": "llama.ipynb[0]"
        },
        {
            "source": "rpc.ipynb[3]",
            "target": "rpc.ipynb[2]"
        },
        {
            "source": "rpc.ipynb[4]",
            "target": "rpc.ipynb[2]"
        },
        {
            "source": "rpc.ipynb[4]",
            "target": "google calendar.ipynb[6]"
        },
        {
            "source": "rpc.ipynb[4]",
            "target": "google contacts.ipynb[1]"
        },
        {
            "source": "rpc.ipynb[4]",
            "target": "google calendar.ipynb[0]"
        },
        {
            "source": "rpc.ipynb[4]",
            "target": "google cloud commands.ipynb[3]"
        },
        {
            "source": "rpc.ipynb[5]",
            "target": "google calendar.ipynb[8]"
        },
        {
            "source": "rpc.ipynb[5]",
            "target": "dates.ipynb[1]"
        },
        {
            "source": "rpc.ipynb[5]",
            "target": "google calendar.ipynb[0]"
        },
        {
            "source": "rpc.ipynb[5]",
            "target": "rpc.ipynb[6]"
        },
        {
            "source": "rpc.ipynb[6]",
            "target": "rpc.ipynb[3]"
        },
        {
            "source": "rpc.ipynb[6]",
            "target": "syntax.ipynb[7]"
        },
        {
            "source": "rpc.ipynb[6]",
            "target": "rpc.ipynb[6]"
        },
        {
            "source": "rpc.ipynb[8]",
            "target": "polyfills.ipynb[0]"
        },
        {
            "source": "rpc.ipynb[9]",
            "target": "rpc.ipynb[8]"
        },
        {
            "source": "syntax.ipynb[0]",
            "target": "syntax.ipynb[19]"
        },
        {
            "source": "syntax.ipynb[10]",
            "target": "syntax.ipynb[9]"
        },
        {
            "source": "syntax.ipynb[10]",
            "target": "syntax.ipynb[19]"
        },
        {
            "source": "syntax.ipynb[10]",
            "target": "syntax.ipynb[16]"
        },
        {
            "source": "syntax.ipynb[10]",
            "target": "syntax.ipynb[7]"
        },
        {
            "source": "syntax.ipynb[10]",
            "target": "rpc.ipynb[0]"
        },
        {
            "source": "syntax.ipynb[14]",
            "target": "patterns.ipynb[2]"
        },
        {
            "source": "syntax.ipynb[19]",
            "target": "patterns.ipynb[2]"
        },
        {
            "source": "syntax.ipynb[19]",
            "target": "syntax.ipynb[14]"
        },
        {
            "source": "syntax.ipynb[19]",
            "target": "syntax.ipynb[16]"
        },
        {
            "source": "syntax.ipynb[2]",
            "target": "syntax.ipynb[0]"
        },
        {
            "source": "syntax.ipynb[21]",
            "target": "syntax.ipynb[19]"
        },
        {
            "source": "syntax.ipynb[21]",
            "target": "syntax.ipynb[16]"
        },
        {
            "source": "syntax.ipynb[22]",
            "target": "patterns.ipynb[2]"
        },
        {
            "source": "syntax.ipynb[23]",
            "target": "syntax.ipynb[19]"
        },
        {
            "source": "syntax.ipynb[23]",
            "target": "syntax.ipynb[22]"
        },
        {
            "source": "syntax.ipynb[23]",
            "target": "syntax.ipynb[16]"
        },
        {
            "source": "syntax.ipynb[24]",
            "target": "patterns.ipynb[2]"
        },
        {
            "source": "syntax.ipynb[26]",
            "target": "syntax.ipynb[19]"
        },
        {
            "source": "syntax.ipynb[26]",
            "target": "syntax.ipynb[22]"
        },
        {
            "source": "syntax.ipynb[26]",
            "target": "syntax.ipynb[24]"
        },
        {
            "source": "syntax.ipynb[26]",
            "target": "syntax.ipynb[16]"
        },
        {
            "source": "syntax.ipynb[28]",
            "target": "syntax.ipynb[26]"
        },
        {
            "source": "syntax.ipynb[28]",
            "target": "syntax.ipynb[19]"
        },
        {
            "source": "syntax.ipynb[3]",
            "target": "syntax.ipynb[2]"
        },
        {
            "source": "syntax.ipynb[3]",
            "target": "files.ipynb[5]"
        },
        {
            "source": "syntax.ipynb[4]",
            "target": "syntax.ipynb[3]"
        },
        {
            "source": "syntax.ipynb[5]",
            "target": "syntax.ipynb[19]"
        },
        {
            "source": "syntax.ipynb[7]",
            "target": "syntax.ipynb[19]"
        },
        {
            "source": "syntax.ipynb[7]",
            "target": "syntax.ipynb[5]"
        },
        {
            "source": "syntax.ipynb[8]",
            "target": "syntax.ipynb[7]"
        },
        {
            "source": "syntax.ipynb[9]",
            "target": "syntax.ipynb[19]"
        },
        {
            "source": "voidzero.ipynb[3]",
            "target": "voidzero.ipynb[1]"
        },
        {
            "source": "voidzero.ipynb[3]",
            "target": "llama.ipynb[0]"
        },
        {
            "source": "filesystem.ipynb[1]",
            "target": "llm writing.ipynb[4]"
        },
        {
            "source": "filesystem.ipynb[2]",
            "target": "llm writing.ipynb[4]"
        },
        {
            "source": "filesystem.ipynb[3]",
            "target": "llm writing.ipynb[4]"
        },
        {
            "source": "filesystem.ipynb[4]",
            "target": "llm writing.ipynb[4]"
        },
        {
            "source": "filesystem.ipynb[5]",
            "target": "data collection.ipynb[7]"
        },
        {
            "source": "filesystem.ipynb[5]",
            "target": "files.ipynb[1]"
        },
        {
            "source": "git index.ipynb[13]",
            "target": "git index.ipynb[12]"
        },
        {
            "source": "git index.ipynb[13]",
            "target": "git index.ipynb[14]"
        },
        {
            "source": "git index.ipynb[13]",
            "target": "git index.ipynb[1]"
        },
        {
            "source": "git index.ipynb[13]",
            "target": "git index.ipynb[4]"
        },
        {
            "source": "git index.ipynb[13]",
            "target": "git index.ipynb[8]"
        },
        {
            "source": "git index.ipynb[15]",
            "target": "git index.ipynb[12]"
        },
        {
            "source": "git index.ipynb[15]",
            "target": "git index.ipynb[14]"
        },
        {
            "source": "git index.ipynb[16]",
            "target": "git index.ipynb[12]"
        },
        {
            "source": "git index.ipynb[16]",
            "target": "git index.ipynb[1]"
        },
        {
            "source": "git index.ipynb[16]",
            "target": "git index.ipynb[7]"
        },
        {
            "source": "git index.ipynb[16]",
            "target": "git index.ipynb[2]"
        },
        {
            "source": "git index.ipynb[17]",
            "target": "git index.ipynb[12]"
        },
        {
            "source": "git index.ipynb[17]",
            "target": "git index.ipynb[14]"
        },
        {
            "source": "git index.ipynb[17]",
            "target": "node express.ipynb[15]"
        },
        {
            "source": "git index.ipynb[17]",
            "target": "git index.ipynb[1]"
        },
        {
            "source": "git index.ipynb[17]",
            "target": "git index.ipynb[3]"
        },
        {
            "source": "git index.ipynb[18]",
            "target": "git index.ipynb[12]"
        },
        {
            "source": "git index.ipynb[18]",
            "target": "git index.ipynb[14]"
        },
        {
            "source": "git index.ipynb[18]",
            "target": "git index.ipynb[19]"
        },
        {
            "source": "git index.ipynb[18]",
            "target": "data collection.ipynb[7]"
        },
        {
            "source": "git index.ipynb[18]",
            "target": "node express.ipynb[15]"
        },
        {
            "source": "git index.ipynb[18]",
            "target": "node express.ipynb[14]"
        },
        {
            "source": "git index.ipynb[18]",
            "target": "git index.ipynb[1]"
        },
        {
            "source": "git index.ipynb[18]",
            "target": "git index.ipynb[11]"
        },
        {
            "source": "git index.ipynb[18]",
            "target": "documentation.ipynb[5]"
        },
        {
            "source": "git index.ipynb[20]",
            "target": "git index.ipynb[12]"
        },
        {
            "source": "git index.ipynb[20]",
            "target": "git index.ipynb[14]"
        },
        {
            "source": "git index.ipynb[20]",
            "target": "git index.ipynb[1]"
        },
        {
            "source": "git index.ipynb[20]",
            "target": "git index.ipynb[5]"
        },
        {
            "source": "git index.ipynb[20]",
            "target": "git index.ipynb[9]"
        },
        {
            "source": "git.ipynb[2]",
            "target": "child process.ipynb[0]"
        },
        {
            "source": "git.ipynb[3]",
            "target": "child process.ipynb[0]"
        },
        {
            "source": "git.ipynb[3]",
            "target": "d3.ipynb[4]"
        },
        {
            "source": "git.ipynb[3]",
            "target": "git.ipynb[2]"
        },
        {
            "source": "git.ipynb[3]",
            "target": "d3.ipynb[5]"
        },
        {
            "source": "git.ipynb[3]",
            "target": "git.ipynb[7]"
        },
        {
            "source": "git.ipynb[4]",
            "target": "gulp.ipynb[1]"
        },
        {
            "source": "git.ipynb[4]",
            "target": "gulp.ipynb[0]"
        },
        {
            "source": "git.ipynb[5]",
            "target": "google calendar.ipynb[8]"
        },
        {
            "source": "git.ipynb[5]",
            "target": "git commands.ipynb[5]"
        },
        {
            "source": "git.ipynb[6]",
            "target": "d3.ipynb[4]"
        },
        {
            "source": "git.ipynb[6]",
            "target": "git.ipynb[2]"
        },
        {
            "source": "git.ipynb[6]",
            "target": "child process.ipynb[0]"
        },
        {
            "source": "git.ipynb[6]",
            "target": "google calendar.ipynb[0]"
        },
        {
            "source": "git.ipynb[6]",
            "target": "google calendar.ipynb[7]"
        },
        {
            "source": "git.ipynb[6]",
            "target": "git.ipynb[7]"
        },
        {
            "source": "git.ipynb[6]",
            "target": "google calendar.ipynb[6]"
        },
        {
            "source": "git.ipynb[6]",
            "target": "google calendar.ipynb[8]"
        },
        {
            "source": "git.ipynb[6]",
            "target": "git commands.ipynb[5]"
        },
        {
            "source": "git.ipynb[7]",
            "target": "files.ipynb[5]"
        },
        {
            "source": "git.ipynb[8]",
            "target": "git.ipynb[7]"
        },
        {
            "source": "git.ipynb[8]",
            "target": "child process.ipynb[0]"
        },
        {
            "source": "git.ipynb[9]",
            "target": "child process.ipynb[0]"
        },
        {
            "source": "git.ipynb[9]",
            "target": "dates.ipynb[1]"
        },
        {
            "source": "git.ipynb[9]",
            "target": "google calendar.ipynb[5]"
        },
        {
            "source": "git.ipynb[9]",
            "target": "google calendar.ipynb[7]"
        },
        {
            "source": "demo.ipynb[8]",
            "target": "node simple-imap.ipynb[0]"
        },
        {
            "source": "docker demo.ipynb[1]",
            "target": "selenium commands.ipynb[3]"
        },
        {
            "source": "docker demo.ipynb[1]",
            "target": "node install.ipynb[1]"
        },
        {
            "source": "docker demo.ipynb[1]",
            "target": "vnc.ipynb[2]"
        },
        {
            "source": "docker demo.ipynb[1]",
            "target": "vnc.ipynb[4]"
        },
        {
            "source": "Angular components.ipynb[3]",
            "target": "gulp.ipynb[5]"
        },
        {
            "source": "display angular.ipynb[1]",
            "target": "files.ipynb[5]"
        },
        {
            "source": "display angular.ipynb[1]",
            "target": "angular render service.ipynb[0]"
        },
        {
            "source": "de-linting.ipynb[2]",
            "target": "de-linting.ipynb[0]"
        },
        {
            "source": "de-linting.ipynb[2]",
            "target": "llama.ipynb[0]"
        },
        {
            "source": "de-linting.ipynb[3]",
            "target": "de-linting.ipynb[2]"
        },
        {
            "source": "de-linting.ipynb[3]",
            "target": "files.ipynb[3]"
        },
        {
            "source": "de-linting.ipynb[4]",
            "target": "de-linting.ipynb[0]"
        },
        {
            "source": "de-linting.ipynb[4]",
            "target": "notebook.ipynb[10]"
        },
        {
            "source": "de-linting.ipynb[4]",
            "target": "notebook.ipynb[0]"
        },
        {
            "source": "de-linting.ipynb[4]",
            "target": "diff.ipynb[0]"
        },
        {
            "source": "de-linting.ipynb[5]",
            "target": "child process.ipynb[0]"
        },
        {
            "source": "gulp.ipynb[5]",
            "target": "gulp.ipynb[1]"
        },
        {
            "source": "gulp.ipynb[5]",
            "target": "gulp.ipynb[0]"
        },
        {
            "source": "How code should look.ipynb[0]",
            "target": "node simple-imap.ipynb[5]"
        },
        {
            "source": "node express.ipynb[0]",
            "target": "node express.ipynb[1]"
        },
        {
            "source": "node express.ipynb[0]",
            "target": "node express.ipynb[2]"
        },
        {
            "source": "node express.ipynb[1]",
            "target": "node express.ipynb[3]"
        },
        {
            "source": "node express.ipynb[1]",
            "target": "git index.ipynb[1]"
        },
        {
            "source": "node express.ipynb[16]",
            "target": "node express.ipynb[15]"
        },
        {
            "source": "node express.ipynb[16]",
            "target": "node express.ipynb[14]"
        },
        {
            "source": "node express.ipynb[19]",
            "target": "files.ipynb[5]"
        },
        {
            "source": "node express.ipynb[19]",
            "target": "node express.ipynb[3]"
        },
        {
            "source": "node express.ipynb[19]",
            "target": "node express.ipynb[4]"
        },
        {
            "source": "node express.ipynb[19]",
            "target": "node express.ipynb[19]"
        },
        {
            "source": "node express.ipynb[19]",
            "target": "node express.ipynb[18]"
        },
        {
            "source": "node express.ipynb[19]",
            "target": "node express.ipynb[17]"
        },
        {
            "source": "node express.ipynb[2]",
            "target": "node express.ipynb[0]"
        },
        {
            "source": "node express.ipynb[2]",
            "target": "node express.ipynb[2]"
        },
        {
            "source": "node express.ipynb[3]",
            "target": "node express.ipynb[5]"
        },
        {
            "source": "node express.ipynb[3]",
            "target": "node express.ipynb[3]"
        },
        {
            "source": "node express.ipynb[3]",
            "target": "syntax.ipynb[7]"
        },
        {
            "source": "node express.ipynb[3]",
            "target": "git index.ipynb[1]"
        },
        {
            "source": "node express.ipynb[6]",
            "target": "node express.ipynb[2]"
        },
        {
            "source": "node express.ipynb[6]",
            "target": "node express.ipynb[4]"
        },
        {
            "source": "node simple-imap.ipynb[0]",
            "target": "service auth.ipynb[0]"
        },
        {
            "source": "node simple-imap.ipynb[1]",
            "target": "node simple-imap.ipynb[0]"
        },
        {
            "source": "node simple-imap.ipynb[2]",
            "target": "node simple-imap.ipynb[0]"
        },
        {
            "source": "node simple-imap.ipynb[3]",
            "target": "node simple-imap.ipynb[1]"
        },
        {
            "source": "node simple-imap.ipynb[3]",
            "target": "node simple-imap.ipynb[6]"
        },
        {
            "source": "node simple-imap.ipynb[3]",
            "target": "rpc.ipynb[4]"
        },
        {
            "source": "node simple-imap.ipynb[3]",
            "target": "rpc.ipynb[5]"
        },
        {
            "source": "node simple-imap.ipynb[6]",
            "target": "service auth.ipynb[0]"
        },
        {
            "source": "promisify automock socketio.ipynb[0]",
            "target": "autorewire.ipynb[1]"
        },
        {
            "source": "test runner.ipynb[0]",
            "target": "test runner.ipynb[0]"
        },
        {
            "source": "test runner.ipynb[0]",
            "target": "notebook.ipynb[0]"
        },
        {
            "source": "test runner.ipynb[0]",
            "target": "syntax.ipynb[19]"
        },
        {
            "source": "test runner.ipynb[1]",
            "target": "test runner.ipynb[0]"
        },
        {
            "source": "test runner.ipynb[15]",
            "target": "data collection.ipynb[7]"
        },
        {
            "source": "test runner.ipynb[16]",
            "target": "antlr.ipynb[3]"
        },
        {
            "source": "test runner.ipynb[17]",
            "target": "data collection.ipynb[7]"
        },
        {
            "source": "test runner.ipynb[2]",
            "target": "test runner.ipynb[0]"
        },
        {
            "source": "test runner.ipynb[3]",
            "target": "files.ipynb[5]"
        },
        {
            "source": "test runner.ipynb[3]",
            "target": "test runner.ipynb[5]"
        },
        {
            "source": "test runner.ipynb[3]",
            "target": "test runner.ipynb[9]"
        },
        {
            "source": "test runner.ipynb[3]",
            "target": "test runner.ipynb[16]"
        },
        {
            "source": "test runner.ipynb[3]",
            "target": "test runner.ipynb[4]"
        },
        {
            "source": "twilio.ipynb[0]",
            "target": "google calendar.ipynb[8]"
        },
        {
            "source": "twilio.ipynb[1]",
            "target": "google calendar.ipynb[5]"
        },
        {
            "source": "twilio.ipynb[1]",
            "target": "google calendar.ipynb[0]"
        },
        {
            "source": "zuora to eloqua.ipynb[0]",
            "target": "polyfills.ipynb[0]"
        },
        {
            "source": "zuora to eloqua.ipynb[11]",
            "target": "zuora to eloqua.ipynb[10]"
        },
        {
            "source": "zuora to eloqua.ipynb[13]",
            "target": "polyfills.ipynb[0]"
        },
        {
            "source": "zuora to eloqua.ipynb[13]",
            "target": "zuora to eloqua.ipynb[5]"
        },
        {
            "source": "zuora to eloqua.ipynb[13]",
            "target": "zuora to eloqua.ipynb[10]"
        },
        {
            "source": "zuora to eloqua.ipynb[14]",
            "target": "polyfills.ipynb[0]"
        },
        {
            "source": "zuora to eloqua.ipynb[14]",
            "target": "zuora to eloqua.ipynb[13]"
        },
        {
            "source": "zuora to eloqua.ipynb[14]",
            "target": "zuora to eloqua.ipynb[10]"
        },
        {
            "source": "zuora to eloqua.ipynb[14]",
            "target": "zuora to eloqua.ipynb[12]"
        },
        {
            "source": "zuora to eloqua.ipynb[15]",
            "target": "zuora to eloqua.ipynb[23]"
        },
        {
            "source": "zuora to eloqua.ipynb[15]",
            "target": "zuora to eloqua.ipynb[19]"
        },
        {
            "source": "zuora to eloqua.ipynb[15]",
            "target": "zuora to eloqua.ipynb[7]"
        },
        {
            "source": "zuora to eloqua.ipynb[16]",
            "target": "zuora to eloqua.ipynb[15]"
        },
        {
            "source": "zuora to eloqua.ipynb[16]",
            "target": "zuora to eloqua.ipynb[23]"
        },
        {
            "source": "zuora to eloqua.ipynb[16]",
            "target": "zuora to eloqua.ipynb[19]"
        },
        {
            "source": "zuora to eloqua.ipynb[16]",
            "target": "zuora to eloqua.ipynb[7]"
        },
        {
            "source": "zuora to eloqua.ipynb[17]",
            "target": "zuora to eloqua.ipynb[21]"
        },
        {
            "source": "zuora to eloqua.ipynb[17]",
            "target": "zuora to eloqua.ipynb[23]"
        },
        {
            "source": "zuora to eloqua.ipynb[18]",
            "target": "zuora to eloqua.ipynb[17]"
        },
        {
            "source": "zuora to eloqua.ipynb[18]",
            "target": "zuora to eloqua.ipynb[21]"
        },
        {
            "source": "zuora to eloqua.ipynb[18]",
            "target": "zuora to eloqua.ipynb[23]"
        },
        {
            "source": "zuora to eloqua.ipynb[19]",
            "target": "zuora to eloqua.ipynb[3]"
        },
        {
            "source": "zuora to eloqua.ipynb[19]",
            "target": "zuora to eloqua.ipynb[0]"
        },
        {
            "source": "zuora to eloqua.ipynb[2]",
            "target": "zuora to eloqua.ipynb[0]"
        },
        {
            "source": "zuora to eloqua.ipynb[2]",
            "target": "polyfills.ipynb[0]"
        },
        {
            "source": "zuora to eloqua.ipynb[20]",
            "target": "zuora to eloqua.ipynb[19]"
        },
        {
            "source": "zuora to eloqua.ipynb[20]",
            "target": "zuora to eloqua.ipynb[0]"
        },
        {
            "source": "zuora to eloqua.ipynb[20]",
            "target": "zuora to eloqua.ipynb[3]"
        },
        {
            "source": "zuora to eloqua.ipynb[21]",
            "target": "zuora to eloqua.ipynb[0]"
        },
        {
            "source": "zuora to eloqua.ipynb[21]",
            "target": "polyfills.ipynb[0]"
        },
        {
            "source": "zuora to eloqua.ipynb[22]",
            "target": "polyfills.ipynb[0]"
        },
        {
            "source": "zuora to eloqua.ipynb[22]",
            "target": "zuora to eloqua.ipynb[21]"
        },
        {
            "source": "zuora to eloqua.ipynb[23]",
            "target": "zuora to eloqua.ipynb[5]"
        },
        {
            "source": "zuora to eloqua.ipynb[23]",
            "target": "zuora to eloqua.ipynb[13]"
        },
        {
            "source": "zuora to eloqua.ipynb[24]",
            "target": "zuora to eloqua.ipynb[23]"
        },
        {
            "source": "zuora to eloqua.ipynb[24]",
            "target": "zuora to eloqua.ipynb[5]"
        },
        {
            "source": "zuora to eloqua.ipynb[24]",
            "target": "zuora to eloqua.ipynb[13]"
        },
        {
            "source": "zuora to eloqua.ipynb[24]",
            "target": "zuora to eloqua.ipynb[12]"
        },
        {
            "source": "zuora to eloqua.ipynb[27]",
            "target": "zuora to eloqua.ipynb[19]"
        },
        {
            "source": "zuora to eloqua.ipynb[27]",
            "target": "zuora to eloqua.ipynb[26]"
        },
        {
            "source": "zuora to eloqua.ipynb[27]",
            "target": "zuora to eloqua.ipynb[0]"
        },
        {
            "source": "zuora to eloqua.ipynb[4]",
            "target": "zuora to eloqua.ipynb[3]"
        },
        {
            "source": "zuora to eloqua.ipynb[5]",
            "target": "polyfills.ipynb[0]"
        },
        {
            "source": "zuora to eloqua.ipynb[5]",
            "target": "zuora to eloqua.ipynb[10]"
        },
        {
            "source": "zuora to eloqua.ipynb[6]",
            "target": "polyfills.ipynb[0]"
        },
        {
            "source": "zuora to eloqua.ipynb[6]",
            "target": "zuora to eloqua.ipynb[5]"
        },
        {
            "source": "zuora to eloqua.ipynb[6]",
            "target": "zuora to eloqua.ipynb[12]"
        },
        {
            "source": "zuora to eloqua.ipynb[8]",
            "target": "zuora to eloqua.ipynb[3]"
        },
        {
            "source": "zuora to eloqua.ipynb[8]",
            "target": "zuora to eloqua.ipynb[10]"
        },
        {
            "source": "zuora to eloqua.ipynb[8]",
            "target": "zuora to eloqua.ipynb[9]"
        },
        {
            "source": "zuora to eloqua.ipynb[8]",
            "target": "zuora to eloqua.ipynb[7]"
        },
        {
            "source": "brians resume.ipynb[0]",
            "target": "google calendar data.ipynb[2]"
        },
        {
            "source": "brians resume.ipynb[1]",
            "target": "google calendar data.ipynb[2]"
        },
        {
            "source": "brians resume.ipynb[1]",
            "target": "google sheets.ipynb[8]"
        },
        {
            "source": "brians resume.ipynb[1]",
            "target": "google sheets.ipynb[3]"
        },
        {
            "source": "brians resume.ipynb[2]",
            "target": "llm chat.ipynb[1]"
        },
        {
            "source": "brians resume.ipynb[2]",
            "target": "llm chat.ipynb[2]"
        },
        {
            "source": "brians resume.ipynb[2]",
            "target": "llm chat.ipynb[3]"
        },
        {
            "source": "brians resume.ipynb[2]",
            "target": "llm chat.ipynb[4]"
        },
        {
            "source": "brians resume.ipynb[3]",
            "target": "patterns.ipynb[2]"
        },
        {
            "source": "brians resume.ipynb[3]",
            "target": "brians resume.ipynb[12]"
        },
        {
            "source": "brians resume.ipynb[5]",
            "target": "scraping.ipynb[0]"
        },
        {
            "source": "brians resume.ipynb[5]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "brians resume.ipynb[5]",
            "target": "scraping.ipynb[2]"
        },
        {
            "source": "brians resume.ipynb[7]",
            "target": "llm chat.ipynb[1]"
        },
        {
            "source": "brians resume.ipynb[7]",
            "target": "brians resume.ipynb[10]"
        },
        {
            "source": "brians resume.ipynb[8]",
            "target": "llm chat.ipynb[6]"
        },
        {
            "source": "brians resume.ipynb[8]",
            "target": "llm writing.ipynb[4]"
        },
        {
            "source": "brians resume.ipynb[8]",
            "target": "llm chat.ipynb[1]"
        },
        {
            "source": "brians resume.ipynb[9]",
            "target": "llm chat.ipynb[1]"
        },
        {
            "source": "brians resume.ipynb[9]",
            "target": "llm writing.ipynb[4]"
        },
        {
            "source": "convert spreadsheet.ipynb[1]",
            "target": "google sheets.ipynb[3]"
        },
        {
            "source": "convert spreadsheet.ipynb[1]",
            "target": "google sheets.ipynb[2]"
        },
        {
            "source": "convert spreadsheet.ipynb[1]",
            "target": "google sheets.ipynb[6]"
        },
        {
            "source": "convert spreadsheet.ipynb[1]",
            "target": "google sheets.ipynb[8]"
        },
        {
            "source": "convert spreadsheet.ipynb[10]",
            "target": "rpc.ipynb[7]"
        },
        {
            "source": "convert spreadsheet.ipynb[10]",
            "target": "convert spreadsheet.ipynb[2]"
        },
        {
            "source": "convert spreadsheet.ipynb[10]",
            "target": "files.ipynb[3]"
        },
        {
            "source": "convert spreadsheet.ipynb[10]",
            "target": "google storage api.ipynb[2]"
        },
        {
            "source": "convert spreadsheet.ipynb[10]",
            "target": "google storage api.ipynb[4]"
        },
        {
            "source": "convert spreadsheet.ipynb[2]",
            "target": "convert spreadsheet.ipynb[1]"
        },
        {
            "source": "convert spreadsheet.ipynb[2]",
            "target": "google sheets.ipynb[0]"
        },
        {
            "source": "convert spreadsheet.ipynb[2]",
            "target": "convert spreadsheet.ipynb[6]"
        },
        {
            "source": "convert spreadsheet.ipynb[2]",
            "target": "convert spreadsheet.ipynb[4]"
        },
        {
            "source": "convert spreadsheet.ipynb[2]",
            "target": "convert spreadsheet.ipynb[9]"
        },
        {
            "source": "convert spreadsheet.ipynb[2]",
            "target": "convert spreadsheet.ipynb[11]"
        },
        {
            "source": "convert spreadsheet.ipynb[4]",
            "target": "google sheets.ipynb[3]"
        },
        {
            "source": "convert spreadsheet.ipynb[4]",
            "target": "convert spreadsheet.ipynb[5]"
        },
        {
            "source": "convert spreadsheet.ipynb[4]",
            "target": "google sheets.ipynb[4]"
        },
        {
            "source": "convert spreadsheet.ipynb[4]",
            "target": "convert spreadsheet.ipynb[3]"
        },
        {
            "source": "convert spreadsheet.ipynb[4]",
            "target": "patterns.ipynb[6]"
        },
        {
            "source": "convert spreadsheet.ipynb[7]",
            "target": "convert spreadsheet.ipynb[6]"
        },
        {
            "source": "convert spreadsheet.ipynb[7]",
            "target": "convert spreadsheet.ipynb[4]"
        },
        {
            "source": "convert spreadsheet.ipynb[7]",
            "target": "convert spreadsheet.ipynb[11]"
        },
        {
            "source": "convert spreadsheet.ipynb[8]",
            "target": "patterns.ipynb[2]"
        },
        {
            "source": "convert spreadsheet.ipynb[9]",
            "target": "google storage api.ipynb[5]"
        },
        {
            "source": "convert spreadsheet.ipynb[9]",
            "target": "convert spreadsheet.ipynb[8]"
        },
        {
            "source": "convert spreadsheet.ipynb[9]",
            "target": "convert spreadsheet.ipynb[7]"
        },
        {
            "source": "convert spreadsheet.ipynb[9]",
            "target": "convert spreadsheet.ipynb[11]"
        },
        {
            "source": "convert spreadsheet.ipynb[9]",
            "target": "google storage api.ipynb[2]"
        },
        {
            "source": "convert spreadsheet.ipynb[9]",
            "target": "google storage api.ipynb[4]"
        },
        {
            "source": "discord activities.ipynb[3]",
            "target": "discord.ipynb[1]"
        },
        {
            "source": "discord activities.ipynb[4]",
            "target": "discord.ipynb[1]"
        },
        {
            "source": "discord activities.ipynb[4]",
            "target": "discord.ipynb[2]"
        },
        {
            "source": "discord games.ipynb[1]",
            "target": "discord.ipynb[3]"
        },
        {
            "source": "discord imagine.ipynb[0]",
            "target": "discord.ipynb[2]"
        },
        {
            "source": "discord imagine.ipynb[0]",
            "target": "data collection.ipynb[7]"
        },
        {
            "source": "discord imagine.ipynb[0]",
            "target": "discord.ipynb[0]"
        },
        {
            "source": "discord imagine.ipynb[1]",
            "target": "discord imagine.ipynb[0]"
        },
        {
            "source": "discord imagine.ipynb[1]",
            "target": "llama vision.ipynb[9]"
        },
        {
            "source": "discord imagine.ipynb[1]",
            "target": "llama vision.ipynb[13]"
        },
        {
            "source": "discord imagine.ipynb[1]",
            "target": "discord.ipynb[3]"
        },
        {
            "source": "discord imagine.ipynb[1]",
            "target": "llama.ipynb[10]"
        },
        {
            "source": "discord imagine.ipynb[2]",
            "target": "discord.ipynb[3]"
        },
        {
            "source": "discord imagine.ipynb[2]",
            "target": "discord.ipynb[1]"
        },
        {
            "source": "discord imagine.ipynb[2]",
            "target": "discord imagine.ipynb[1]"
        },
        {
            "source": "discord imagine.ipynb[2]",
            "target": "discord imagine.ipynb[3]"
        },
        {
            "source": "discord imagine.ipynb[2]",
            "target": "node express.ipynb[0]"
        },
        {
            "source": "discord imagine.ipynb[2]",
            "target": "discord tools.ipynb[5]"
        },
        {
            "source": "discord imagine.ipynb[3]",
            "target": "llama vision.ipynb[7]"
        },
        {
            "source": "discord imagine.ipynb[3]",
            "target": "discord.ipynb[0]"
        },
        {
            "source": "discord player.ipynb[0]",
            "target": "discord.ipynb[3]"
        },
        {
            "source": "discord player.ipynb[0]",
            "target": "discord.ipynb[1]"
        },
        {
            "source": "discord player.ipynb[0]",
            "target": "node express.ipynb[0]"
        },
        {
            "source": "discord player.ipynb[0]",
            "target": "discord tools.ipynb[5]"
        },
        {
            "source": "discord player.ipynb[1]",
            "target": "node express.ipynb[13]"
        },
        {
            "source": "discord player.ipynb[1]",
            "target": "discord.ipynb[2]"
        },
        {
            "source": "discord player.ipynb[1]",
            "target": "node express.ipynb[15]"
        },
        {
            "source": "discord player.ipynb[1]",
            "target": "discord activities.ipynb[1]"
        },
        {
            "source": "discord remote.ipynb[0]",
            "target": "discord.ipynb[3]"
        },
        {
            "source": "discord remote.ipynb[0]",
            "target": "discord.ipynb[1]"
        },
        {
            "source": "discord remote.ipynb[0]",
            "target": "node express.ipynb[0]"
        },
        {
            "source": "discord remote.ipynb[0]",
            "target": "discord tools.ipynb[5]"
        },
        {
            "source": "discord remote.ipynb[1]",
            "target": "discord.ipynb[2]"
        },
        {
            "source": "discord remote.ipynb[1]",
            "target": "discord remote.ipynb[3]"
        },
        {
            "source": "discord remote.ipynb[1]",
            "target": "discord activities.ipynb[1]"
        },
        {
            "source": "discord remote.ipynb[1]",
            "target": "discord remote.ipynb[4]"
        },
        {
            "source": "discord remote.ipynb[2]",
            "target": "discord.ipynb[2]"
        },
        {
            "source": "discord remote.ipynb[2]",
            "target": "robot.ipynb[0]"
        },
        {
            "source": "discord remote.ipynb[2]",
            "target": "google scheduling.ipynb[3]"
        },
        {
            "source": "discord remote.ipynb[2]",
            "target": "robot.ipynb[4]"
        },
        {
            "source": "discord remote.ipynb[2]",
            "target": "robot.ipynb[5]"
        },
        {
            "source": "discord tools.ipynb[0]",
            "target": "discord.ipynb[3]"
        },
        {
            "source": "discord tools.ipynb[0]",
            "target": "data collection.ipynb[11]"
        },
        {
            "source": "discord tools.ipynb[0]",
            "target": "discord imagine.ipynb[0]"
        },
        {
            "source": "discord tools.ipynb[0]",
            "target": "data collection.ipynb[8]"
        },
        {
            "source": "discord tools.ipynb[0]",
            "target": "data collection.ipynb[7]"
        },
        {
            "source": "discord tools.ipynb[1]",
            "target": "usage.ipynb[2]"
        },
        {
            "source": "discord tools.ipynb[1]",
            "target": "discord imagine.ipynb[0]"
        },
        {
            "source": "discord tools.ipynb[1]",
            "target": "discord.ipynb[3]"
        },
        {
            "source": "discord tools.ipynb[1]",
            "target": "scraping.ipynb[3]"
        },
        {
            "source": "discord tools.ipynb[1]",
            "target": "llama vision.ipynb[5]"
        },
        {
            "source": "discord tools.ipynb[1]",
            "target": "jupyter interaction.ipynb[0]"
        },
        {
            "source": "discord tools.ipynb[2]",
            "target": "discord tools.ipynb[9]"
        },
        {
            "source": "discord tools.ipynb[2]",
            "target": "discord.ipynb[3]"
        },
        {
            "source": "discord tools.ipynb[2]",
            "target": "data collection.ipynb[7]"
        },
        {
            "source": "discord tools.ipynb[2]",
            "target": "llm writing.ipynb[4]"
        },
        {
            "source": "discord tools.ipynb[2]",
            "target": "llm writing.ipynb[1]"
        },
        {
            "source": "discord tools.ipynb[2]",
            "target": "llm writing.ipynb[0]"
        },
        {
            "source": "discord tools.ipynb[2]",
            "target": "llm writing.ipynb[3]"
        },
        {
            "source": "discord tools.ipynb[3]",
            "target": "discord tools.ipynb[9]"
        },
        {
            "source": "discord tools.ipynb[3]",
            "target": "discord.ipynb[3]"
        },
        {
            "source": "discord tools.ipynb[3]",
            "target": "llm writing.ipynb[4]"
        },
        {
            "source": "discord tools.ipynb[3]",
            "target": "llm writing.ipynb[1]"
        },
        {
            "source": "discord tools.ipynb[3]",
            "target": "llm writing.ipynb[0]"
        },
        {
            "source": "discord tools.ipynb[3]",
            "target": "llm writing.ipynb[3]"
        },
        {
            "source": "discord tools.ipynb[4]",
            "target": "discord tools.ipynb[9]"
        },
        {
            "source": "discord tools.ipynb[4]",
            "target": "llm writing.ipynb[4]"
        },
        {
            "source": "discord tools.ipynb[4]",
            "target": "discord.ipynb[3]"
        },
        {
            "source": "discord tools.ipynb[5]",
            "target": "llm chat.ipynb[1]"
        },
        {
            "source": "discord tools.ipynb[5]",
            "target": "discord.ipynb[2]"
        },
        {
            "source": "discord tools.ipynb[5]",
            "target": "discord.ipynb[3]"
        },
        {
            "source": "discord tools.ipynb[5]",
            "target": "llm chat.ipynb[6]"
        },
        {
            "source": "discord tools.ipynb[5]",
            "target": "llm writing.ipynb[4]"
        },
        {
            "source": "discord tools.ipynb[6]",
            "target": "discord.ipynb[3]"
        },
        {
            "source": "discord tools.ipynb[6]",
            "target": "discord.ipynb[1]"
        },
        {
            "source": "discord tools.ipynb[6]",
            "target": "discord tools.ipynb[5]"
        },
        {
            "source": "discord tools.ipynb[6]",
            "target": "discord tools.ipynb[2]"
        },
        {
            "source": "discord tools.ipynb[6]",
            "target": "discord tools.ipynb[3]"
        },
        {
            "source": "discord tools.ipynb[7]",
            "target": "discord.ipynb[3]"
        },
        {
            "source": "discord tools.ipynb[7]",
            "target": "discord.ipynb[1]"
        },
        {
            "source": "discord tools.ipynb[7]",
            "target": "discord.ipynb[2]"
        },
        {
            "source": "discord tools.ipynb[7]",
            "target": "llm writing.ipynb[2]"
        },
        {
            "source": "discord tools.ipynb[7]",
            "target": "llama vision.ipynb[2]"
        },
        {
            "source": "discord tools.ipynb[8]",
            "target": "discord.ipynb[3]"
        },
        {
            "source": "discord tools.ipynb[8]",
            "target": "discord.ipynb[1]"
        },
        {
            "source": "discord tools.ipynb[8]",
            "target": "discord tools.ipynb[0]"
        },
        {
            "source": "discord tools.ipynb[8]",
            "target": "discord tools.ipynb[1]"
        },
        {
            "source": "discord tools.ipynb[8]",
            "target": "discord tools.ipynb[4]"
        },
        {
            "source": "discord tools.ipynb[8]",
            "target": "discord tools.ipynb[5]"
        },
        {
            "source": "discord tools.ipynb[9]",
            "target": "data collection.ipynb[7]"
        },
        {
            "source": "discord tools.ipynb[9]",
            "target": "discord.ipynb[0]"
        },
        {
            "source": "discord.ipynb[0]",
            "target": "discord.ipynb[10]"
        },
        {
            "source": "discord.ipynb[0]",
            "target": "discord.ipynb[1]"
        },
        {
            "source": "discord.ipynb[0]",
            "target": "discord.ipynb[2]"
        },
        {
            "source": "discord.ipynb[1]",
            "target": "discord.ipynb[2]"
        },
        {
            "source": "discord.ipynb[1]",
            "target": "usage.ipynb[0]"
        },
        {
            "source": "discord.ipynb[11]",
            "target": "discord.ipynb[3]"
        },
        {
            "source": "discord.ipynb[11]",
            "target": "discord.ipynb[10]"
        },
        {
            "source": "discord.ipynb[3]",
            "target": "discord.ipynb[2]"
        },
        {
            "source": "discord.ipynb[3]",
            "target": "discord.ipynb[0]"
        },
        {
            "source": "discord.ipynb[3]",
            "target": "discord.ipynb[5]"
        },
        {
            "source": "discord.ipynb[3]",
            "target": "discord.ipynb[7]"
        },
        {
            "source": "discord.ipynb[3]",
            "target": "discord.ipynb[4]"
        },
        {
            "source": "discord.ipynb[3]",
            "target": "discord.ipynb[6]"
        },
        {
            "source": "discord.ipynb[3]",
            "target": "discord.ipynb[8]"
        },
        {
            "source": "discord.ipynb[3]",
            "target": "discord.ipynb[9]"
        },
        {
            "source": "discord.ipynb[4]",
            "target": "discord.ipynb[2]"
        },
        {
            "source": "discord.ipynb[4]",
            "target": "discord.ipynb[0]"
        },
        {
            "source": "discord.ipynb[5]",
            "target": "discord.ipynb[2]"
        },
        {
            "source": "discord.ipynb[5]",
            "target": "discord.ipynb[0]"
        },
        {
            "source": "discord.ipynb[6]",
            "target": "discord.ipynb[2]"
        },
        {
            "source": "discord.ipynb[6]",
            "target": "discord.ipynb[10]"
        },
        {
            "source": "discord.ipynb[6]",
            "target": "discord.ipynb[0]"
        },
        {
            "source": "discord.ipynb[7]",
            "target": "discord.ipynb[2]"
        },
        {
            "source": "discord.ipynb[7]",
            "target": "discord.ipynb[10]"
        },
        {
            "source": "discord.ipynb[8]",
            "target": "discord.ipynb[2]"
        },
        {
            "source": "discord.ipynb[8]",
            "target": "discord.ipynb[0]"
        },
        {
            "source": "discord.ipynb[9]",
            "target": "discord.ipynb[0]"
        },
        {
            "source": "documentation.ipynb[0]",
            "target": "node express.ipynb[4]"
        },
        {
            "source": "documentation.ipynb[0]",
            "target": "llama.ipynb[0]"
        },
        {
            "source": "documentation.ipynb[1]",
            "target": "documentation.ipynb[0]"
        },
        {
            "source": "documentation.ipynb[1]",
            "target": "rpc.ipynb[8]"
        },
        {
            "source": "documentation.ipynb[1]",
            "target": "rpc.ipynb[7]"
        },
        {
            "source": "documentation.ipynb[1]",
            "target": "rpc.ipynb[3]"
        },
        {
            "source": "documentation.ipynb[4]",
            "target": "files.ipynb[5]"
        },
        {
            "source": "documentation.ipynb[4]",
            "target": "test runner.ipynb[5]"
        },
        {
            "source": "edit anywhere.ipynb[10]",
            "target": "files.ipynb[3]"
        },
        {
            "source": "edit anywhere.ipynb[10]",
            "target": "minimatch.ipynb[2]"
        },
        {
            "source": "edit anywhere.ipynb[10]",
            "target": "patterns.ipynb[2]"
        },
        {
            "source": "edit anywhere.ipynb[10]",
            "target": "edit anywhere.ipynb[8]"
        },
        {
            "source": "edit anywhere.ipynb[10]",
            "target": "data collection.ipynb[7]"
        },
        {
            "source": "edit anywhere.ipynb[10]",
            "target": "edit anywhere.ipynb[11]"
        },
        {
            "source": "edit anywhere.ipynb[10]",
            "target": "edit anywhere.ipynb[10]"
        },
        {
            "source": "edit anywhere.ipynb[4]",
            "target": "edit anywhere.ipynb[3]"
        },
        {
            "source": "edit anywhere.ipynb[6]",
            "target": "patterns.ipynb[2]"
        },
        {
            "source": "edit anywhere.ipynb[7]",
            "target": "edit anywhere.ipynb[10]"
        },
        {
            "source": "edit anywhere.ipynb[7]",
            "target": "edit anywhere.ipynb[1]"
        },
        {
            "source": "edit anywhere.ipynb[7]",
            "target": "patterns.ipynb[2]"
        },
        {
            "source": "edit anywhere.ipynb[7]",
            "target": "edit anywhere.ipynb[6]"
        },
        {
            "source": "edit anywhere.ipynb[7]",
            "target": "edit anywhere.ipynb[5]"
        },
        {
            "source": "grafana.ipynb[0]",
            "target": "llama vision.ipynb[0]"
        },
        {
            "source": "linkedin.ipynb[19]",
            "target": "linkedin.ipynb[22]"
        },
        {
            "source": "linkedin.ipynb[20]",
            "target": "linkedin.ipynb[22]"
        },
        {
            "source": "linkedin.ipynb[20]",
            "target": "linkedin.ipynb[19]"
        },
        {
            "source": "linkedin.ipynb[20]",
            "target": "linkedin.ipynb[5]"
        },
        {
            "source": "linkedin.ipynb[20]",
            "target": "linkedin.ipynb[6]"
        },
        {
            "source": "linkedin.ipynb[20]",
            "target": "linkedin.ipynb[4]"
        },
        {
            "source": "linkedin.ipynb[21]",
            "target": "linkedin.ipynb[22]"
        },
        {
            "source": "linkedin.ipynb[21]",
            "target": "linkedin.ipynb[13]"
        },
        {
            "source": "linkedin.ipynb[21]",
            "target": "linkedin.ipynb[17]"
        },
        {
            "source": "linkedin.ipynb[21]",
            "target": "linkedin.ipynb[14]"
        },
        {
            "source": "linkedin.ipynb[21]",
            "target": "linkedin.ipynb[18]"
        },
        {
            "source": "linkedin.ipynb[21]",
            "target": "linkedin.ipynb[16]"
        },
        {
            "source": "linkedin.ipynb[21]",
            "target": "linkedin.ipynb[15]"
        },
        {
            "source": "linkedin.ipynb[21]",
            "target": "linkedin.ipynb[4]"
        },
        {
            "source": "linkedin.ipynb[22]",
            "target": "data collection.ipynb[7]"
        },
        {
            "source": "linkedin.ipynb[24]",
            "target": "linkedin.ipynb[22]"
        },
        {
            "source": "linkedin.ipynb[24]",
            "target": "linkedin.ipynb[19]"
        },
        {
            "source": "linkedin.ipynb[25]",
            "target": "linkedin.ipynb[19]"
        },
        {
            "source": "linkedin.ipynb[27]",
            "target": "linkedin.ipynb[22]"
        },
        {
            "source": "linkedin.ipynb[27]",
            "target": "linkedin.ipynb[19]"
        },
        {
            "source": "linkedin.ipynb[27]",
            "target": "linkedin.ipynb[8]"
        },
        {
            "source": "linkedin.ipynb[27]",
            "target": "linkedin.ipynb[4]"
        },
        {
            "source": "linkedin.ipynb[27]",
            "target": "linkedin.ipynb[7]"
        },
        {
            "source": "linkedin.ipynb[28]",
            "target": "linkedin.ipynb[22]"
        },
        {
            "source": "linkedin.ipynb[28]",
            "target": "linkedin.ipynb[19]"
        },
        {
            "source": "linkedin.ipynb[28]",
            "target": "linkedin.ipynb[12]"
        },
        {
            "source": "linkedin.ipynb[28]",
            "target": "linkedin.ipynb[11]"
        },
        {
            "source": "linkedin.ipynb[28]",
            "target": "linkedin.ipynb[10]"
        },
        {
            "source": "linkedin.ipynb[28]",
            "target": "linkedin.ipynb[9]"
        },
        {
            "source": "linkedin.ipynb[28]",
            "target": "linkedin.ipynb[4]"
        },
        {
            "source": "linkedin.ipynb[29]",
            "target": "linkedin.ipynb[22]"
        },
        {
            "source": "linkedin.ipynb[29]",
            "target": "linkedin.ipynb[19]"
        },
        {
            "source": "marketing scripts.ipynb[1]",
            "target": "google sheets.ipynb[6]"
        },
        {
            "source": "opengl.ipynb[1]",
            "target": "opengl.ipynb[3]"
        },
        {
            "source": "opengl.ipynb[1]",
            "target": "opengl.ipynb[0]"
        },
        {
            "source": "opengl.ipynb[1]",
            "target": "opengl.ipynb[4]"
        },
        {
            "source": "opengl.ipynb[2]",
            "target": "opengl.ipynb[4]"
        },
        {
            "source": "opengl.ipynb[2]",
            "target": "opengl.ipynb[0]"
        },
        {
            "source": "opengl.ipynb[2]",
            "target": "opengl.ipynb[5]"
        },
        {
            "source": "qt.ipynb[1]",
            "target": "qt.ipynb[2]"
        },
        {
            "source": "scheduler.ipynb[3]",
            "target": "google calendar.ipynb[0]"
        },
        {
            "source": "scheduler.ipynb[4]",
            "target": "google calendar.ipynb[0]"
        },
        {
            "source": "study sauce.ipynb[1]",
            "target": "google sheets.ipynb[0]"
        },
        {
            "source": "study sauce.ipynb[1]",
            "target": "convert spreadsheet.ipynb[6]"
        },
        {
            "source": "study sauce.ipynb[1]",
            "target": "convert spreadsheet.ipynb[4]"
        },
        {
            "source": "study sauce.ipynb[2]",
            "target": "google sheets.ipynb[3]"
        },
        {
            "source": "study sauce.ipynb[2]",
            "target": "google sheets.ipynb[8]"
        },
        {
            "source": "study sauce.ipynb[2]",
            "target": "study sauce.ipynb[3]"
        },
        {
            "source": "study sauce.ipynb[4]",
            "target": "google sheets.ipynb[0]"
        },
        {
            "source": "study sauce.ipynb[4]",
            "target": "convert spreadsheet.ipynb[6]"
        },
        {
            "source": "study sauce.ipynb[4]",
            "target": "convert spreadsheet.ipynb[4]"
        },
        {
            "source": "study sauce.ipynb[4]",
            "target": "convert spreadsheet.ipynb[9]"
        },
        {
            "source": "quake 3.ipynb[1]",
            "target": "files.ipynb[5]"
        },
        {
            "source": "quake 3.ipynb[11]",
            "target": "files.ipynb[3]"
        },
        {
            "source": "quake 3.ipynb[11]",
            "target": "child process.ipynb[0]"
        },
        {
            "source": "quake 3.ipynb[11]",
            "target": "files.ipynb[14]"
        },
        {
            "source": "quake 3.ipynb[11]",
            "target": "files.ipynb[15]"
        },
        {
            "source": "quake 3.ipynb[11]",
            "target": "quake 3.ipynb[14]"
        },
        {
            "source": "quake 3.ipynb[12]",
            "target": "files.ipynb[3]"
        },
        {
            "source": "quake 3.ipynb[12]",
            "target": "child process.ipynb[0]"
        },
        {
            "source": "quake 3.ipynb[12]",
            "target": "files.ipynb[14]"
        },
        {
            "source": "quake 3.ipynb[12]",
            "target": "files.ipynb[15]"
        },
        {
            "source": "quake 3.ipynb[12]",
            "target": "quake 3.ipynb[14]"
        },
        {
            "source": "quake 3.ipynb[13]",
            "target": "files.ipynb[3]"
        },
        {
            "source": "quake 3.ipynb[13]",
            "target": "files.ipynb[14]"
        },
        {
            "source": "quake 3.ipynb[13]",
            "target": "files.ipynb[15]"
        },
        {
            "source": "quake 3.ipynb[13]",
            "target": "quake 3.ipynb[14]"
        },
        {
            "source": "quake 3.ipynb[15]",
            "target": "files.ipynb[15]"
        },
        {
            "source": "quake 3.ipynb[15]",
            "target": "files.ipynb[3]"
        },
        {
            "source": "quake 3.ipynb[15]",
            "target": "files.ipynb[14]"
        },
        {
            "source": "quake 3.ipynb[17]",
            "target": "quake 3.ipynb[21]"
        },
        {
            "source": "quake 3.ipynb[17]",
            "target": "quake 3.ipynb[22]"
        },
        {
            "source": "quake 3.ipynb[17]",
            "target": "quake 3.ipynb[20]"
        },
        {
            "source": "quake 3.ipynb[17]",
            "target": "quake 3.ipynb[18]"
        },
        {
            "source": "quake 3.ipynb[17]",
            "target": "quake 3.ipynb[23]"
        },
        {
            "source": "quake 3.ipynb[17]",
            "target": "quake 3.ipynb[24]"
        },
        {
            "source": "quake 3.ipynb[2]",
            "target": "files.ipynb[5]"
        },
        {
            "source": "quake 3.ipynb[23]",
            "target": "quake 3.ipynb[26]"
        },
        {
            "source": "quake 3.ipynb[24]",
            "target": "quake 3.ipynb[23]"
        },
        {
            "source": "quake 3.ipynb[25]",
            "target": "quake 3.ipynb[24]"
        },
        {
            "source": "quake 3.ipynb[25]",
            "target": "quake 3.ipynb[19]"
        },
        {
            "source": "quake 3.ipynb[25]",
            "target": "quake 3.ipynb[26]"
        },
        {
            "source": "quake 3.ipynb[25]",
            "target": "quake 3.ipynb[23]"
        },
        {
            "source": "quake 3.ipynb[29]",
            "target": "bitbuffer.ipynb[0]"
        },
        {
            "source": "quake 3.ipynb[30]",
            "target": "balanced.ipynb[0]"
        },
        {
            "source": "quake 3.ipynb[31]",
            "target": "files.ipynb[3]"
        },
        {
            "source": "quake 3.ipynb[31]",
            "target": "quake 3.ipynb[30]"
        },
        {
            "source": "quake 3.ipynb[32]",
            "target": "files.ipynb[3]"
        },
        {
            "source": "quake 3.ipynb[32]",
            "target": "files.ipynb[15]"
        },
        {
            "source": "quake 3.ipynb[32]",
            "target": "quake 3.ipynb[29]"
        },
        {
            "source": "quake 3.ipynb[32]",
            "target": "files.ipynb[14]"
        },
        {
            "source": "quake 3.ipynb[32]",
            "target": "quake 3.ipynb[30]"
        },
        {
            "source": "quake 3.ipynb[33]",
            "target": "files.ipynb[15]"
        },
        {
            "source": "quake 3.ipynb[33]",
            "target": "child process.ipynb[0]"
        },
        {
            "source": "quake 3.ipynb[33]",
            "target": "files.ipynb[3]"
        },
        {
            "source": "quake 3.ipynb[4]",
            "target": "files.ipynb[14]"
        },
        {
            "source": "quake 3.ipynb[8]",
            "target": "quake 3.ipynb[7]"
        },
        {
            "source": "quake 3.ipynb[9]",
            "target": "quake 3.ipynb[8]"
        },
        {
            "source": "quake3 server connector.ipynb[0]",
            "target": "discord.ipynb[3]"
        },
        {
            "source": "quake3 server connector.ipynb[0]",
            "target": "discord.ipynb[0]"
        },
        {
            "source": "quake3 server connector.ipynb[10]",
            "target": "quake3 server connector.ipynb[11]"
        },
        {
            "source": "quake3 server connector.ipynb[10]",
            "target": "quake3 server connector.ipynb[8]"
        },
        {
            "source": "quake3 server connector.ipynb[12]",
            "target": "quake3 server connector.ipynb[6]"
        },
        {
            "source": "quake3 server connector.ipynb[12]",
            "target": "discord.ipynb[0]"
        },
        {
            "source": "quake3 server connector.ipynb[12]",
            "target": "discord.ipynb[3]"
        },
        {
            "source": "quake3 server connector.ipynb[12]",
            "target": "quake3 server connector.ipynb[16]"
        },
        {
            "source": "quake3 server connector.ipynb[13]",
            "target": "quake3 server connector.ipynb[2]"
        },
        {
            "source": "quake3 server connector.ipynb[13]",
            "target": "quake3 server connector.ipynb[12]"
        },
        {
            "source": "quake3 server connector.ipynb[13]",
            "target": "quake3 server connector.ipynb[18]"
        },
        {
            "source": "quake3 server connector.ipynb[17]",
            "target": "quake3 server connector.ipynb[6]"
        },
        {
            "source": "quake3 server connector.ipynb[17]",
            "target": "discord.ipynb[3]"
        },
        {
            "source": "quake3 server connector.ipynb[17]",
            "target": "discord.ipynb[0]"
        },
        {
            "source": "quake3 server connector.ipynb[17]",
            "target": "quake3 server connector.ipynb[8]"
        },
        {
            "source": "quake3 server connector.ipynb[17]",
            "target": "quake3 server connector.ipynb[16]"
        },
        {
            "source": "quake3 server connector.ipynb[18]",
            "target": "quake3 server connector.ipynb[6]"
        },
        {
            "source": "quake3 server connector.ipynb[18]",
            "target": "discord.ipynb[3]"
        },
        {
            "source": "quake3 server connector.ipynb[18]",
            "target": "discord.ipynb[0]"
        },
        {
            "source": "quake3 server connector.ipynb[18]",
            "target": "quake3 server connector.ipynb[16]"
        },
        {
            "source": "quake3 server connector.ipynb[2]",
            "target": "discord.ipynb[3]"
        },
        {
            "source": "quake3 server connector.ipynb[2]",
            "target": "discord.ipynb[0]"
        },
        {
            "source": "quake3 server connector.ipynb[2]",
            "target": "discord.ipynb[6]"
        },
        {
            "source": "quake3 server connector.ipynb[3]",
            "target": "quake3 server connector.ipynb[2]"
        },
        {
            "source": "quake3 server connector.ipynb[4]",
            "target": "discord.ipynb[3]"
        },
        {
            "source": "quake3 server connector.ipynb[4]",
            "target": "quake3 server connector.ipynb[6]"
        },
        {
            "source": "quake3 server connector.ipynb[5]",
            "target": "quake3 server connector.ipynb[4]"
        },
        {
            "source": "quake3 server connector.ipynb[5]",
            "target": "discord.ipynb[3]"
        },
        {
            "source": "quake3 server connector.ipynb[5]",
            "target": "quake3 server connector.ipynb[6]"
        },
        {
            "source": "quake3 server connector.ipynb[5]",
            "target": "quake3 server connector.ipynb[9]"
        },
        {
            "source": "quake3 server connector.ipynb[5]",
            "target": "quake3 server connector.ipynb[16]"
        },
        {
            "source": "quake3 server connector.ipynb[6]",
            "target": "quake 3.ipynb[7]"
        },
        {
            "source": "quake3 server connector.ipynb[6]",
            "target": "quake3 server connector.ipynb[8]"
        },
        {
            "source": "quake3 server connector.ipynb[6]",
            "target": "quake3 server connector.ipynb[15]"
        },
        {
            "source": "quake3 server connector.ipynb[6]",
            "target": "quake3 server connector.ipynb[11]"
        },
        {
            "source": "quake3 server connector.ipynb[6]",
            "target": "quake3 server connector.ipynb[10]"
        },
        {
            "source": "quake3 server connector.ipynb[7]",
            "target": "quake3 server connector.ipynb[6]"
        },
        {
            "source": "quake3 server connector.ipynb[9]",
            "target": "quake3 server connector.ipynb[16]"
        },
        {
            "source": "quakejs.ipynb[1]",
            "target": "quakejs.ipynb[3]"
        },
        {
            "source": "quakejs.ipynb[1]",
            "target": "quakejs.ipynb[2]"
        },
        {
            "source": "quakejs.ipynb[4]",
            "target": "quakejs.ipynb[1]"
        },
        {
            "source": "google calendar data.ipynb[0]",
            "target": "google calendar.ipynb[0]"
        },
        {
            "source": "google calendar data.ipynb[0]",
            "target": "google calendar.ipynb[1]"
        },
        {
            "source": "google calendar data.ipynb[0]",
            "target": "dates.ipynb[2]"
        },
        {
            "source": "google calendar data.ipynb[0]",
            "target": "dates.ipynb[1]"
        },
        {
            "source": "google calendar data.ipynb[2]",
            "target": "patterns.ipynb[2]"
        },
        {
            "source": "google calendar data.ipynb[2]",
            "target": "google calendar data.ipynb[1]"
        },
        {
            "source": "google calendar data.ipynb[4]",
            "target": "google calendar data.ipynb[2]"
        },
        {
            "source": "google calendar data.ipynb[5]",
            "target": "google calendar.ipynb[0]"
        },
        {
            "source": "google calendar data.ipynb[5]",
            "target": "google calendar.ipynb[5]"
        },
        {
            "source": "google calendar data.ipynb[5]",
            "target": "dates.ipynb[1]"
        },
        {
            "source": "google calendar data.ipynb[5]",
            "target": "google calendar.ipynb[7]"
        },
        {
            "source": "google calendar data.ipynb[5]",
            "target": "google calendar data.ipynb[2]"
        },
        {
            "source": "google calendar data.ipynb[6]",
            "target": "google calendar.ipynb[0]"
        },
        {
            "source": "google calendar data.ipynb[6]",
            "target": "google calendar.ipynb[5]"
        },
        {
            "source": "google calendar data.ipynb[6]",
            "target": "dates.ipynb[1]"
        },
        {
            "source": "google calendar data.ipynb[6]",
            "target": "google calendar.ipynb[7]"
        },
        {
            "source": "google calendar data.ipynb[7]",
            "target": "google takeout.ipynb[1]"
        },
        {
            "source": "google calendar data.ipynb[7]",
            "target": "google calendar data.ipynb[6]"
        },
        {
            "source": "google calendar data.ipynb[7]",
            "target": "google calendar data.ipynb[5]"
        },
        {
            "source": "google calendar data.ipynb[7]",
            "target": "child process.ipynb[0]"
        },
        {
            "source": "google calendar data.ipynb[8]",
            "target": "google calendar data.ipynb[7]"
        },
        {
            "source": "google calendar graphs.ipynb[0]",
            "target": "google calendar.ipynb[0]"
        },
        {
            "source": "google calendar graphs.ipynb[0]",
            "target": "google calendar.ipynb[1]"
        },
        {
            "source": "google calendar graphs.ipynb[0]",
            "target": "dates.ipynb[3]"
        },
        {
            "source": "google calendar graphs.ipynb[0]",
            "target": "dates.ipynb[4]"
        },
        {
            "source": "google calendar graphs.ipynb[1]",
            "target": "google calendar.ipynb[1]"
        },
        {
            "source": "google calendar graphs.ipynb[1]",
            "target": "d3 dates.ipynb[1]"
        },
        {
            "source": "google calendar graphs.ipynb[2]",
            "target": "google calendar.ipynb[1]"
        },
        {
            "source": "google calendar graphs.ipynb[2]",
            "target": "google calendar.ipynb[0]"
        },
        {
            "source": "google calendar graphs.ipynb[2]",
            "target": "dates.ipynb[2]"
        },
        {
            "source": "google calendar graphs.ipynb[2]",
            "target": "d3 dates.ipynb[0]"
        },
        {
            "source": "google calendar graphs.ipynb[3]",
            "target": "google calendar.ipynb[1]"
        },
        {
            "source": "google calendar graphs.ipynb[3]",
            "target": "google calendar.ipynb[0]"
        },
        {
            "source": "google calendar graphs.ipynb[3]",
            "target": "dates.ipynb[2]"
        },
        {
            "source": "google calendar graphs.ipynb[3]",
            "target": "d3.ipynb[3]"
        },
        {
            "source": "google calendar.ipynb[0]",
            "target": "google authorize.ipynb[0]"
        },
        {
            "source": "google calendar.ipynb[1]",
            "target": "google calendar.ipynb[0]"
        },
        {
            "source": "google calendar.ipynb[1]",
            "target": "google calendar.ipynb[4]"
        },
        {
            "source": "google calendar.ipynb[1]",
            "target": "google calendar.ipynb[5]"
        },
        {
            "source": "google calendar.ipynb[2]",
            "target": "google calendar.ipynb[1]"
        },
        {
            "source": "google calendar.ipynb[2]",
            "target": "google calendar.ipynb[0]"
        },
        {
            "source": "google calendar.ipynb[2]",
            "target": "rpc.ipynb[5]"
        },
        {
            "source": "google calendar.ipynb[2]",
            "target": "heartbeat.ipynb[0]"
        },
        {
            "source": "google calendar.ipynb[2]",
            "target": "facebook data.ipynb[4]"
        },
        {
            "source": "google calendar.ipynb[4]",
            "target": "dates.ipynb[1]"
        },
        {
            "source": "google calendar.ipynb[5]",
            "target": "google calendar.ipynb[0]"
        },
        {
            "source": "google calendar.ipynb[6]",
            "target": "dates.ipynb[1]"
        },
        {
            "source": "google calendar.ipynb[6]",
            "target": "google calendar.ipynb[1]"
        },
        {
            "source": "google calendar.ipynb[7]",
            "target": "google calendar.ipynb[6]"
        },
        {
            "source": "google calendar.ipynb[7]",
            "target": "google calendar.ipynb[0]"
        },
        {
            "source": "google calendar.ipynb[7]",
            "target": "dates.ipynb[1]"
        },
        {
            "source": "google calendar.ipynb[7]",
            "target": "google calendar.ipynb[5]"
        },
        {
            "source": "google calendar.ipynb[8]",
            "target": "google calendar.ipynb[5]"
        },
        {
            "source": "google calendar.ipynb[8]",
            "target": "google calendar.ipynb[0]"
        },
        {
            "source": "google contacts.ipynb[0]",
            "target": "google calendar.ipynb[0]"
        },
        {
            "source": "google contacts.ipynb[1]",
            "target": "google contacts.ipynb[0]"
        },
        {
            "source": "google contacts.ipynb[1]",
            "target": "google calendar.ipynb[0]"
        },
        {
            "source": "google drive.ipynb[1]",
            "target": "google drive.ipynb[2]"
        },
        {
            "source": "google drive.ipynb[1]",
            "target": "google drive.ipynb[3]"
        },
        {
            "source": "google drive.ipynb[10]",
            "target": "convert spreadsheet.ipynb[1]"
        },
        {
            "source": "google drive.ipynb[10]",
            "target": "google drive.ipynb[6]"
        },
        {
            "source": "google drive.ipynb[10]",
            "target": "google drive.ipynb[2]"
        },
        {
            "source": "google drive.ipynb[10]",
            "target": "google drive.ipynb[3]"
        },
        {
            "source": "google drive.ipynb[11]",
            "target": "convert spreadsheet.ipynb[1]"
        },
        {
            "source": "google drive.ipynb[11]",
            "target": "google drive.ipynb[6]"
        },
        {
            "source": "google drive.ipynb[11]",
            "target": "google drive.ipynb[2]"
        },
        {
            "source": "google drive.ipynb[11]",
            "target": "google drive.ipynb[3]"
        },
        {
            "source": "google drive.ipynb[2]",
            "target": "google drive.ipynb[0]"
        },
        {
            "source": "google drive.ipynb[3]",
            "target": "google drive.ipynb[0]"
        },
        {
            "source": "google drive.ipynb[4]",
            "target": "google sheets.ipynb[10]"
        },
        {
            "source": "google drive.ipynb[4]",
            "target": "google drive.ipynb[3]"
        },
        {
            "source": "google drive.ipynb[5]",
            "target": "google drive.ipynb[4]"
        },
        {
            "source": "google drive.ipynb[6]",
            "target": "google drive.ipynb[0]"
        },
        {
            "source": "google drive.ipynb[7]",
            "target": "rpc.ipynb[8]"
        },
        {
            "source": "google drive.ipynb[7]",
            "target": "google authorize.ipynb[0]"
        },
        {
            "source": "google drive.ipynb[8]",
            "target": "google drive.ipynb[7]"
        },
        {
            "source": "google drive.ipynb[8]",
            "target": "rpc.ipynb[8]"
        },
        {
            "source": "google drive.ipynb[8]",
            "target": "google authorize.ipynb[0]"
        },
        {
            "source": "google drive.ipynb[8]",
            "target": "data collection.ipynb[7]"
        },
        {
            "source": "google maps.ipynb[3]",
            "target": "google maps.ipynb[0]"
        },
        {
            "source": "google maps.ipynb[4]",
            "target": "polyfills.ipynb[0]"
        },
        {
            "source": "google maps.ipynb[5]",
            "target": "rpc.ipynb[8]"
        },
        {
            "source": "google maps.ipynb[5]",
            "target": "google authorize.ipynb[0]"
        },
        {
            "source": "google maps.ipynb[6]",
            "target": "google maps.ipynb[4]"
        },
        {
            "source": "google maps.ipynb[6]",
            "target": "google maps.ipynb[5]"
        },
        {
            "source": "google scheduling.ipynb[0]",
            "target": "google calendar.ipynb[5]"
        },
        {
            "source": "google scheduling.ipynb[0]",
            "target": "google calendar.ipynb[0]"
        },
        {
            "source": "google scheduling.ipynb[0]",
            "target": "google calendar.ipynb[6]"
        },
        {
            "source": "google scheduling.ipynb[0]",
            "target": "d3 dates.ipynb[1]"
        },
        {
            "source": "google scheduling.ipynb[5]",
            "target": "google calendar.ipynb[0]"
        },
        {
            "source": "google scheduling.ipynb[5]",
            "target": "d3 dates.ipynb[1]"
        },
        {
            "source": "google scheduling.ipynb[5]",
            "target": "google calendar.ipynb[1]"
        },
        {
            "source": "google scheduling.ipynb[5]",
            "target": "google calendar.ipynb[5]"
        },
        {
            "source": "google scheduling.ipynb[5]",
            "target": "dates.ipynb[2]"
        },
        {
            "source": "google scheduling.ipynb[6]",
            "target": "google calendar.ipynb[0]"
        },
        {
            "source": "google scheduling.ipynb[6]",
            "target": "google calendar.ipynb[1]"
        },
        {
            "source": "google scheduling.ipynb[6]",
            "target": "google calendar.ipynb[5]"
        },
        {
            "source": "google search api.ipynb[0]",
            "target": "google search api.ipynb[2]"
        },
        {
            "source": "google search api.ipynb[1]",
            "target": "google search api.ipynb[0]"
        },
        {
            "source": "google sheets.ipynb[0]",
            "target": "google sheets.ipynb[2]"
        },
        {
            "source": "google sheets.ipynb[1]",
            "target": "google sheets.ipynb[0]"
        },
        {
            "source": "google sheets.ipynb[10]",
            "target": "rpc.ipynb[8]"
        },
        {
            "source": "google sheets.ipynb[2]",
            "target": "google sheets.ipynb[10]"
        },
        {
            "source": "google sheets.ipynb[3]",
            "target": "google sheets.ipynb[4]"
        },
        {
            "source": "google sheets.ipynb[4]",
            "target": "google sheets.ipynb[10]"
        },
        {
            "source": "google sheets.ipynb[4]",
            "target": "google sheets.ipynb[2]"
        },
        {
            "source": "google sheets.ipynb[4]",
            "target": "google sheets.ipynb[7]"
        },
        {
            "source": "google sheets.ipynb[5]",
            "target": "google sheets.ipynb[0]"
        },
        {
            "source": "google sheets.ipynb[5]",
            "target": "google sheets.ipynb[3]"
        },
        {
            "source": "google sheets.ipynb[6]",
            "target": "google sheets.ipynb[8]"
        },
        {
            "source": "google sheets.ipynb[7]",
            "target": "google sheets.ipynb[2]"
        },
        {
            "source": "google sheets.ipynb[8]",
            "target": "google sheets.ipynb[4]"
        },
        {
            "source": "google sheets.ipynb[8]",
            "target": "google sheets.ipynb[10]"
        },
        {
            "source": "google sheets.ipynb[8]",
            "target": "google sheets.ipynb[7]"
        },
        {
            "source": "google sheets.ipynb[9]",
            "target": "google sheets.ipynb[6]"
        },
        {
            "source": "antlr.ipynb[1]",
            "target": "patterns.ipynb[2]"
        },
        {
            "source": "antlr.ipynb[1]",
            "target": "antlr.ipynb[11]"
        },
        {
            "source": "antlr.ipynb[1]",
            "target": "antlr.ipynb[4]"
        },
        {
            "source": "antlr.ipynb[1]",
            "target": "antlr.ipynb[3]"
        },
        {
            "source": "antlr.ipynb[13]",
            "target": "files.ipynb[3]"
        },
        {
            "source": "antlr.ipynb[13]",
            "target": "child process.ipynb[0]"
        },
        {
            "source": "antlr.ipynb[13]",
            "target": "files.ipynb[15]"
        },
        {
            "source": "antlr.ipynb[3]",
            "target": "dylib.ipynb[8]"
        },
        {
            "source": "antlr.ipynb[3]",
            "target": "antlr.ipynb[8]"
        },
        {
            "source": "antlr.ipynb[3]",
            "target": "ciede2000.ipynb[1]"
        },
        {
            "source": "antlr.ipynb[5]",
            "target": "patterns.ipynb[2]"
        },
        {
            "source": "antlr.ipynb[9]",
            "target": "syntax.ipynb[14]"
        },
        {
            "source": "antlr.ipynb[9]",
            "target": "syntax.ipynb[16]"
        },
        {
            "source": "antlr.ipynb[9]",
            "target": "patterns.ipynb[2]"
        },
        {
            "source": "antlr.ipynb[9]",
            "target": "languages.ipynb[3]"
        },
        {
            "source": "bison.ipynb[1]",
            "target": "patterns.ipynb[2]"
        },
        {
            "source": "bison.ipynb[1]",
            "target": "syntax.ipynb[14]"
        },
        {
            "source": "bison.ipynb[1]",
            "target": "syntax.ipynb[16]"
        },
        {
            "source": "bison.ipynb[1]",
            "target": "google timeline.ipynb[5]"
        },
        {
            "source": "csharp.ipynb[1]",
            "target": "data collection.ipynb[7]"
        },
        {
            "source": "csharp.ipynb[1]",
            "target": "csharp.ipynb[0]"
        },
        {
            "source": "csharp.ipynb[2]",
            "target": "antlr.ipynb[1]"
        },
        {
            "source": "csharp.ipynb[3]",
            "target": "antlr.ipynb[1]"
        },
        {
            "source": "csharp.ipynb[4]",
            "target": "antlr.ipynb[1]"
        },
        {
            "source": "json.ipynb[1]",
            "target": "json.ipynb[0]"
        },
        {
            "source": "minimatch.ipynb[0]",
            "target": "balanced.ipynb[0]"
        },
        {
            "source": "minimatch.ipynb[2]",
            "target": "minimatch.ipynb[0]"
        },
        {
            "source": "minimatch.ipynb[2]",
            "target": "minimatch.ipynb[1]"
        },
        {
            "source": "python.ipynb[2]",
            "target": "antlr.ipynb[3]"
        },
        {
            "source": "facebook connections.ipynb[0]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "facebook connections.ipynb[0]",
            "target": "utilities.ipynb[1]"
        },
        {
            "source": "facebook connections.ipynb[4]",
            "target": "What is Selenium.ipynb[2]"
        },
        {
            "source": "facebook data.ipynb[4]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "facebook data.ipynb[7]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "facebook messaging.ipynb[0]",
            "target": "service auth.ipynb[0]"
        },
        {
            "source": "facebook messaging.ipynb[0]",
            "target": "facebook data.ipynb[0]"
        },
        {
            "source": "facebook messaging.ipynb[0]",
            "target": "facebook messaging.ipynb[3]"
        },
        {
            "source": "facebook messaging.ipynb[0]",
            "target": "facebook messaging.ipynb[4]"
        },
        {
            "source": "facebook messaging.ipynb[0]",
            "target": "discord remote.ipynb[4]"
        },
        {
            "source": "facebook messaging.ipynb[1]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "facebook messaging.ipynb[1]",
            "target": "rpc.ipynb[4]"
        },
        {
            "source": "facebook messaging.ipynb[1]",
            "target": "rpc.ipynb[5]"
        },
        {
            "source": "facebook messaging.ipynb[2]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "facebook messaging.ipynb[4]",
            "target": "facebook data.ipynb[1]"
        },
        {
            "source": "facebook messaging.ipynb[4]",
            "target": "discord remote.ipynb[4]"
        },
        {
            "source": "facebook webdriver.ipynb[0]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "facebook webdriver.ipynb[1]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "facebook webdriver.ipynb[1]",
            "target": "utilities.ipynb[1]"
        },
        {
            "source": "facebook webdriver.ipynb[1]",
            "target": "facebook webdriver.ipynb[0]"
        },
        {
            "source": "facebook webdriver.ipynb[2]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "forms.ipynb[0]",
            "target": "forms.ipynb[1]"
        },
        {
            "source": "forms.ipynb[0]",
            "target": "forms.ipynb[2]"
        },
        {
            "source": "forms.ipynb[4]",
            "target": "data collection.ipynb[5]"
        },
        {
            "source": "github.ipynb[0]",
            "target": "child process.ipynb[0]"
        },
        {
            "source": "google authorize.ipynb[0]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "google authorize.ipynb[1]",
            "target": "google drive.ipynb[7]"
        },
        {
            "source": "google takeout.ipynb[1]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "google takeout.ipynb[3]",
            "target": "d3.ipynb[3]"
        },
        {
            "source": "google timeline.ipynb[3]",
            "target": "google calendar.ipynb[6]"
        },
        {
            "source": "google timeline.ipynb[3]",
            "target": "google calendar.ipynb[0]"
        },
        {
            "source": "google timeline.ipynb[3]",
            "target": "google maps.ipynb[3]"
        },
        {
            "source": "google timeline.ipynb[5]",
            "target": "google timeline.ipynb[4]"
        },
        {
            "source": "google timeline.ipynb[5]",
            "target": "google timeline.ipynb[2]"
        },
        {
            "source": "google timeline.ipynb[5]",
            "target": "google timeline.ipynb[5]"
        },
        {
            "source": "google timeline.ipynb[5]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "linkedin connections.ipynb[0]",
            "target": "google contacts.ipynb[0]"
        },
        {
            "source": "linkedin connections.ipynb[0]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "linkedin connections.ipynb[5]",
            "target": "What is Selenium.ipynb[2]"
        },
        {
            "source": "linkedin messages.ipynb[4]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "linkedin webdriver.ipynb[0]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "orchestration.ipynb[2]",
            "target": "orchestration.ipynb[0]"
        },
        {
            "source": "orchestration.ipynb[2]",
            "target": "orchestration.ipynb[3]"
        },
        {
            "source": "orchestration.ipynb[3]",
            "target": "orchestration.ipynb[0]"
        },
        {
            "source": "orchestration.ipynb[7]",
            "target": "docker demo.ipynb[1]"
        },
        {
            "source": "orchestration.ipynb[7]",
            "target": "What is Selenium.ipynb[0]"
        },
        {
            "source": "orchestration.ipynb[7]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "orchestration.ipynb[7]",
            "target": "child process.ipynb[0]"
        },
        {
            "source": "orchestration.ipynb[8]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "reddit.ipynb[0]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "reddit.ipynb[1]",
            "target": "reddit.ipynb[0]"
        },
        {
            "source": "reddit.ipynb[1]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "reddit.ipynb[1]",
            "target": "webdriver.ipynb[7]"
        },
        {
            "source": "reddit.ipynb[1]",
            "target": "llama.ipynb[10]"
        },
        {
            "source": "reddit.ipynb[2]",
            "target": "reddit.ipynb[1]"
        },
        {
            "source": "reddit.ipynb[3]",
            "target": "reddit.ipynb[5]"
        },
        {
            "source": "reddit.ipynb[3]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "reddit.ipynb[3]",
            "target": "reddit.ipynb[4]"
        },
        {
            "source": "reddit.ipynb[3]",
            "target": "reddit.ipynb[1]"
        },
        {
            "source": "reddit.ipynb[3]",
            "target": "scraping.ipynb[2]"
        },
        {
            "source": "reddit.ipynb[3]",
            "target": "scraping.ipynb[5]"
        },
        {
            "source": "reddit.ipynb[3]",
            "target": "scraping.ipynb[6]"
        },
        {
            "source": "reddit.ipynb[3]",
            "target": "scraping.ipynb[0]"
        },
        {
            "source": "reddit.ipynb[4]",
            "target": "reddit.ipynb[5]"
        },
        {
            "source": "reddit.ipynb[4]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "reddit.ipynb[5]",
            "target": "webdriver.ipynb[6]"
        },
        {
            "source": "reddit.ipynb[5]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "reddit.ipynb[6]",
            "target": "reddit.ipynb[5]"
        },
        {
            "source": "reddit.ipynb[6]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "scraping.ipynb[0]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "scraping.ipynb[0]",
            "target": "webdriver.ipynb[6]"
        },
        {
            "source": "scraping.ipynb[1]",
            "target": "scraping.ipynb[0]"
        },
        {
            "source": "scraping.ipynb[1]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "scraping.ipynb[2]",
            "target": "llama.ipynb[10]"
        },
        {
            "source": "scraping.ipynb[3]",
            "target": "scraping.ipynb[0]"
        },
        {
            "source": "scraping.ipynb[3]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "scraping.ipynb[3]",
            "target": "scraping.ipynb[2]"
        },
        {
            "source": "scraping.ipynb[4]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "scraping.ipynb[4]",
            "target": "scraping.ipynb[0]"
        },
        {
            "source": "scraping.ipynb[4]",
            "target": "scraping.ipynb[2]"
        },
        {
            "source": "scraping.ipynb[4]",
            "target": "scraping.ipynb[6]"
        },
        {
            "source": "scraping.ipynb[4]",
            "target": "reddit.ipynb[4]"
        },
        {
            "source": "scraping.ipynb[5]",
            "target": "data collection.ipynb[7]"
        },
        {
            "source": "scraping.ipynb[5]",
            "target": "scraping.ipynb[6]"
        },
        {
            "source": "scraping.ipynb[5]",
            "target": "scraping.ipynb[4]"
        },
        {
            "source": "scraping.ipynb[5]",
            "target": "llama.ipynb[10]"
        },
        {
            "source": "scraping.ipynb[6]",
            "target": "data collection.ipynb[7]"
        },
        {
            "source": "scraping.ipynb[6]",
            "target": "webdriver.ipynb[6]"
        },
        {
            "source": "scraping.ipynb[6]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "service auth.ipynb[4]",
            "target": "google drive.ipynb[7]"
        },
        {
            "source": "service auth.ipynb[4]",
            "target": "discord remote.ipynb[4]"
        },
        {
            "source": "service auth.ipynb[4]",
            "target": "bash.ipynb[6]"
        },
        {
            "source": "service auth.ipynb[4]",
            "target": "service auth.ipynb[1]"
        },
        {
            "source": "utilities.ipynb[0]",
            "target": "patterns.ipynb[2]"
        },
        {
            "source": "utilities.ipynb[0]",
            "target": "patterns.ipynb[0]"
        },
        {
            "source": "utilities.ipynb[1]",
            "target": "utilities.ipynb[0]"
        },
        {
            "source": "utilities.ipynb[1]",
            "target": "webdriver.ipynb[6]"
        },
        {
            "source": "utilities.ipynb[4]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "utilities.ipynb[5]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "utilities.ipynb[5]",
            "target": "utilities.ipynb[4]"
        },
        {
            "source": "webdriver.ipynb[0]",
            "target": "webdriver.ipynb[1]"
        },
        {
            "source": "webdriver.ipynb[2]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "webdriver.ipynb[3]",
            "target": "webdriver.ipynb[4]"
        },
        {
            "source": "webdriver.ipynb[5]",
            "target": "webdriver.ipynb[1]"
        },
        {
            "source": "webdriver.ipynb[5]",
            "target": "webdriver.ipynb[4]"
        },
        {
            "source": "webdriver.ipynb[5]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "webdriver.ipynb[6]",
            "target": "patterns.ipynb[2]"
        },
        {
            "source": "webdriver.ipynb[6]",
            "target": "patterns.ipynb[0]"
        },
        {
            "source": "webdriver.ipynb[7]",
            "target": "patterns.ipynb[2]"
        },
        {
            "source": "webdriver.ipynb[7]",
            "target": "patterns.ipynb[0]"
        },
        {
            "source": "What is Selenium.ipynb[0]",
            "target": "child process.ipynb[0]"
        },
        {
            "source": "What is Selenium.ipynb[0]",
            "target": "docker demo.ipynb[1]"
        },
        {
            "source": "What is Selenium.ipynb[2]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "What is Selenium.ipynb[2]",
            "target": "service auth.ipynb[0]"
        },
        {
            "source": "What is Selenium.ipynb[2]",
            "target": "utilities.ipynb[1]"
        },
        {
            "source": "What is Selenium.ipynb[2]",
            "target": "orchestration.ipynb[0]"
        },
        {
            "source": "What is Selenium.ipynb[2]",
            "target": "utilities.ipynb[2]"
        },
        {
            "source": "What is Selenium.ipynb[2]",
            "target": "quake 3.ipynb[11]"
        },
        {
            "source": "What is Selenium.ipynb[2]",
            "target": "forms.ipynb[0]"
        },
        {
            "source": "What is Selenium.ipynb[2]",
            "target": "llama.ipynb[0]"
        },
        {
            "source": "you earned it.ipynb[1]",
            "target": "webdriver.ipynb[0]"
        },
        {
            "source": "ciede2000.ipynb[2]",
            "target": "ciede2000.ipynb[1]"
        },
        {
            "source": "ciede2000.ipynb[2]",
            "target": "ciede2000.ipynb[0]"
        },
        {
            "source": "dylib.ipynb[10]",
            "target": "data collection.ipynb[7]"
        },
        {
            "source": "dylib.ipynb[10]",
            "target": "shell-parse.ipynb[0]"
        },
        {
            "source": "dylib.ipynb[4]",
            "target": "robot.ipynb[6]"
        },
        {
            "source": "dylib.ipynb[5]",
            "target": "antlr.ipynb[1]"
        },
        {
            "source": "dylib.ipynb[6]",
            "target": "antlr.ipynb[1]"
        },
        {
            "source": "dylib.ipynb[8]",
            "target": "antlr.ipynb[3]"
        },
        {
            "source": "heartbeat.ipynb[1]",
            "target": "google calendar.ipynb[6]"
        },
        {
            "source": "heartbeat.ipynb[1]",
            "target": "google calendar.ipynb[0]"
        },
        {
            "source": "heartbeat.ipynb[1]",
            "target": "heartbeat.ipynb[0]"
        },
        {
            "source": "qr codes.ipynb[0]",
            "target": "polyfills.ipynb[0]"
        },
        {
            "source": "usage.ipynb[1]",
            "target": "usage.ipynb[0]"
        },
        {
            "source": "usage.ipynb[2]",
            "target": "usage.ipynb[1]"
        },
        {
            "source": "windows.ipynb[0]",
            "target": "syntax.ipynb[21]"
        }
    ],
    "searches": {
        "n": "/Users/briancullinan/jupyter_ops/Frameworks/node simple-imap.ipynb[0]",
        "llama vision": "/Users/briancullinan/jupyter_ops/Algorithms/llama vision.ipynb[0]",
        "request ollama vision": "/Users/briancullinan/jupyter_ops/Algorithms/llama vision.ipynb[7]",
        "select llm": "/Users/briancullinan/jupyter_ops/Algorithms/llm writing.ipynb[4]",
        "stable diffusion request": "/Users/briancullinan/jupyter_ops/Algorithms/llama vision.ipynb[9]",
        "image 2 image": "/Users/briancullinan/jupyter_ops/Algorithms/llama vision.ipynb[12]",
        "mask image": "/Users/briancullinan/jupyter_ops/Algorithms/llama vision.ipynb[10]",
        "inpaint mask": "/Users/briancullinan/jupyter_ops/Algorithms/llama vision.ipynb[11]",
        "ask llm about functions": "/Users/briancullinan/jupyter_ops/Algorithms/llama.ipynb[4]",
        "ask llm about categories": "/Users/briancullinan/jupyter_ops/Algorithms/llama.ipynb[1]",
        "cache notebook": "/Users/briancullinan/jupyter_ops/Core/cache.ipynb[1]",
        "cache rpc functions with llm descriptions": "/Users/briancullinan/jupyter_ops/Databases/caches.ipynb[0]",
        "cell cache": "/Users/briancullinan/jupyter_ops/Core/cache.ipynb[0]",
        "store all notebook llm functions": "/Users/briancullinan/jupyter_ops/Algorithms/llama.ipynb[9]",
        "store llama function": "/Users/briancullinan/jupyter_ops/Algorithms/llama.ipynb[8]",
        "ask llm for a shorter list of categories": "/Users/briancullinan/jupyter_ops/Algorithms/llama.ipynb[3]",
        "create llm session": "/Users/briancullinan/jupyter_ops/Algorithms/llama.ipynb[10]",
        "list project files": "/Users/briancullinan/jupyter_ops/Core/files.ipynb[5]",
        "update code cell": "/Users/briancullinan/jupyter_ops/Core/cache.ipynb[10]",
        "ask llm about code": "/Users/briancullinan/jupyter_ops/Algorithms/llama.ipynb[5]",
        "ask llm to summerize": "/Users/briancullinan/jupyter_ops/Algorithms/llama.ipynb[7]",
        "get parameter names": "/Users/briancullinan/jupyter_ops/Core/syntax.ipynb[7]",
        "get c parameters": "/Users/briancullinan/jupyter_ops/Utilities/dylib.ipynb[5]",
        "python params in antlr": "/Users/briancullinan/jupyter_ops/Languages/python.ipynb[2]",
        "parse patch file": "/Users/briancullinan/jupyter_ops/Algorithms/llm blogging.ipynb[1]",
        "domain cache tools": "/Users/briancullinan/jupyter_ops/Analytics/data collection.ipynb[7]",
        "ask llm about emotions": "/Users/briancullinan/jupyter_ops/Algorithms/llm tools.ipynb[1]",
        "general chit chat": "/Users/briancullinan/jupyter_ops/Algorithms/llm chat.ipynb[1]",
        "get exports from source": "/Users/briancullinan/jupyter_ops/Core/syntax.ipynb[5]",
        "func": "/Users/briancullinan/jupyter_ops/Core/syntax.ipynb[7]",
        "add conversation context": "/Users/briancullinan/jupyter_ops/Algorithms/llm chat.ipynb[7]",
        "store llm response": "/Users/briancullinan/jupyter_ops/Algorithms/llm chat.ipynb[0]",
        "describe an image": "/Users/briancullinan/jupyter_ops/Databases/git index.ipynb[19]",
        "classify llm prompt": "/Users/briancullinan/jupyter_ops/Algorithms/llm chat.ipynb[5]",
        "function parameters": "/Users/briancullinan/jupyter_ops/Core/syntax.ipynb[7]",
        "llm load memories": "/Users/briancullinan/jupyter_ops/Algorithms/llm chat.ipynb[8]",
        "matchingFunctions[i": "/Users/briancullinan/jupyter_ops/Languages/python.ipynb[1]",
        "llm code": "/Users/briancullinan/jupyter_ops/Algorithms/llama vision.ipynb[2]",
        "codeCell": "/Users/briancullinan/jupyter_ops/Core/cache.ipynb[0]",
        "how to cache chat logs": "/Users/briancullinan/jupyter_ops/Algorithms/llm tools.ipynb[2]",
        "cache chat history with llm descriptions": "/Users/briancullinan/jupyter_ops/Databases/caches.ipynb[1]",
        "ask llm about chat conversations": "/Users/briancullinan/jupyter_ops/Algorithms/llm tools.ipynb[3]",
        "how to scan chat logs": "/Users/briancullinan/jupyter_ops/Algorithms/llm tools.ipynb[0]",
        "ask llm to write chapter titles and descriptions": "/Users/briancullinan/jupyter_ops/Algorithms/llm writing.ipynb[5]",
        "llm deceive": "/Users/briancullinan/jupyter_ops/Algorithms/llama vision.ipynb[2]",
        "decode xlsx spreadsheet": "/Users/briancullinan/jupyter_ops/Algorithms/llm writing.ipynb[8]",
        "motion detection": "/Users/briancullinan/jupyter_ops/Algorithms/opencv.ipynb[1]",
        "globals(": "/Users/briancullinan/jupyter_ops/Algorithms/llama vision.ipynb[14]",
        "list live stream": "/Users/briancullinan/jupyter_ops/Algorithms/opencv.ipynb[8]",
        "authorize youtube in python": "/Users/briancullinan/jupyter_ops/Algorithms/opencv.ipynb[5]",
        "list broadcasts": "/Users/briancullinan/jupyter_ops/Algorithms/opencv.ipynb[6]",
        "bind youtube stream": "/Users/briancullinan/jupyter_ops/Algorithms/opencv.ipynb[9]",
        "multi crawl": "/Users/briancullinan/jupyter_ops/Analytics/data collection.ipynb[5]",
        "convert date iso": "/Users/briancullinan/jupyter_ops/Utilities/dates.ipynb[1]",
        "create new calendar event": "/Users/briancullinan/jupyter_ops/Google/google calendar.ipynb[8]",
        "import google calendar api": "/Users/briancullinan/jupyter_ops/Google/google calendar.ipynb[0]",
        "selenium cell": "/Users/briancullinan/jupyter_ops/Selenium/webdriver.ipynb[0]",
        "searchCallback": "/Users/briancullinan/jupyter_ops/Algorithms/llama.ipynb[0]",
        "Object.assign({useCache: false}": "",
        "ctx": "/Users/briancullinan/jupyter_ops/Core/syntax.ipynb[19]",
        "browser crawler tools": "/Users/briancullinan/jupyter_ops/Analytics/data collection.ipynb[8]",
        "crawl domain": "/Users/briancullinan/jupyter_ops/Analytics/data collection.ipynb[6]",
        "glob files": "/Users/briancullinan/jupyter_ops/Core/files.ipynb[3]",
        "select tree": "/Users/briancullinan/jupyter_ops/Core/patterns.ipynb[2]",
        "domain crawler tools": "/Users/briancullinan/jupyter_ops/Analytics/data collection.ipynb[7]",
        "parse bookmarks file": "/Users/briancullinan/jupyter_ops/Google/google calendar data.ipynb[2]",
        "create movie database tables": "/Users/briancullinan/jupyter_ops/Analytics/movie database.ipynb[4]",
        "sort by levenshtein distance": "/Users/briancullinan/jupyter_ops/Utilities/levenshtein.ipynb[1]",
        "movie tile": "/Users/briancullinan/jupyter_ops/Analytics/movie database.ipynb[8]",
        "movie page": "/Users/briancullinan/jupyter_ops/Analytics/movie database.ipynb[7]",
        "search the web": "/Users/briancullinan/jupyter_ops/Google/google search api.ipynb[0]",
        "google sheet array objects": "/Users/briancullinan/jupyter_ops/Google/google sheets.ipynb[3]",
        "d3 pie chart": "/Users/briancullinan/jupyter_ops/Frameworks/d3.ipynb[3]",
        "course list pie chart": "/Users/briancullinan/jupyter_ops/Analytics/resume.ipynb[0]",
        "rpc result": "/Users/briancullinan/jupyter_ops/Core/rpc.ipynb[6]",
        "body.function": "/Users/briancullinan/jupyter_ops/Languages/python.ipynb[1]",
        "body['function": "/Users/briancullinan/jupyter_ops/Utilities/bash.ipynb[6]",
        "authorize google service": "/Users/briancullinan/jupyter_ops/Cloud Services/google cloud api.ipynb[9]",
        "list google bucket url map": "/Users/briancullinan/jupyter_ops/Cloud Services/google cloud api.ipynb[0]",
        "wait google cloud operation": "/Users/briancullinan/jupyter_ops/Cloud Services/google cloud api.ipynb[2]",
        "create storage bucket": "/Users/briancullinan/jupyter_ops/Cloud Services/google storage api.ipynb[0]",
        "list global bucket url map": "/Users/briancullinan/jupyter_ops/Cloud Services/google cloud api.ipynb[0]",
        "add google bucket web map": "/Users/briancullinan/jupyter_ops/Cloud Services/google cloud api.ipynb[3]",
        "check dns": "/Users/briancullinan/jupyter_ops/Cloud Services/google cloud api.ipynb[6]",
        "wait cloud operation": "/Users/briancullinan/jupyter_ops/Cloud Services/google cloud api.ipynb[2]",
        "get sheet purchases": "/Users/briancullinan/jupyter_ops/Frontends/convert spreadsheet.ipynb[1]",
        "req.body['function'] || req.query['function": "",
        "get environment": "/Users/briancullinan/jupyter_ops/Core/rpc.ipynb[7]",
        "(req.body || {}": "",
        "google cloud function rpc wrapper": "/Users/briancullinan/jupyter_ops/Cloud Services/google rpc.ipynb[1]",
        "select ast": "/Users/briancullinan/jupyter_ops/Core/syntax.ipynb[19]",
        "nice name": "/Users/briancullinan/jupyter_ops/Core/notebook.ipynb[13]",
        "get exports": "/Users/briancullinan/jupyter_ops/Core/syntax.ipynb[5]",
        "get parameters": "/Users/briancullinan/jupyter_ops/Core/syntax.ipynb[7]",
        "generic cloud function handler": "/Users/briancullinan/jupyter_ops/Cloud Services/google rpc.ipynb[3]",
        "entry": "/Users/briancullinan/jupyter_ops/Frameworks/zuora to eloqua.ipynb[15]",
        "create a bucket": "/Users/briancullinan/jupyter_ops/Cloud Services/google storage api.ipynb[0]",
        "mkdirp": "/Users/briancullinan/jupyter_ops/Core/files.ipynb[14]",
        "fetch file or stream": "/Users/briancullinan/jupyter_ops/Cloud Services/google storage api.ipynb[3]",
        "test stream to output": "/Users/briancullinan/jupyter_ops/Cloud Services/google storage api.ipynb[2]",
        "upload files google cloud": "/Users/briancullinan/jupyter_ops/Cloud Services/google storage api.ipynb[4]",
        "transpile code": "/Users/briancullinan/jupyter_ops/Core/languages.ipynb[3]",
        "select code tree": "/Users/briancullinan/jupyter_ops/Core/syntax.ipynb[19]",
        "html to tree": "/Users/briancullinan/jupyter_ops/Core/syntax.ipynb[16]",
        "d3.ipynb[create word-cloud": "/Users/briancullinan/jupyter_ops/Frameworks/d3.ipynb[0]",
        "relative paths and includes": "",
        "{project}": "/Users/briancullinan/jupyter_ops/Core/files.ipynb[1]",
        "d3.ipynb[format tree": "/Users/briancullinan/jupyter_ops/Frameworks/d3.ipynb[0]",
        "d3.ipynb[display d3 tree": "/Users/briancullinan/jupyter_ops/Frameworks/d3.ipynb[0]",
        "minimatch": "/Users/briancullinan/jupyter_ops/Languages/minimatch.ipynb[2]",
        "common ignore paths": "/Users/briancullinan/jupyter_ops/Core/files.ipynb[6]",
        "builtin and local modules": "/Users/briancullinan/jupyter_ops/Core/syntax.ipynb[2]",
        "notebook": "/Users/briancullinan/jupyter_ops/Frameworks/notebook extensions.ipynb[0]",
        "ctx = {}": "",
        "resolveModuleSpecifier(specifier": "",
        "dirname": "/Users/briancullinan/jupyter_ops/Core/notebook.ipynb[13]",
        "resolvedSpecifier": "/Users/briancullinan/jupyter_ops/Games/quake3 server connector.ipynb[3]",
        "pathToCode": "/Users/briancullinan/jupyter_ops/Core/cache.ipynb[10]",
        "select antlr tree": "/Users/briancullinan/jupyter_ops/Languages/antlr.ipynb[1]",
        "list csharp params": "/Users/briancullinan/jupyter_ops/Languages/csharp.ipynb[4]",
        "list csharp classes": "/Users/briancullinan/jupyter_ops/Languages/csharp.ipynb[3]",
        "list csharp namespaces": "/Users/briancullinan/jupyter_ops/Languages/csharp.ipynb[2]",
        "c type to data type": "/Users/briancullinan/jupyter_ops/Utilities/dylib.ipynb[9]",
        "build dylib": "/Users/briancullinan/jupyter_ops/Utilities/dylib.ipynb[10]",
        "get c types": "/Users/briancullinan/jupyter_ops/Utilities/dylib.ipynb[8]",
        "searchFunc": "/Users/briancullinan/jupyter_ops/Frameworks/gulp.ipynb[5]",
        "cacheLookup": "/Users/briancullinan/jupyter_ops/Core/cache.ipynb[1]",
        "cache all": "/Users/briancullinan/jupyter_ops/Core/cache.ipynb[3]",
        "queries": "/Users/briancullinan/jupyter_ops/Core/pyimport.ipynb[3]",
        "enforcing an interface": "/Users/briancullinan/jupyter_ops/Core/patterns.ipynb[9]",
        "notebook kernel json": "/Users/briancullinan/jupyter_ops/Core/kernels.ipynb[0]",
        "kernel language interface": "/Users/briancullinan/jupyter_ops/Core/kernels.ipynb[3]",
        "kernel info interface": "/Users/briancullinan/jupyter_ops/Core/kernels.ipynb[4]",
        "extend prototype class": "/Users/briancullinan/jupyter_ops/Core/patterns.ipynb[8]",
        "meta kernel interface": "/Users/briancullinan/jupyter_ops/Core/kernels.ipynb[5]",
        "native meta kernel methods": "/Users/briancullinan/jupyter_ops/Core/kernels.ipynb[7]",
        "native meta kernel": "/Users/briancullinan/jupyter_ops/Core/kernels.ipynb[6]",
        "socket meta kernel": "/Users/briancullinan/jupyter_ops/Core/kernels.ipynb[8]",
        "process meta kernel": "/Users/briancullinan/jupyter_ops/Core/kernels.ipynb[9]",
        "node meta kernel": "/Users/briancullinan/jupyter_ops/Core/kernels.ipynb[18]",
        "extend prototype": "/Users/briancullinan/jupyter_ops/Core/patterns.ipynb[8]",
        "decode encode ipython zmq protocol": "/Users/briancullinan/jupyter_ops/Core/kernels.ipynb[24]",
        "jupyter meta kernel": "/Users/briancullinan/jupyter_ops/Core/kernels.ipynb[3]",
        "wire meta kernel": "/Users/briancullinan/jupyter_ops/Core/kernels.ipynb[18]",
        "get kernel json": "/Users/briancullinan/jupyter_ops/Core/kernels.ipynb[0]",
        "jupyter wire kernel": "/Users/briancullinan/jupyter_ops/Core/kernels.ipynb[3]",
        "get kernel info": "/Users/briancullinan/jupyter_ops/Core/kernels.ipynb[0]",
        "get kernel language": "/Users/briancullinan/jupyter_ops/Databases/git index.ipynb[19]",
        "select acorn tree": "/Users/briancullinan/jupyter_ops/Core/syntax.ipynb[21]",
        "add missing imports": "/Users/briancullinan/jupyter_ops/Core/notebook.ipynb[7]",
        "replace core requirement": "/Users/briancullinan/jupyter_ops/Core/notebook.ipynb[4]",
        "replace notebook import": "/Users/briancullinan/jupyter_ops/Core/notebook.ipynb[5]",
        "rename cell to nice name": "/Users/briancullinan/jupyter_ops/Core/notebook.ipynb[13]",
        "str": "/Users/briancullinan/jupyter_ops/Languages/json.ipynb[0]",
        "exports cache": "/Users/briancullinan/jupyter_ops/Core/cache.ipynb[7]",
        "${file[0]}": "",
        "authoring header template": "/Users/briancullinan/jupyter_ops/Core/notebook.ipynb[14]",
        "replace notebook imports": "/Users/briancullinan/jupyter_ops/Core/notebook.ipynb[5]",
        "get imports": "/Users/briancullinan/jupyter_ops/Core/syntax.ipynb[9]",
        "fix project paths": "/Users/briancullinan/jupyter_ops/Core/files.ipynb[9]",
        "delint notebooks": "/Users/briancullinan/jupyter_ops/Frameworks/de-linting.ipynb[0]",
        "match filename": "/Users/briancullinan/jupyter_ops/Cloud Services/google storage api.ipynb[3]",
        "generic gcloud function handler": "/Users/briancullinan/jupyter_ops/Cloud Services/google rpc.ipynb[3]",
        "searches": "/Users/briancullinan/jupyter_ops/Algorithms/llama.ipynb[0]",
        "search": "/Users/briancullinan/jupyter_ops/Algorithms/llama.ipynb[0]",
        "get ast path array": "/Users/briancullinan/jupyter_ops/Languages/csharp.ipynb[4]",
        "include require like import": "",
        "cell extension": "/Users/briancullinan/jupyter_ops/Core/notebook.ipynb[12]",
        "walk tree": "/Users/briancullinan/jupyter_ops/Core/patterns.ipynb[0]",
        "notebook_path": "/Users/briancullinan/jupyter_ops/Frameworks/notebook extensions.ipynb[0]",
        "rpc groups": "/Users/briancullinan/jupyter_ops/Core/rpc.ipynb[0]",
        "cell.id2": "/Users/briancullinan/jupyter_ops/Core/cache.ipynb[0]",
        "cell.questions[0": "/Users/briancullinan/jupyter_ops/Core/pyimport.ipynb[3]",
        "get cell rpc groups": "/Users/briancullinan/jupyter_ops/Core/rpc.ipynb[1]",
        "s": "/Users/briancullinan/jupyter_ops/Core/syntax.ipynb[19]",
        "search ||": "/Users/briancullinan/jupyter_ops/Algorithms/llama.ipynb[0]",
        "rpc permissions": "/Users/briancullinan/jupyter_ops/Core/rpc.ipynb[2]",
        "days events": "/Users/briancullinan/jupyter_ops/Google/google calendar.ipynb[6]",
        "google contact settings": "/Users/briancullinan/jupyter_ops/Google/google contacts.ipynb[1]",
        "command": "/Users/briancullinan/jupyter_ops/Cloud Services/google cloud commands.ipynb[3]",
        "test get permissions": "/Users/briancullinan/jupyter_ops/Core/rpc.ipynb[3]",
        "props.result.id": "/Users/briancullinan/jupyter_ops/Core/rpc.ipynb[6]",
        "http request": "/Users/briancullinan/jupyter_ops/Utilities/polyfills.ipynb[0]",
        "get rpc from spec": "/Users/briancullinan/jupyter_ops/Core/rpc.ipynb[8]",
        "get requires": "/Users/briancullinan/jupyter_ops/Core/syntax.ipynb[0]",
        "path.basename(n": "",
        "core dependencies": "/Users/briancullinan/jupyter_ops/Core/syntax.ipynb[3]",
        "get imports from source": "/Users/briancullinan/jupyter_ops/Core/syntax.ipynb[9]",
        "rpc.ipynb[1": "/Users/briancullinan/jupyter_ops/Core/rpc.ipynb[0]",
        "tree to html": "/Users/briancullinan/jupyter_ops/Core/syntax.ipynb[14]",
        "this is a describe request": "",
        "make xpaths": "/Users/briancullinan/jupyter_ops/Core/syntax.ipynb[22]",
        "minimize xpath": "/Users/briancullinan/jupyter_ops/Core/syntax.ipynb[24]",
        "select expression": "/Users/briancullinan/jupyter_ops/Core/syntax.ipynb[26]",
        "importer": "/Users/briancullinan/jupyter_ops/Core/cache.ipynb[4]",
        "prompt": "/Users/briancullinan/jupyter_ops/Core/files.ipynb[1]",
        "github service config": "/Users/briancullinan/jupyter_ops/Databases/git index.ipynb[12]",
        "git branches": "/Users/briancullinan/jupyter_ops/Databases/git index.ipynb[14]",
        "git service index": "/Users/briancullinan/jupyter_ops/Databases/git index.ipynb[1]",
        "branch list fragment": "/Users/briancullinan/jupyter_ops/Databases/git index.ipynb[4]",
        "branch fragment": "/Users/briancullinan/jupyter_ops/Databases/git index.ipynb[8]",
        "repo fragment": "/Users/briancullinan/jupyter_ops/Databases/git index.ipynb[7]",
        "repositories fragment": "/Users/briancullinan/jupyter_ops/Databases/git index.ipynb[2]",
        "directory to html": "/Users/briancullinan/jupyter_ops/Frameworks/node express.ipynb[15]",
        "file list fragment": "/Users/briancullinan/jupyter_ops/Databases/git index.ipynb[3]",
        "determine language": "/Users/briancullinan/jupyter_ops/Databases/git index.ipynb[19]",
        "html image viewer": "/Users/briancullinan/jupyter_ops/Frameworks/node express.ipynb[15]",
        "html music player": "/Users/briancullinan/jupyter_ops/Frameworks/node express.ipynb[14]",
        "html code view": "/Users/briancullinan/jupyter_ops/Databases/git index.ipynb[11]",
        "highlight js": "/Users/briancullinan/jupyter_ops/Frontends/documentation.ipynb[5]",
        "commits list fragment": "/Users/briancullinan/jupyter_ops/Databases/git index.ipynb[5]",
        "commit fragment": "/Users/briancullinan/jupyter_ops/Databases/git index.ipynb[9]",
        "spawn child process": "/Users/briancullinan/jupyter_ops/Utilities/child process.ipynb[0]",
        "d3.ipynb[format d3 tree]": "/Users/briancullinan/jupyter_ops/Frameworks/d3.ipynb[4]",
        "json git tree": "/Users/briancullinan/jupyter_ops/Databases/git.ipynb[2]",
        "d3.ipynb[display d3 tree]": "/Users/briancullinan/jupyter_ops/Frameworks/d3.ipynb[5]",
        "git project directory": "/Users/briancullinan/jupyter_ops/Databases/git.ipynb[7]",
        "gulp task to a Promise": "/Users/briancullinan/jupyter_ops/Frameworks/gulp.ipynb[1]",
        "{gulp}": "/Users/briancullinan/jupyter_ops/Frameworks/gulp.ipynb[0]",
        "git auto rebase": "/Users/briancullinan/jupyter_ops/Databases/git commands.ipynb[5]",
        "create merge delete event": "/Users/briancullinan/jupyter_ops/Google/google calendar.ipynb[7]",
        "lookup calendar name": "/Users/briancullinan/jupyter_ops/Google/google calendar.ipynb[5]",
        "update create merge event": "/Users/briancullinan/jupyter_ops/Google/google calendar.ipynb[7]",
        "memory-fs rewire": "/Users/briancullinan/jupyter_ops/Core/cache.ipynb[12]",
        "run selenium inside docker": "/Users/briancullinan/jupyter_ops/Selenium/selenium commands.ipynb[3]",
        "linux dev tools": "/Users/briancullinan/jupyter_ops/Docker/node install.ipynb[1]",
        "vnc html": "/Users/briancullinan/jupyter_ops/Utilities/vnc.ipynb[2]",
        "vnc in docker": "/Users/briancullinan/jupyter_ops/Utilities/vnc.ipynb[4]",
        "attachments from michelle@thesosmethod.com last 7 days": "/Users/briancullinan/jupyter_ops/Frameworks/node simple-imap.ipynb[5]",
        "save attachments to sosmethod assets": "/Users/briancullinan/jupyter_ops/Frameworks/node simple-imap.ipynb[5]",
        "save sosmethod.org #kinder img to sosmethod assets": "",
        "save sosmethod.org .w-gallery img to sosmethod assets": "",
        "lint notebooks": "/Users/briancullinan/jupyter_ops/Frameworks/de-linting.ipynb[0]",
        "delint specific cells": "/Users/briancullinan/jupyter_ops/Frameworks/de-linting.ipynb[2]",
        "export deploy notebook": "/Users/briancullinan/jupyter_ops/Core/notebook.ipynb[10]",
        "notebook.ipynb[export cells modules": "/Users/briancullinan/jupyter_ops/Core/notebook.ipynb[0]",
        "diff code blocks": "/Users/briancullinan/jupyter_ops/Utilities/diff.ipynb[0]",
        "gulp tasks to promise": "/Users/briancullinan/jupyter_ops/Frameworks/gulp.ipynb[1]",
        "import new service": "/Users/briancullinan/jupyter_ops/Frameworks/node express.ipynb[1]",
        "express router": "/Users/briancullinan/jupyter_ops/Frameworks/node express.ipynb[3]",
        "service": "/Users/briancullinan/jupyter_ops/Databases/git index.ipynb[1]",
        "express rpc service": "/Users/briancullinan/jupyter_ops/Frameworks/node express.ipynb[2]",
        "parse environment": "/Users/briancullinan/jupyter_ops/Frameworks/node express.ipynb[4]",
        "rpc service index": "/Users/briancullinan/jupyter_ops/Frameworks/node express.ipynb[19]",
        "rpc fragment": "/Users/briancullinan/jupyter_ops/Frameworks/node express.ipynb[18]",
        "rpc list fragment": "/Users/briancullinan/jupyter_ops/Frameworks/node express.ipynb[17]",
        "path.basename(notebooks[i": "",
        "decrypt passwords": "/Users/briancullinan/jupyter_ops/Selenium/service auth.ipynb[0]",
        "node imap client": "/Users/briancullinan/jupyter_ops/Frameworks/node simple-imap.ipynb[0]",
        "search imap messages": "/Users/briancullinan/jupyter_ops/Frameworks/node simple-imap.ipynb[1]",
        "send email": "/Users/briancullinan/jupyter_ops/Frameworks/node simple-imap.ipynb[6]",
        "filter command permission": "/Users/briancullinan/jupyter_ops/Core/rpc.ipynb[4]",
        "store rpc result": "/Users/briancullinan/jupyter_ops/Core/rpc.ipynb[5]",
        "mock all properties and functions using rewire": "/Users/briancullinan/jupyter_ops/Frameworks/autorewire.ipynb[1]",
        "cells": "/Users/briancullinan/jupyter_ops/Frameworks/test runner.ipynb[0]",
        "r.id": "/Users/briancullinan/jupyter_ops/Core/notebook.ipynb[0]",
        "test cells": "/Users/briancullinan/jupyter_ops/Frameworks/test runner.ipynb[0]",
        "{\n      require: function (string": "",
        "{ gulp }": "/Users/briancullinan/jupyter_ops/Frameworks/gulp.ipynb[0]",
        "cell": "/Users/briancullinan/jupyter_ops/Core/cache.ipynb[0]",
        "searches[k": "/Users/briancullinan/jupyter_ops/Algorithms/llama.ipynb[0]",
        "request polyfill": "/Users/briancullinan/jupyter_ops/Utilities/polyfills.ipynb[0]",
        "zuora to eloqua.ipynb[0": "/Users/briancullinan/jupyter_ops/Frameworks/zuora to eloqua.ipynb[0]",
        "http request polyfill": "/Users/briancullinan/jupyter_ops/Utilities/polyfills.ipynb[0]",
        "zuora renewals query": "/Users/briancullinan/jupyter_ops/Frameworks/zuora to eloqua.ipynb[3]",
        "eloqua create template": "/Users/briancullinan/jupyter_ops/Frameworks/zuora to eloqua.ipynb[10]",
        "eloqua import service": "/Users/briancullinan/jupyter_ops/Frameworks/zuora to eloqua.ipynb[5]",
        "eloqua import blueprints": "/Users/briancullinan/jupyter_ops/Frameworks/zuora to eloqua.ipynb[12]",
        "zuora account blueprints": "/Users/briancullinan/jupyter_ops/Frameworks/zuora to eloqua.ipynb[9]",
        "zuora eloqua mapper": "/Users/briancullinan/jupyter_ops/Frameworks/zuora to eloqua.ipynb[7]",
        "eloqua import create template": "/Users/briancullinan/jupyter_ops/Frameworks/zuora to eloqua.ipynb[10]",
        "eloqua existing import": "/Users/briancullinan/jupyter_ops/Frameworks/zuora to eloqua.ipynb[13]",
        "bulk upload eloqua": "/Users/briancullinan/jupyter_ops/Frameworks/zuora to eloqua.ipynb[23]",
        "zuora export month": "/Users/briancullinan/jupyter_ops/Frameworks/zuora to eloqua.ipynb[19]",
        "aws entry point": "/Users/briancullinan/jupyter_ops/Frameworks/zuora to eloqua.ipynb[15]",
        "zuora account service": "/Users/briancullinan/jupyter_ops/Frameworks/zuora to eloqua.ipynb[21]",
        "notify entry point": "/Users/briancullinan/jupyter_ops/Frameworks/zuora to eloqua.ipynb[17]",
        "zuora export service": "/Users/briancullinan/jupyter_ops/Frameworks/zuora to eloqua.ipynb[0]",
        "bulk upload service": "/Users/briancullinan/jupyter_ops/Frameworks/zuora to eloqua.ipynb[23]",
        "calculate price": "/Users/briancullinan/jupyter_ops/Frameworks/zuora to eloqua.ipynb[26]",
        "update a row in google sheets": "/Users/briancullinan/jupyter_ops/Google/google sheets.ipynb[8]",
        "get google data sheet": "/Users/briancullinan/jupyter_ops/Google/google sheets.ipynb[3]",
        "relevant llm history": "/Users/briancullinan/jupyter_ops/Algorithms/llm chat.ipynb[2]",
        "relevant llm keywords": "/Users/briancullinan/jupyter_ops/Algorithms/llm chat.ipynb[3]",
        "relevant history timestamps": "/Users/briancullinan/jupyter_ops/Algorithms/llm chat.ipynb[4]",
        "brians resume in html": "/Users/briancullinan/jupyter_ops/Frontends/brians resume.ipynb[12]",
        "extract llm article": "/Users/briancullinan/jupyter_ops/Selenium/scraping.ipynb[0]",
        "selenium client": "/Users/briancullinan/jupyter_ops/Selenium/webdriver.ipynb[0]",
        "summarize llm article": "/Users/briancullinan/jupyter_ops/Selenium/scraping.ipynb[2]",
        "resume chat program": "/Users/briancullinan/jupyter_ops/Frontends/brians resume.ipynb[10]",
        "handle conversation": "/Users/briancullinan/jupyter_ops/Algorithms/llm chat.ipynb[6]",
        "get google sheet info": "/Users/briancullinan/jupyter_ops/Google/google sheets.ipynb[2]",
        "add row data google sheet": "/Users/briancullinan/jupyter_ops/Google/google sheets.ipynb[6]",
        "templates google sheet": "/Users/briancullinan/jupyter_ops/Google/google sheets.ipynb[0]",
        "output google sheet template": "/Users/briancullinan/jupyter_ops/Frontends/convert spreadsheet.ipynb[6]",
        "google sheet template properties": "/Users/briancullinan/jupyter_ops/Frontends/convert spreadsheet.ipynb[4]",
        "collect google sheet resources": "/Users/briancullinan/jupyter_ops/Frontends/convert spreadsheet.ipynb[9]",
        "convert sheet helper functions": "/Users/briancullinan/jupyter_ops/Frontends/convert spreadsheet.ipynb[11]",
        "google sheet layout template": "/Users/briancullinan/jupyter_ops/Frontends/convert spreadsheet.ipynb[5]",
        "get worksheet rows": "/Users/briancullinan/jupyter_ops/Google/google sheets.ipynb[4]",
        "filter data sheet based on url": "/Users/briancullinan/jupyter_ops/Frontends/convert spreadsheet.ipynb[3]",
        "resolve promise property": "/Users/briancullinan/jupyter_ops/Core/patterns.ipynb[6]",
        "copy file storage bucket": "/Users/briancullinan/jupyter_ops/Cloud Services/google storage api.ipynb[5]",
        "collect external content and resources": "/Users/briancullinan/jupyter_ops/Frontends/convert spreadsheet.ipynb[8]",
        "find known routes to sheets": "/Users/briancullinan/jupyter_ops/Frontends/convert spreadsheet.ipynb[7]",
        "sheet marketing import": "/Users/briancullinan/jupyter_ops/Frontends/convert spreadsheet.ipynb[2]",
        "discord gateway": "/Users/briancullinan/jupyter_ops/Frontends/discord.ipynb[1]",
        "discord configuration": "/Users/briancullinan/jupyter_ops/Frontends/discord.ipynb[2]",
        "discord api": "/Users/briancullinan/jupyter_ops/Frontends/discord.ipynb[3]",
        "discord request": "/Users/briancullinan/jupyter_ops/Frontends/discord.ipynb[0]",
        "update discord interaction with attachments": "/Users/briancullinan/jupyter_ops/Frontends/discord imagine.ipynb[0]",
        "whisk images": "/Users/briancullinan/jupyter_ops/Algorithms/llama vision.ipynb[13]",
        "disrcord api": "/Users/briancullinan/jupyter_ops/Frontends/discord.ipynb[3]",
        "discord stability proxy": "/Users/briancullinan/jupyter_ops/Frontends/discord imagine.ipynb[1]",
        "discord ollama vision": "/Users/briancullinan/jupyter_ops/Frontends/discord imagine.ipynb[3]",
        "express service": "/Users/briancullinan/jupyter_ops/Frameworks/node express.ipynb[0]",
        "discord llm interactions": "/Users/briancullinan/jupyter_ops/Frontends/discord tools.ipynb[5]",
        "node express directory handler": "/Users/briancullinan/jupyter_ops/Frameworks/node express.ipynb[13]",
        "discord bot configuration": "/Users/briancullinan/jupyter_ops/Frontends/discord.ipynb[2]",
        "discord client auth code": "/Users/briancullinan/jupyter_ops/Frontends/discord activities.ipynb[1]",
        "remote desktop client": "/Users/briancullinan/jupyter_ops/Frontends/discord remote.ipynb[3]",
        "client input remote code": "/Users/briancullinan/jupyter_ops/Frontends/discord remote.ipynb[4]",
        "node screenshots": "/Users/briancullinan/jupyter_ops/Utilities/robot.ipynb[0]",
        "mouse move": "/Users/briancullinan/jupyter_ops/Google/google scheduling.ipynb[3]",
        "mouse click": "/Users/briancullinan/jupyter_ops/Utilities/robot.ipynb[4]",
        "send keys": "/Users/briancullinan/jupyter_ops/Utilities/robot.ipynb[5]",
        "collect all bookmarks": "/Users/briancullinan/jupyter_ops/Analytics/data collection.ipynb[11]",
        "system usage png buffer": "/Users/briancullinan/jupyter_ops/Utilities/usage.ipynb[2]",
        "test article summarizer": "/Users/briancullinan/jupyter_ops/Selenium/scraping.ipynb[3]",
        "llm voice": "/Users/briancullinan/jupyter_ops/Algorithms/llama vision.ipynb[5]",
        "interaction": "/Users/briancullinan/jupyter_ops/Frameworks/jupyter interaction.ipynb[0]",
        "interaction.data.options[0].value": "",
        "create message image attachments": "/Users/briancullinan/jupyter_ops/Frontends/discord tools.ipynb[9]",
        "write creatively llm": "/Users/briancullinan/jupyter_ops/Algorithms/llm writing.ipynb[1]",
        "business plan llm": "/Users/briancullinan/jupyter_ops/Algorithms/llm writing.ipynb[0]",
        "research paper llm": "/Users/briancullinan/jupyter_ops/Algorithms/llm writing.ipynb[3]",
        "discord llm connector": "/Users/briancullinan/jupyter_ops/Frontends/discord tools.ipynb[2]",
        "discord writing llms": "/Users/briancullinan/jupyter_ops/Frontends/discord tools.ipynb[3]",
        "argue with multiple llms": "/Users/briancullinan/jupyter_ops/Algorithms/llm writing.ipynb[2]",
        "discord pdf converter": "/Users/briancullinan/jupyter_ops/Frontends/discord tools.ipynb[0]",
        "discord notebook connector": "/Users/briancullinan/jupyter_ops/Frontends/discord tools.ipynb[1]",
        "discord mesh generator": "/Users/briancullinan/jupyter_ops/Frontends/discord tools.ipynb[4]",
        "discord utilities": "/Users/briancullinan/jupyter_ops/Frontends/discord.ipynb[10]",
        "system usage report": "/Users/briancullinan/jupyter_ops/Utilities/usage.ipynb[0]",
        "discord authorize": "/Users/briancullinan/jupyter_ops/Frontends/discord.ipynb[0]",
        "discord channels": "/Users/briancullinan/jupyter_ops/Frontends/discord.ipynb[5]",
        "discord guilds": "/Users/briancullinan/jupyter_ops/Frontends/discord.ipynb[7]",
        "discord messages": "/Users/briancullinan/jupyter_ops/Frontends/discord.ipynb[4]",
        "discord commands": "/Users/briancullinan/jupyter_ops/Frontends/discord.ipynb[6]",
        "discord threads": "/Users/briancullinan/jupyter_ops/Frontends/discord.ipynb[8]",
        "discord users": "/Users/briancullinan/jupyter_ops/Frontends/discord.ipynb[9]",
        "discord authorization": "/Users/briancullinan/jupyter_ops/Frontends/discord.ipynb[10]",
        "test rpc permissions": "/Users/briancullinan/jupyter_ops/Core/rpc.ipynb[3]",
        "convert notebook to open api": "/Users/briancullinan/jupyter_ops/Frontends/documentation.ipynb[0]",
        "javadoc template": "/Users/briancullinan/jupyter_ops/Frontends/documentation.ipynb[6]",
        "documentation stylsheet": "/Users/briancullinan/jupyter_ops/Frontends/documentation.ipynb[7]",
        "write gist files": "/Users/briancullinan/jupyter_ops/Frontends/edit anywhere.ipynb[3]",
        "get scraped page": "/Users/briancullinan/jupyter_ops/Frontends/edit anywhere.ipynb[10]",
        "read gist files": "/Users/briancullinan/jupyter_ops/Frontends/edit anywhere.ipynb[1]",
        "apply acl to html": "/Users/briancullinan/jupyter_ops/Frontends/edit anywhere.ipynb[6]",
        "git file tree": "/Users/briancullinan/jupyter_ops/Frontends/edit anywhere.ipynb[5]",
        "read crawl files": "/Users/briancullinan/jupyter_ops/Frontends/edit anywhere.ipynb[10]",
        "scope css": "/Users/briancullinan/jupyter_ops/Frontends/edit anywhere.ipynb[8]",
        "ckeditor configuration": "/Users/briancullinan/jupyter_ops/Frontends/edit anywhere.ipynb[11]",
        "serve linkedin login": "/Users/briancullinan/jupyter_ops/Frontends/linkedin.ipynb[22]",
        "linkedin load profile": "/Users/briancullinan/jupyter_ops/Frontends/linkedin.ipynb[19]",
        "linkedin login page": "/Users/briancullinan/jupyter_ops/Frontends/linkedin.ipynb[5]",
        "linkedin homepage": "/Users/briancullinan/jupyter_ops/Frontends/linkedin.ipynb[6]",
        "linkedin index": "/Users/briancullinan/jupyter_ops/Frontends/linkedin.ipynb[4]",
        "linkedin profile": "/Users/briancullinan/jupyter_ops/Frontends/linkedin.ipynb[13]",
        "linkedin experience view row": "/Users/briancullinan/jupyter_ops/Frontends/linkedin.ipynb[17]",
        "linkedin education view row": "/Users/briancullinan/jupyter_ops/Frontends/linkedin.ipynb[14]",
        "linkedin edit": "/Users/briancullinan/jupyter_ops/Frontends/linkedin.ipynb[18]",
        "linkedin experience edit row": "/Users/briancullinan/jupyter_ops/Frontends/linkedin.ipynb[16]",
        "linkedin education edit row": "/Users/briancullinan/jupyter_ops/Frontends/linkedin.ipynb[15]",
        "linkedin network profile list": "/Users/briancullinan/jupyter_ops/Frontends/linkedin.ipynb[8]",
        "linkedin network html": "/Users/briancullinan/jupyter_ops/Frontends/linkedin.ipynb[7]",
        "linkedin job edit item": "/Users/briancullinan/jupyter_ops/Frontends/linkedin.ipynb[12]",
        "linkedin job list item": "/Users/briancullinan/jupyter_ops/Frontends/linkedin.ipynb[11]",
        "linkedin edit jobs template": "/Users/briancullinan/jupyter_ops/Frontends/linkedin.ipynb[10]",
        "linkedin jobs template": "/Users/briancullinan/jupyter_ops/Frontends/linkedin.ipynb[9]",
        "opengl frame": "/Users/briancullinan/jupyter_ops/Frontends/opengl.ipynb[3]",
        "opengl context": "/Users/briancullinan/jupyter_ops/Frontends/opengl.ipynb[0]",
        "shader toy": "/Users/briancullinan/jupyter_ops/Frontends/opengl.ipynb[4]",
        "fragment shader": "/Users/briancullinan/jupyter_ops/Frontends/opengl.ipynb[5]",
        "qt qml widget": "/Users/briancullinan/jupyter_ops/Frontends/qt.ipynb[2]",
        "authorize google calendar": "/Users/briancullinan/jupyter_ops/Google/google calendar.ipynb[0]",
        "update row in google sheets": "/Users/briancullinan/jupyter_ops/Google/google sheets.ipynb[8]",
        "receive an authentication code from google": "/Users/briancullinan/jupyter_ops/Frontends/study sauce.ipynb[3]",
        "filepath=sys.argv[4": "",
        "md4 checksum": "/Users/briancullinan/jupyter_ops/Games/quake 3.ipynb[7]",
        "crc checksum file": "/Users/briancullinan/jupyter_ops/Games/quake 3.ipynb[8]",
        "changing file names": "/Users/briancullinan/jupyter_ops/Core/files.ipynb[15]",
        "quake 3 file whitelist": "/Users/briancullinan/jupyter_ops/Games/quake 3.ipynb[14]",
        "replace known classes in map": "/Users/briancullinan/jupyter_ops/Games/quake 3.ipynb[21]",
        "replace entities in map": "/Users/briancullinan/jupyter_ops/Games/quake 3.ipynb[22]",
        "replace common textures in map": "/Users/briancullinan/jupyter_ops/Games/quake 3.ipynb[20]",
        "scale quake map": "/Users/briancullinan/jupyter_ops/Games/quake 3.ipynb[18]",
        "add skybox to map": "/Users/briancullinan/jupyter_ops/Games/quake 3.ipynb[23]",
        "draw hints in map": "/Users/briancullinan/jupyter_ops/Games/quake 3.ipynb[24]",
        "brush to vertex": "/Users/briancullinan/jupyter_ops/Games/quake 3.ipynb[26]",
        "translate quake map": "/Users/briancullinan/jupyter_ops/Games/quake 3.ipynb[19]",
        "bit buffer": "/Users/briancullinan/jupyter_ops/Utilities/bitbuffer.ipynb[0]",
        "balanced": "/Users/briancullinan/jupyter_ops/Languages/balanced.ipynb[0]",
        "list shaders in quake 3 shader": "/Users/briancullinan/jupyter_ops/Games/quake 3.ipynb[30]",
        "changing file name": "/Users/briancullinan/jupyter_ops/Core/files.ipynb[15]",
        "list textures in quake 3 map": "/Users/briancullinan/jupyter_ops/Games/quake 3.ipynb[29]",
        "authorize discord": "/Users/briancullinan/jupyter_ops/Frontends/discord.ipynb[0]",
        "respond discord commands": "/Users/briancullinan/jupyter_ops/Games/quake3 server connector.ipynb[2]",
        "quake 3 server commands": "/Users/briancullinan/jupyter_ops/Games/quake3 server connector.ipynb[6]",
        "challenge discord command": "/Users/briancullinan/jupyter_ops/Games/quake3 server connector.ipynb[4]",
        "format quake 3 response": "/Users/briancullinan/jupyter_ops/Games/quake3 server connector.ipynb[9]",
        "remove ctrl characters": "/Users/briancullinan/jupyter_ops/Games/quake3 server connector.ipynb[16]",
        "quake 3 server responses": "/Users/briancullinan/jupyter_ops/Games/quake3 server connector.ipynb[8]",
        "dns lookup": "/Users/briancullinan/jupyter_ops/Games/quake3 server connector.ipynb[15]",
        "huffman decode": "/Users/briancullinan/jupyter_ops/Games/quake3 server connector.ipynb[11]",
        "decode client message": "/Users/briancullinan/jupyter_ops/Games/quake3 server connector.ipynb[10]",
        "monitor q3 servers": "/Users/briancullinan/jupyter_ops/Games/quake3 server connector.ipynb[12]",
        "spectate q3 server": "/Users/briancullinan/jupyter_ops/Games/quake3 server connector.ipynb[18]",
        "quakejs utilities": "/Users/briancullinan/jupyter_ops/Games/quakejs.ipynb[3]",
        "quakejs parsing": "/Users/briancullinan/jupyter_ops/Games/quakejs.ipynb[2]",
        "quakejs connection": "/Users/briancullinan/jupyter_ops/Games/quakejs.ipynb[1]",
        "how to list events": "/Users/briancullinan/jupyter_ops/Google/google calendar.ipynb[1]",
        "sum a list of events": "/Users/briancullinan/jupyter_ops/Utilities/dates.ipynb[2]",
        "convert date to ISO": "/Users/briancullinan/jupyter_ops/Utilities/dates.ipynb[1]",
        "convert chrome date to calendar date": "/Users/briancullinan/jupyter_ops/Google/google calendar data.ipynb[1]",
        "order google takeout": "/Users/briancullinan/jupyter_ops/Selenium/google takeout.ipynb[1]",
        "sync chrome history": "/Users/briancullinan/jupyter_ops/Google/google calendar data.ipynb[6]",
        "sync chrome bookmarks": "/Users/briancullinan/jupyter_ops/Google/google calendar data.ipynb[5]",
        "sync chrome data": "/Users/briancullinan/jupyter_ops/Google/google calendar data.ipynb[7]",
        "number of days between events": "/Users/briancullinan/jupyter_ops/Utilities/dates.ipynb[3]",
        "display recurrence line graph": "/Users/briancullinan/jupyter_ops/Utilities/dates.ipynb[4]",
        "list events": "/Users/briancullinan/jupyter_ops/Google/google calendar.ipynb[1]",
        "d3 calendar": "/Users/briancullinan/jupyter_ops/Frameworks/d3 dates.ipynb[1]",
        "d3 swimlane": "/Users/briancullinan/jupyter_ops/Frameworks/d3 dates.ipynb[0]",
        "google oauth token client": "/Users/briancullinan/jupyter_ops/Selenium/google authorize.ipynb[0]",
        "correct dates time": "/Users/briancullinan/jupyter_ops/Google/google calendar.ipynb[4]",
        "commandEvent.event.summary.trim(": "",
        "heartbeat": "/Users/briancullinan/jupyter_ops/Utilities/heartbeat.ipynb[0]",
        "scrape facebook events": "/Users/briancullinan/jupyter_ops/Selenium/facebook data.ipynb[4]",
        "list google contacts": "/Users/briancullinan/jupyter_ops/Google/google contacts.ipynb[0]",
        "list google drive files": "/Users/briancullinan/jupyter_ops/Google/google drive.ipynb[2]",
        "insert google drive permissions": "/Users/briancullinan/jupyter_ops/Google/google drive.ipynb[3]",
        "authorize google drive": "/Users/briancullinan/jupyter_ops/Google/google drive.ipynb[0]",
        "authorize sheets api": "/Users/briancullinan/jupyter_ops/Google/google sheets.ipynb[10]",
        "create a sheet in google drive": "/Users/briancullinan/jupyter_ops/Google/google drive.ipynb[4]",
        "merge google drive": "/Users/briancullinan/jupyter_ops/Google/google drive.ipynb[7]",
        "get sheet identifier": "/Users/briancullinan/jupyter_ops/Frontends/convert spreadsheet.ipynb[1]",
        "copy a file on google drive": "/Users/briancullinan/jupyter_ops/Google/google drive.ipynb[6]",
        "places nearby api": "/Users/briancullinan/jupyter_ops/Google/google maps.ipynb[0]",
        "extract depth maps": "/Users/briancullinan/jupyter_ops/Google/google maps.ipynb[4]",
        "load google panorama": "/Users/briancullinan/jupyter_ops/Google/google maps.ipynb[5]",
        "authorize custom search": "/Users/briancullinan/jupyter_ops/Google/google search api.ipynb[2]",
        "get worksheet by name": "/Users/briancullinan/jupyter_ops/Google/google sheets.ipynb[7]",
        "ext to lang": "/Users/briancullinan/jupyter_ops/Languages/antlr.ipynb[11]",
        "antlr to html": "/Users/briancullinan/jupyter_ops/Languages/antlr.ipynb[4]",
        "get antlr tool": "/Users/briancullinan/jupyter_ops/Languages/antlr.ipynb[3]",
        "antlr tree to es": "/Users/briancullinan/jupyter_ops/Languages/antlr.ipynb[8]",
        "rgb 2 lab": "/Users/briancullinan/jupyter_ops/Utilities/ciede2000.ipynb[1]",
        "jisonFile": "/Users/briancullinan/jupyter_ops/Selenium/google timeline.ipynb[5]",
        "rosetta euler csharp 005": "/Users/briancullinan/jupyter_ops/Languages/csharp.ipynb[0]",
        "select json": "/Users/briancullinan/jupyter_ops/Languages/json.ipynb[0]",
        "balanced.ipynb[0": "/Users/briancullinan/jupyter_ops/Languages/balanced.ipynb[0]",
        "expand": "/Users/briancullinan/jupyter_ops/Languages/minimatch.ipynb[0]",
        "mini parser": "/Users/briancullinan/jupyter_ops/Languages/minimatch.ipynb[1]",
        "get antrl tool": "/Users/briancullinan/jupyter_ops/Languages/antlr.ipynb[3]",
        "selenium docker": "/Users/briancullinan/jupyter_ops/Docker/docker demo.ipynb[1]",
        "webdriver client": "/Users/briancullinan/jupyter_ops/Selenium/webdriver.ipynb[0]",
        "decrypt password": "/Users/briancullinan/jupyter_ops/Selenium/service auth.ipynb[0]",
        "all elements xpath": "/Users/briancullinan/jupyter_ops/Selenium/utilities.ipynb[1]",
        "get all elements until": "/Users/briancullinan/jupyter_ops/Selenium/utilities.ipynb[1]",
        "resize selenium window": "/Users/briancullinan/jupyter_ops/Selenium/orchestration.ipynb[0]",
        "click spa link": "/Users/briancullinan/jupyter_ops/Selenium/utilities.ipynb[2]",
        "]": "",
        "context": "/Users/briancullinan/jupyter_ops/Games/quake 3.ipynb[11]",
        "form utilities": "/Users/briancullinan/jupyter_ops/Selenium/forms.ipynb[0]",
        "{\n                client: {\n                    execute: (func": "",
        "...args": "",
        "run selenium cell": "/Users/briancullinan/jupyter_ops/Selenium/What is Selenium.ipynb[2]",
        "log in facebook": "/Users/briancullinan/jupyter_ops/Selenium/facebook data.ipynb[0]",
        "list facebook threads": "/Users/briancullinan/jupyter_ops/Selenium/facebook messaging.ipynb[3]",
        "messages from facebook'\n]": "/Users/briancullinan/jupyter_ops/Selenium/facebook messaging.ipynb[4]",
        "{client}": "/Users/briancullinan/jupyter_ops/Frontends/discord remote.ipynb[4]",
        "scrape facebook profile": "/Users/briancullinan/jupyter_ops/Selenium/facebook data.ipynb[1]",
        "all elements until": "/Users/briancullinan/jupyter_ops/Selenium/utilities.ipynb[1]",
        "facebook login": "/Users/briancullinan/jupyter_ops/Selenium/facebook webdriver.ipynb[0]",
        "fill select dropdown": "/Users/briancullinan/jupyter_ops/Selenium/forms.ipynb[1]",
        "map object form": "/Users/briancullinan/jupyter_ops/Selenium/forms.ipynb[2]",
        "log in google": "/Users/briancullinan/jupyter_ops/Google/google drive.ipynb[7]",
        "load locations export data": "/Users/briancullinan/jupyter_ops/Selenium/google timeline.ipynb[4]",
        "average latitude longitude": "/Users/briancullinan/jupyter_ops/Selenium/google timeline.ipynb[2]",
        "reconcile timeline calendar": "/Users/briancullinan/jupyter_ops/Selenium/google timeline.ipynb[5]",
        "get all session urls": "/Users/briancullinan/jupyter_ops/Selenium/orchestration.ipynb[3]",
        "set up selenium server": "/Users/briancullinan/jupyter_ops/Selenium/What is Selenium.ipynb[0]",
        "reddit login": "/Users/briancullinan/jupyter_ops/Selenium/reddit.ipynb[0]",
        "selenium query": "/Users/briancullinan/jupyter_ops/Selenium/webdriver.ipynb[7]",
        "reddit post": "/Users/briancullinan/jupyter_ops/Selenium/reddit.ipynb[1]",
        "reddit scraper": "/Users/briancullinan/jupyter_ops/Selenium/reddit.ipynb[5]",
        "reddit month of links": "/Users/briancullinan/jupyter_ops/Selenium/reddit.ipynb[4]",
        "convert summaries": "/Users/briancullinan/jupyter_ops/Selenium/scraping.ipynb[5]",
        "default link collector": "/Users/briancullinan/jupyter_ops/Selenium/scraping.ipynb[6]",
        "selenium select": "/Users/briancullinan/jupyter_ops/Selenium/webdriver.ipynb[6]",
        "summarize all articles": "/Users/briancullinan/jupyter_ops/Selenium/scraping.ipynb[4]",
        "{client": "/Users/briancullinan/jupyter_ops/Frontends/discord remote.ipynb[4]",
        "getCredentials}": "/Users/briancullinan/jupyter_ops/Utilities/bash.ipynb[6]",
        "add encrypted passwords.json": "/Users/briancullinan/jupyter_ops/Selenium/service auth.ipynb[1]",
        "scroll specific element": "/Users/briancullinan/jupyter_ops/Selenium/utilities.ipynb[0]",
        "verify human": "/Users/briancullinan/jupyter_ops/Selenium/utilities.ipynb[4]",
        "selenium sessions": "/Users/briancullinan/jupyter_ops/Selenium/webdriver.ipynb[1]",
        "selenium executor": "/Users/briancullinan/jupyter_ops/Selenium/webdriver.ipynb[4]",
        "selenium session": "/Users/briancullinan/jupyter_ops/Selenium/webdriver.ipynb[1]",
        "ciede2000": "/Users/briancullinan/jupyter_ops/Utilities/ciede2000.ipynb[0]",
        "mouse control c": "/Users/briancullinan/jupyter_ops/Utilities/robot.ipynb[6]",
        "shell parse": "/Users/briancullinan/jupyter_ops/Utilities/shell-parse.ipynb[0]",
        "+ thump +": "",
        "heartbeat thump": "/Users/briancullinan/jupyter_ops/Utilities/heartbeat.ipynb[0]",
        "`${__filename}[0]`": "",
        "https request": "/Users/briancullinan/jupyter_ops/Utilities/polyfills.ipynb[0]",
        "system usage graph": "/Users/briancullinan/jupyter_ops/Utilities/usage.ipynb[1]",
        "user32.dll": "",
        "SetLastError = true": "/Users/briancullinan/jupyter_ops/Core/syntax.ipynb[21]",
        "CharSet = CharSet.Unicode": "",
        "interpret all notebooks.ipynb": "",
        "search notebooks using gulp": "/Users/briancullinan/jupyter_ops/Frameworks/gulp.ipynb[5]",
        "list files in project": "/Users/briancullinan/jupyter_ops/Core/files.ipynb[5]",
        "render Angular modules": "/Users/briancullinan/jupyter_ops/Frameworks/Angular/angular render service.ipynb[0]",
        "browser socket service": "/Users/briancullinan/jupyter_ops/Frameworks/node express.ipynb[3]",
        "websocket subscription service": "/Users/briancullinan/jupyter_ops/Frameworks/node express.ipynb[2]",
        "message.service": "/Users/briancullinan/jupyter_ops/Frameworks/node express.ipynb[0]",
        "test sigma template": "/Users/briancullinan/jupyter_ops/Frameworks/test runner.ipynb[4]",
        "notebook-colors.js": "/Users/briancullinan/jupyter_ops/Frameworks/test runner.ipynb[5]",
        "realiable-websocket.js": "/Users/briancullinan/jupyter_ops/Frameworks/node express.ipynb[5]",
        "match language to grammar": "",
        "color-fader.js": "/Users/briancullinan/jupyter_ops/Frameworks/test runner.ipynb[9]",
        "git service list": "/Users/briancullinan/jupyter_ops/Frameworks/test runner.ipynb[16]",
        "attribute code": "/Users/briancullinan/jupyter_ops/Core/voidzero.ipynb[1]",
        "cache.ipynb": "/Users/briancullinan/jupyter_ops/Core/cache.ipynb",
        "cache locations nearby": "/Users/briancullinan/jupyter_ops/Google/google maps.ipynb[3]",
        "typeof INTERPRET[search] === 'undefined' ? search : INTERPRET[search": "/Users/briancullinan/jupyter_ops/Core/import.ipynb[7]",
        "INTERPRET[s] || s": "",
        "notebookPath": "/Users/briancullinan/jupyter_ops/Frameworks/test runner.ipynb[5]"
    },
    "services": [
        "Algorithms",
        "Core",
        "Utilities",
        "Languages",
        "Analytics",
        "Databases",
        "Google",
        "Selenium",
        "Frameworks",
        "Art",
        "Cloud Services",
        "Frontends",
        "Games",
        "demo.ipynb",
        "Docker",
        "Exercises",
        "Marketing"
    ]
}